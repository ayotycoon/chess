{"version":3,"sources":["chess/engine/PieceMovement.ts","chess/engine/ChessPiece.ts","chess/engine/ChessQueen.ts","chess/engine/ChessPawn.ts","chess/engine/ChessBishop.ts","chess/engine/ChessRook.ts","chess/engine/ChessKing.ts","chess/engine/ChessKnight.ts","chess/engine/ChessBoard.ts","chess/misc/Bar.tsx","env.ts","misc/functions.ts","misc/data.ts","misc/StateProvider.tsx","chess/index.tsx","Home.tsx","checkers/engine/PieceMovement.ts","checkers/engine/CheckerPiece.ts","checkers/engine/CheckerQueen.ts","checkers/engine/CheckerPawn.ts","checkers/misc/index.ts","checkers/engine/CheckerBoard.ts","checkers/index.tsx","misc/Navbar.tsx","StolenIn60Seconds/misc/types.ts","StolenIn60Seconds/misc/utils/Subscription.ts","StolenIn60Seconds/misc/utils/index.ts","StolenIn60Seconds/misc/modules/linkedlist.ts","StolenIn60Seconds/misc/models/Item.ts","StolenIn60Seconds/misc/models/Wall.ts","StolenIn60Seconds/misc/models/Circle.ts","StolenIn60Seconds/misc/models/ImageItem.ts","StolenIn60Seconds/misc/models/Gate.ts","StolenIn60Seconds/misc/models/Tool.ts","StolenIn60Seconds/misc/models/SafeBox.ts","StolenIn60Seconds/misc/scenes/Scene1.ts","StolenIn60Seconds/misc/draw.ts","StolenIn60Seconds/components/Button.tsx","StolenIn60Seconds/StageUI.tsx","StolenIn60Seconds/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PieceMovement","piece","prevPositionYIndex","prevPositionXIndex","positionYIndex","positionXIndex","id","name","icon","isPieceWhite","prevPosition","position","this","ChessPiece","availableXMovements","availableYMovements","el","chessBoard","ghostId","successfulMovements","ChessBoard","king","oppKing","anticipateOppMoves","_","i","board","length","j","cellPiece","availableMoves","forEach","m","anticipateMyMoves","cell","undefined","globalId","yIndex","xIndex","cb","movement","pieceHash","canmove","movements","temp","previousPositionYIndex","previousPositionXIndex","alert","addToMovement","type","ChessQueen","indexes","analyzeAndBreak","incY","incX","possiblePiece","push","Math","max","map","index","positionY","positionX","ChessPawn","_parent","prototype","move","apply","queen","incY1","incY2","ChessBishop","ChessRook","ChessKing","curr","ChessKnight","dummy","isWhiteTurnToPlay","killedHash","movementIndex","initiated","init","blackKing","whiteKing","JSON","stringify","r","n","getMovements","unshift","slice","Bar","pieceWidth","horizontal","arr","className","c","x","style","width","height","LOGGING","process","production","csvGenerator","data","csvContent","obj","row","toCSV","join","encodedUri","encodeURI","link","document","createElement","setAttribute","body","appendChild","click","NAVS","to","img","f","min","window","innerHeight","innerWidth","StateContext","createContext","stagePropsObj","content","getStageProps","StateProvider","children","useState","showNav","setShowNav","optionsClicked","setOptionsClicked","time","stageProps","_setStageProps","states","setStageProps","Provider","value","ChessGame","boardWidth","size","setSize","setBoard","movementHistory","setMovementHistory","setAvailableMoves","selectedPiece","setSelectedPiece","chessBoardRef","useRef","setIsWhiteTurnToPlay","canUndo","canRedo","setUndoAndRedo","useContext","reloadBoard","current","onPieceClick","y","o","toString","console","warn","a","useEffect","addEventListener","removeEventListener","display","shouldHighlight","onClick","backgroundColor","justifyContent","alignItems","color","performUndo","performRedo","padding","textAlign","key","fontSize","marginBottom","marginRight","Home","boundWidth","setBoundWidth","elem","querySelector","rect","getBoundingClientRect","nav","verticalAlign","background","backgroundSize","visibility","jumpPosition","CheckerPiece","CheckerBoard","clone","serialize","s","p","CheckerQueen","preArr","log","inBound","addToHash","hash","preventDFS","val","n1","n2","n3","n4","Object","values","CheckerPawn","checkerPieceDeSerialize","newBoard","newCheckerBoard","pos","deSerialize","str","checkerBoard","parse","_board","_movements","_movementIndex","_isWhiteTurnToPlay","_killedHash","_piece","CheckersGame","checkerBoardRef","localStorage","setItem","getItem","NavBar","Direction","history","useHistory","location","pathname","goBack","cursor","src","alt","float","Subscription","fns","Set","emit","fn","subscribe","add","unsubscribe","delete","gridToPosition","gridX","gridY","positionToGrid","keyboardObs","stageObs","node","next","prev","LinkedList","globalRef","head","tail","setCurr","_x","Item","ctx","state","grid","dimensions","xAxis","yAxis","noOfLines","draw","all","getState","debug","cordinates","getBoundaries","each","boundary","fillText","highlight","beginPath","strokeStyle","strokeRect","boundaries","param","action","StateActionItem","stateActionHistory","timeElapsedAction","second","resetToTime","_resetToTime","resetNode","Wall","lineWidth","fill","lines","diff","_short","shortWithPosition","longWithPosition","moveTo","lineTo","stroke","_long","updateGrid","HWall","VWall","Circle","goTo","previousPosition","getPreviousPosition","prevGrid","res","reject","accept","down","getPreviousGrid","up","right","left","arc","PI","fillStyle","currentSecond","ImageItem","Image","imgPromise","image","then","drawImage","Promise","resolve","onload","Flower","HCar","Gate","cross","opened","endX","endY","HGate","VGate","Tool","title","elapsed","Hammer","SmallBomb","SafeBox","ui","VSafeBox","HSafeBox","MediumSafeBox","Scene1","canvas","canvasContainer","generateGrid","scene","player","stack","vertical","keyCb","validateMove","direction","isVertical","isHorizontal","increments","playerPosition","itemInteraction","getKeyCb","_moveFrame","frameX","frameY","movemtntPixel","scrollTop","scrollLeft","distWidth","clientWidth","distHeight","clientHeight","previousInStack","frame","scroll","total","scrollHeight","pop","scrollWidth","moveFrame","e","event","keyCode","ctrlKey","undo","valid","screenGrabbed","render","car","isGate","isSafeBox","toolsPrompt","tool","setActionState","getElapsed","clearRect","clearCanvas","generateScenes","getPlayerMoves","getLastActionSecond","drawLines","totalDrawn","group","getContext","globalCompositeOperation","fillRect","drawGrid","Button","props","borderRadius","disabled","UndoButton","GrabButton","enabled","CheckButton","CancelButton","Prompt","selectedTool","setSelectedTool","top","zIndex","maxWidth","activeTool","marginLeft","overflow","border","dataRef","TimePill","floor","seconds","fontWeight","StageUI","BottomPanel","bottom","margin","obs","StolenIn60SecondsGame","canvasRef","canvasContainerRef","handlers","useSwipeable","onSwiped","eventData","dir","delta","preventScrollOnSwipe","trackTouch","trackMouse","rotationAngle","swipeDuration","Infinity","touchEventOptions","passive","ref","touchAction","App","basename","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"iSAIaA,EAAb,WAaI,WACIC,EACAC,EACAC,EACAC,EACAC,GAED,yBAnBHC,QAmBE,OAlBFC,UAkBE,OAjBFC,UAiBE,OAhBFC,kBAgBE,OAdFP,wBAcE,OAbFC,wBAaE,OAZFO,kBAYE,OAXFN,oBAWE,OAVFC,oBAUE,OATFM,cASE,EAEEC,KAAKN,GAAKL,EAAMK,GAChBM,KAAKL,KAAON,EAAMM,KAClBK,KAAKJ,KAAOP,EAAMO,KAClBI,KAAKH,aAAeR,EAAMQ,aAC1BG,KAAKV,mBAAqBA,EAC1BU,KAAKT,mBAAqBA,EAC1BS,KAAKR,eAAiBA,EACtBQ,KAAKP,eAAiBA,EACtBO,KAAKF,aAAL,UAAuBG,EAAWC,oBAAoBF,KAAKT,qBAA3D,OAAiFU,EAAWE,oBAAoBH,KAAKV,qBACrHU,KAAKD,SAAL,UAAmBE,EAAWC,oBAAoBF,KAAKP,iBAAvD,OAAyEQ,EAAWE,oBAAoBH,KAAKR,iBA/BrH,0CAkCI,WACI,MAAO,CACHQ,KAAKN,GACLM,KAAKL,KACLK,KAAKJ,KACLI,KAAKH,aACLG,KAAKV,mBACLU,KAAKT,mBACLS,KAAKR,eACLQ,KAAKP,eACLO,KAAKF,aACLE,KAAKD,YA7CjB,mBAkDI,WACI,MAAO,CAEHC,KAAKL,KACLK,KAAKH,aAAa,QAAQ,QAK1BG,KAAKF,aACLE,KAAKD,YA5DjB,sBAiEI,SAASK,GACLJ,KAAKN,GAAKU,EAAG,GACbJ,KAAKL,KAAOS,EAAG,GACfJ,KAAKJ,KAAOQ,EAAG,GACfJ,KAAKH,aAAeO,EAAG,GACvBJ,KAAKV,mBAAqBc,EAAG,GAC7BJ,KAAKT,mBAAqBa,EAAG,GAC7BJ,KAAKR,eAAiBY,EAAG,GACzBJ,KAAKP,eAAiBW,EAAG,GACzBJ,KAAKF,aAAeM,EAAG,GACvBJ,KAAKD,SAAWK,EAAG,OA3E3B,KCCsBH,EAAtB,WAkBI,WACII,EACAb,EACAC,EACAI,EACAS,GACD,IAAD,gCAvBFX,KAAO,QAuBL,KAtBFC,KAAO,QAsBL,KAlBFH,eAAiB,EAkBf,KAjBFD,eAAiB,EAiBf,KAhBFK,cAAe,EAgBb,KAfFU,oBAAsB,EAepB,KAbFF,WAAyB,IAAIG,GAAW,GAatC,KAXFd,GAAK,EAWH,KATFe,KAAyB,KASvB,KARFC,QAA4B,KAQ1B,KAiBFC,mBAAqB,WAEjB,IADA,IAAMC,EAA+B,GAC5BC,EAAI,EAAGA,EAAI,EAAKR,WAAWS,MAAMC,OAAQF,IAC9C,IAAK,IAAIG,EAAI,EAAGA,EAAI,EAAKX,WAAWS,MAAMD,GAAGE,OAAQC,IAAK,CACtD,IAAMC,EAAY,EAAKZ,WAAWS,MAAMD,GAAGG,GACvCC,GAAaA,EAAUpB,eAAiB,EAAKA,cAC7CoB,EAAUC,iBACLC,SAAQ,SAAAC,GACLR,EAAEQ,EAAE5B,eAAiB,IAAM4B,EAAE3B,iBAAkB,KAMnE,OAAOmB,GA/BT,KAiCFS,kBAAoB,WAEhB,IADA,IAAMT,EAAI,GACDC,EAAI,EAAGA,EAAI,EAAKR,WAAWS,MAAMC,OAAQF,IAC9C,IAAK,IAAIG,EAAI,EAAGA,EAAI,EAAKX,WAAWS,MAAMD,GAAGE,OAAQC,IAAK,CACtD,IAAMM,EAAO,EAAKjB,WAAWS,MAAMD,GAAGG,GAClCM,GAAQA,EAAKzB,eAAiB,EAAKA,cACnCyB,EAAKJ,iBACAC,SAAQ,SAAAC,GACLR,EAAEQ,EAAE5B,eAAiB,IAAM4B,EAAE3B,iBAAkB,KAMnE,OAAOmB,GA/CT,KAoHFM,eAAiB,WACb,MAAO,SApHQK,GAAXjB,GACAL,EAAWuB,WACXxB,KAAKN,GAAKO,EAAWuB,UAErBxB,KAAKN,GAAKY,EAKdN,KAAKK,WAAaA,EAClBL,KAAKH,aAAeA,EACpBG,KAAKR,eAAiBA,EACtBQ,KAAKP,eAAiBA,EArC9B,wCA0EI,SAAKgC,EAAgBC,EAAgBC,GAAkB,IAAD,QAC5CC,EAAW,IAAIxC,EAAcY,KAAKK,WAAWwB,UAAU7B,KAAKN,IAAKM,KAAKR,eAAgBQ,KAAKP,eAAgBgC,EAAQC,GACnHR,EAAiBlB,KAAKkB,iBACxBY,GAAU,EAQd,GAPAZ,EAAeC,SAAQ,SAAAY,GAEfA,EAAUvC,iBAAmBiC,GAAUM,EAAUtC,iBAAmBiC,IACpEI,GAAU,OAIbA,EACD,OAAO,EAGX,IAAME,EAAOhC,KAAKK,WAAWS,MAAMd,KAAKR,gBAAgBQ,KAAKP,gBAI7DO,KAAKK,WAAWS,MAAMd,KAAKR,gBAAgBQ,KAAKP,gBAAkB,KAElE,IAAMwC,EAAyBjC,KAAKR,eAC9B0C,EAAyBlC,KAAKP,eAQpC,OAPAO,KAAKR,eAAiBiC,EACtBzB,KAAKP,eAAiBiC,EAGtB1B,KAAKK,WAAWS,MAAMd,KAAKR,gBAAgBQ,KAAKP,gBAAkBuC,EAEjDhC,KAAKW,sBACT,UAAAX,KAAKS,YAAL,eAAWjB,gBAAiB,KAA5B,UAAkCQ,KAAKS,YAAvC,aAAkC,EAAWhB,kBAGtD0C,MAAM,gBAENnC,KAAKK,WAAWS,MAAMd,KAAKR,gBAAgBQ,KAAKP,gBAAkB,KAElEO,KAAKR,eAAiByC,EACtBjC,KAAKP,eAAiByC,EAEtBlC,KAAKK,WAAWS,MAAMmB,GAAwBC,GAA0BF,GAGjE,IAEKhC,KAAKqB,qBACT,UAAArB,KAAKU,eAAL,eAAclB,gBAAiB,KAA/B,UAAqCQ,KAAKU,eAA1C,aAAqC,EAAcjB,kBAG3D0C,MAAM,SAMNR,GACAA,IAGJ3B,KAAKO,sBACLP,KAAKK,WAAW+B,cAAcR,IAEvB,KAxIf,sBAsJI,WACI,MAAO,CACHlC,GAAIM,KAAKN,GACTC,KAAMK,KAAKL,KACX0C,KAAMrC,KAAKH,aAAe,QAAU,QACpCE,SAAS,GAAD,OAAKE,EAAWC,oBAAoBF,KAAKP,iBAAzC,OAA2DQ,EAAWE,oBAAoBH,KAAKR,oBA3JnH,6BA+JI,WACI,MAAM,OAAN,OAAcQ,KAAKR,eAAnB,iBAA0CQ,KAAKP,oBAhKvD,KAAsBQ,EAGXC,oBAAsB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAH/CD,EAIXE,oBAAsB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAJ/CF,EAYXuB,SAAW,ECdf,IAAMc,EAAb,kDAGI,WACIjC,EACAb,EACAC,EACAI,EAAqBS,GAClB,IAAD,8BACF,cAAMD,EAAWb,EAAgBC,EAAeI,EAAaS,IARjEX,KAAO,QAOD,EANNC,KAAO,qBAMD,EAINsB,eAAiB,WAiCT,IAhCJ,IAAIqB,EAKE,GAOAC,EAAkB,SAACC,EAAKC,GAC1B,GAAGD,EAAO,GAAKA,EAAO,GAAKC,EAAO,GAAKA,EAAM,EAAG,OAAO,EACvD,IAAMC,EAAgB,EAAKtC,WAAWS,MAAM2B,GAAMC,GAClD,GAAKC,EAGE,OAAIA,EAAc9C,eAAiB,EAAKA,cAK3C0C,EAAQK,KAAK,CAAEpD,eAAgBiD,EAAMhD,eAAgBiD,KAH9C,EAJPH,EAAQK,KAAK,CAAEpD,eAAgBiD,EAAMhD,eAAgBiD,KAgBhD7B,EAAI,EAAKrB,eAAiB,EAAGqB,EAAI,EAAGA,IAAK,CAK9C,GAAI2B,EAJS3B,EACA,EAAKpB,gBAId,MAGR,IAAK,IAAIoB,EAAI,EAAKrB,eAAiB,EAAGqB,GAAK,EAAGA,IAAK,CAK/C,GAAI2B,EAJS3B,EACA,EAAKpB,gBAId,MAGR,IAAK,IAAIoB,EAAI,EAAKpB,eAAiB,EAAGoB,EAAI,EAAGA,IAAK,CAC9C,IAAM6B,EAAO7B,EAIb,GAAI2B,EAHS,EAAKhD,eAGQkD,GACtB,MAGR,IAAK,IAAI7B,EAAI,EAAKpB,eAAiB,EAAGoB,GAAK,EAAGA,IAAK,CAC/C,IAAM6B,EAAO7B,EAIb,GAAI2B,EAHS,EAAKhD,eAGQkD,GACtB,MAOR,IAAK,IAAI7B,EAAI,EAAGA,EAAK,EAAE,EAAKrB,eAAiBqB,IAAK,CAK9C,GAAI2B,EAJS,EAAKhD,eAAiBqB,EACtB,EAAKpB,eAAiBoB,GAI/B,MAGR,IAAK,IAAIA,EAAI,EAAGA,EAAIgC,KAAKC,IAAI,EAAKtD,eAAgB,EAAKC,gBAAiBoB,IAAK,CAKzE,GAAI2B,EAJS,EAAKhD,eAAiBqB,EACtB,EAAKpB,eAAgBoB,GAI9B,MAMR,IAAK,IAAIA,EAAI,EAAGA,EAAK,EAAE,EAAKrB,eAAiBqB,IAAK,CAK9C,GAAI2B,EAJS,EAAKhD,eAAiBqB,EACtB,EAAKpB,eAAiBoB,GAI/B,MAGR,IAAK,IAAIA,EAAI,EAAGA,GAAK,EAAKrB,eAAgBqB,IAAK,CAK3C,GAAI2B,EAJS,EAAKhD,eAAiBqB,EACtB,EAAKpB,eAAiBoB,GAI/B,MAWZ,OAAO0B,EAAQQ,KAAI,SAAAC,GACf,MAAO,CAEHxD,eAAgBwD,EAAMxD,eACtByD,UAAWhD,EAAWE,oBAAoB6C,EAAMxD,gBAChDC,eAAgBuD,EAAMvD,eACtByD,UAAWjD,EAAWC,oBAAoB8C,EAAMxD,qBAlItD,EARV,UAAgCS,GCCnBkD,EAAb,kDAIK,WACG9C,EACAb,EACAC,EACAI,EAAqBS,GAClB,IAAD,8BACF,cAAMD,EAAYb,EAAgBC,EAAgBI,EAAaS,IATnEX,KAAO,OAQD,EAPNC,KAAO,oBAOD,EANNwD,QAAUnD,EAAWoD,UAMf,EAINC,KAAO,SAAC7B,EAAeC,GAEnB,OAAO,EAAK0B,QAAQE,KAAKC,MAAlB,eAA8B,CAAC9B,EAAQC,EAAQ,WAElD,GAAI,EAAK7B,cAA2B,IAAX4B,IAAiB,EAAK5B,cAA2B,IAAX4B,EAAc,CAEzE,IAAM+B,EAAQ,IAAIlB,EAAW,EAAKjC,WAAYoB,EAAQ,EAAKhC,eAAgB,EAAKI,aAAa,EAAKH,IAClG8D,EAAM/C,KAAO,EAAKA,KAClB+C,EAAM9C,QAAU,EAAKA,QACrB,EAAKL,WAAWS,MAAM,EAAKtB,gBAAgB,EAAKC,gBAAkB+D,OAbxE,EAoBNtC,eAAiB,WAAO,IAAD,IACfqB,EAGE,GACAkB,EAAS,EAAK5D,cAAoB,EAAL,EAC7B6D,EAAS,EAAK7D,cAAoB,EAAL,EAyCnC,OAnCI,EAAKL,eAAiBiE,EAAQxD,EAAWC,oBAAoBa,QAAU,EAAKvB,eAAiBiE,GAAS,IAAM,EAAKpD,WAAWS,MAAM,EAAKtB,eAAiBiE,GAAO,EAAKhE,kBACpK8C,EAAQK,KAAK,CAAEpD,eAAgB,EAAKA,eAAiBiE,EAAOhE,eAAgB,EAAKA,iBAEhD,IAA7B,EAAKc,qBAGD,EAAKf,eAAiBkE,EAAQzD,EAAWE,oBAAoBY,QAAU,EAAKvB,eAAiBkE,GAAS,IAAM,EAAKrD,WAAWS,MAAM,EAAKtB,eAAiBkE,GAAO,EAAKjE,iBACpK8C,EAAQK,KAAK,CAAEpD,eAAgB,EAAKA,eAAiBkE,EAAOjE,eAAgB,EAAKA,kBAYzF,EAAKD,eAAiBiE,EAAQxD,EAAWE,oBAAoBY,QAAU,EAAKvB,eAAiBiE,GAAS,GAAM,EAAKpD,WAAWS,MAAM,EAAKtB,eAAiBiE,GAAO,EAAKhE,eAAiB,KAAK,YAAKY,WAAWS,MAAM,EAAKtB,eAAiBiE,GAAO,EAAKhE,eAAiB,UAAzE,eAA6EI,iBAAkB,EAAKA,cAC9R0C,EAAQK,KAAK,CAAEpD,eAAgB,EAAKA,eAAiBiE,EAAOhE,eAAgB,EAAKA,eAAiB,IAIlG,EAAKD,eAAiBiE,EAAQxD,EAAWE,oBAAoBY,QAAW,EAAKvB,eAAiBiE,GAAS,GAAK,EAAKpD,WAAWS,MAAM,EAAKtB,eAAiBiE,GAAO,EAAKhE,eAAiB,KAAK,YAAKY,WAAWS,MAAM,EAAKtB,eAAiBiE,GAAO,EAAKhE,eAAiB,UAAzE,eAA6EI,iBAAkB,EAAKA,cAC9R0C,EAAQK,KAAK,CAAEpD,eAAgB,EAAKA,eAAiBiE,EAAOhE,eAAgB,EAAKA,eAAiB,IAU/F8C,EAAQQ,KAAI,SAAAC,GACf,MAAO,CAEHxD,eAAgBwD,EAAMxD,eACtByD,UAAWhD,EAAWE,oBAAoB6C,EAAMxD,gBAChDC,eAAgBuD,EAAMvD,eACtByD,UAAWjD,EAAWC,oBAAoB8C,EAAMxD,qBAzEtD,EATV,UAA+BS,GCDlB0D,EAAb,kDAGK,WACGtD,EACAb,EACAC,EACAI,EAAqBS,GAClB,IAAD,8BACF,cAAMD,EAAYb,EAAgBC,EAAgBI,EAAaS,IARnEX,KAAO,SAOD,EANNC,KAAO,sBAMD,EAINsB,eAAiB,WAqCb,IApCA,IAAIqB,EAKE,GAOAC,EAAkB,SAACC,EAAMC,GAC3B,GAAID,EAAO,GAAKA,EAAO,GAAKC,EAAO,GAAKA,EAAO,EAAG,OAAO,EACzD,IAAMC,EAAgB,EAAKtC,WAAWS,MAAM2B,GAAMC,GAClD,GAAKC,EAGE,OAAIA,EAAc9C,eAAiB,EAAKA,cAK3C0C,EAAQK,KAAK,CAAEpD,eAAgBiD,EAAMhD,eAAgBiD,KAH9C,EAJPH,EAAQK,KAAK,CAAEpD,eAAgBiD,EAAMhD,eAAgBiD,KAoBpD7B,EAAI,EAAGA,EAAK,EAAI,EAAKrB,eAAiBqB,IAAK,CAKhD,GAAI2B,EAJS,EAAKhD,eAAiBqB,EACtB,EAAKpB,eAAiBoB,GAI/B,MAGR,IAAK,IAAIA,EAAI,EAAGA,EAAIgC,KAAKC,IAAI,EAAKtD,eAAgB,EAAKC,gBAAiBoB,IAAK,CAKzE,GAAI2B,EAJS,EAAKhD,eAAiBqB,EACtB,EAAKpB,eAAiBoB,GAI/B,MAMR,IAAK,IAAIA,EAAI,EAAGA,EAAK,EAAI,EAAKrB,eAAiBqB,IAAK,CAKhD,GAAI2B,EAJS,EAAKhD,eAAiBqB,EACtB,EAAKpB,eAAiBoB,GAI/B,MAGR,IAAK,IAAIA,EAAI,EAAGA,GAAKgC,KAAKC,IAAI,EAAKtD,eAAe,EAAKC,gBAAiBoB,IAAK,CAKzE,GAAI2B,EAJS,EAAKhD,eAAiBqB,EACtB,EAAKpB,eAAiBoB,GAI/B,MASR,OAAO0B,EAAQQ,KAAI,SAAAC,GACf,MAAO,CAEHxD,eAAgBwD,EAAMxD,eACtByD,UAAWhD,EAAWE,oBAAoB6C,EAAMxD,gBAChDC,eAAgBuD,EAAMvD,eACtByD,UAAWjD,EAAWC,oBAAoB8C,EAAMxD,qBA5FtD,EARV,UAAiCS,GCApB2D,EAAb,kDAGI,WACIvD,EACAb,EACAC,EACAI,EAAqBS,GAClB,IAAD,8BACF,cAAMD,EAAWb,EAAgBC,EAAeI,EAAaS,IARjEX,KAAO,OAOD,EANNC,KAAO,oBAMD,EAINsB,eAAiB,WAiCT,IAhCJ,IAAIqB,EAKE,GAOAC,EAAkB,SAACC,EAAKC,GAC1B,GAAGD,EAAO,GAAKA,EAAO,GAAKC,EAAO,GAAKA,EAAM,EAAG,OAAO,EACvD,IAAMC,EAAgB,EAAKtC,WAAWS,MAAM2B,GAAMC,GAClD,GAAKC,EAGE,OAAIA,EAAc9C,eAAiB,EAAKA,cAK3C0C,EAAQK,KAAK,CAAEpD,eAAgBiD,EAAMhD,eAAgBiD,KAH9C,EAJPH,EAAQK,KAAK,CAAEpD,eAAgBiD,EAAMhD,eAAgBiD,KAgBhD7B,EAAI,EAAKrB,eAAiB,EAAGqB,EAAI,EAAGA,IAAK,CAK9C,GAAI2B,EAJS3B,EACA,EAAKpB,gBAId,MAGR,IAAK,IAAIoB,EAAI,EAAKrB,eAAiB,EAAGqB,GAAK,EAAGA,IAAK,CAK/C,GAAI2B,EAJS3B,EACA,EAAKpB,gBAId,MAGR,IAAK,IAAIoB,EAAI,EAAKpB,eAAiB,EAAGoB,EAAI,EAAGA,IAAK,CAC9C,IAAM6B,EAAO7B,EAIb,GAAI2B,EAHS,EAAKhD,eAGQkD,GACtB,MAGR,IAAK,IAAI7B,EAAI,EAAKpB,eAAiB,EAAGoB,GAAK,EAAGA,IAAK,CAC/C,IAAM6B,EAAO7B,EAIb,GAAI2B,EAHS,EAAKhD,eAGQkD,GACtB,MAcZ,OAAOH,EAAQQ,KAAI,SAAAC,GACf,MAAO,CAEHxD,eAAgBwD,EAAMxD,eACtByD,UAAWhD,EAAWE,oBAAoB6C,EAAMxD,gBAChDC,eAAgBuD,EAAMvD,eACtByD,UAAWjD,EAAWC,oBAAoB8C,EAAMxD,qBA1FtD,EARV,UAA+BS,GCAlB4D,EAAb,kDAGI,WACIxD,EACAb,EACAC,EACAI,EAAqBS,GAClB,IAAD,8BAEF,cAAMD,EAAWb,EAAgBC,EAAeI,EAAaS,IATjEX,KAAO,OAOD,EANNC,KAAO,oBAMD,EAMNsB,eAAiB,WAmDT,IAlDJ,IAAIqB,EAKE,GAOAC,EAAkB,SAACC,EAAKC,GAC1B,GAAGD,EAAO,GAAKA,EAAO,GAAKC,EAAO,GAAKA,EAAM,EAAG,OAAO,EACvD,IAAMC,EAAgB,EAAKtC,WAAWS,MAAM2B,GAAMC,GAClD,GAAKC,EAGE,OAAIA,EAAc9C,eAAiB,EAAKA,cAK3C0C,EAAQK,KAAK,CAAEpD,eAAgBiD,EAAMhD,eAAgBiD,KAH9C,EAJPH,EAAQK,KAAK,CAAEpD,eAAgBiD,EAAMhD,eAAgBiD,KAiBvDX,EAAY,CACd,CAAC,EAAE,GACH,CAAC,EAAE,GACH,EAAE,EAAE,GACJ,CAAC,GAAG,GAEJ,CAAC,EAAE,GACH,EAAE,GAAG,GACL,EAAE,EAAE,GACJ,CAAC,GAAG,IAQKlB,EAAI,EAAGA,EAAIkB,EAAUhB,OAAQF,IAAK,CACvC,IAAMiD,EAAO/B,EAAUlB,GAKvB2B,EAJa,EAAKhD,eAAiBsE,EAAK,GAC3B,EAAKrE,eAAiBqE,EAAK,IAahD,OAAOvB,EAAQQ,KAAI,SAAAC,GACf,MAAO,CAEHxD,eAAgBwD,EAAMxD,eACtByD,UAAWhD,EAAWE,oBAAoB6C,EAAMxD,gBAChDC,eAAgBuD,EAAMvD,eACtByD,UAAWjD,EAAWC,oBAAoB8C,EAAMxD,qBA/EtD,EARV,UAA+BS,GCAlB8D,EAAb,kDAGK,WACG1D,EACAb,EACAC,EACAI,EAAqBS,GAClB,IAAD,8BACF,cAAMD,EAAWb,EAAgBC,EAAeI,EAAaS,IARjEX,KAAO,SAOD,EANNC,KAAO,sBAMD,EAONsB,eAAiB,WAuDT,IAtDJ,IAAIqB,EAKE,GAOAC,EAAkB,SAACC,EAAKC,GAE1B,GAAGD,EAAO,GAAKA,EAAO,GAAKC,EAAO,GAAKA,EAAM,EAAG,OAAO,EAIvD,IAAMC,EAAgB,EAAKtC,WAAWS,MAAM2B,GAAMC,GAClD,GAAKC,GAGE,GAAIA,EAAc9C,eAAiB,EAAKA,aAO3C,OAFA0C,EAAQK,KAAK,CAAEpD,eAAgBiD,EAAMhD,eAAgBiD,KAE9C,OATPH,EAAQK,KAAK,CAAEpD,eAAgBiD,EAAMhD,eAAgBiD,KAiBvDX,EAAY,CACd,CAAC,EAAE,GACH,CAAC,GAAG,GACJ,EAAE,EAAE,GACJ,EAAE,GAAG,GACL,CAAC,EAAE,GACH,CAAC,GAAG,GACJ,EAAE,EAAE,GACJ,EAAE,GAAG,IASIlB,EAAI,EAAGA,EAAIkB,EAAUhB,OAAQF,IAAK,CACvC,IAAMiD,EAAO/B,EAAUlB,GAKvB2B,EAJa,EAAKhD,eAAiBsE,EAAK,GAC3B,EAAKrE,eAAiBqE,EAAK,IAahD,OAAOvB,EAAQQ,KAAI,SAAAC,GACf,MAAO,CAEHxD,eAAgBwD,EAAMxD,eACtByD,UAAWhD,EAAWE,oBAAoB6C,EAAMxD,gBAChDC,eAAgBuD,EAAMvD,eACtByD,UAAWjD,EAAWC,oBAAoB8C,EAAMxD,qBApFtD,EARV,UAAiCS,GCQpBO,EAAb,WAiBI,aAA4B,IAAhBwD,EAAe,iFAhB3BlD,MAAkC,CAC9B,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAQpB,KAN3BmD,mBAAoB,EAMO,KAL3BpC,UAA0C,GAKf,KAJ3BqC,WAAmD,GAIxB,KAHnBnC,UAA6B,GAGV,KAF3BoC,cAAgB,EAEW,KADnBC,WAAY,EAEZpE,KAAKoE,WAAaJ,IAEtBhE,KAAKqE,OACLrE,KAAKoE,WAAY,GArBzB,wCAwBI,WAEI,IAAME,EAAY,IAAIT,EAAU7D,KAAM,EAAG,GAAG,GAC5CA,KAAKc,MAAM,GAAG,GAAKwD,EAEnBtE,KAAKc,MAAM,GAAG,GAAK,IAAI8C,EAAU5D,KAAM,EAAG,GAAG,GAC7CA,KAAKc,MAAM,GAAG,GAAK,IAAI8C,EAAU5D,KAAM,EAAG,GAAG,GAE7CA,KAAKc,MAAM,GAAG,GAAK,IAAIiD,EAAY/D,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIiD,EAAY/D,KAAM,EAAG,GAAG,GAE/CA,KAAKc,MAAM,GAAG,GAAK,IAAIwB,EAAWtC,KAAM,EAAG,GAAG,GAC9CA,KAAKc,MAAM,GAAG,GAAK,IAAI6C,EAAY3D,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAI6C,EAAY3D,KAAM,EAAG,GAAG,GAE/CA,KAAKc,MAAM,GAAG,GAAK,IAAIqC,EAAUnD,KAAM,EAAG,GAAG,GAC7CA,KAAKc,MAAM,GAAG,GAAK,IAAIqC,EAAUnD,KAAM,EAAG,GAAG,GAC7CA,KAAKc,MAAM,GAAG,GAAK,IAAIqC,EAAUnD,KAAM,EAAG,GAAG,GAC7CA,KAAKc,MAAM,GAAG,GAAK,IAAIqC,EAAUnD,KAAM,EAAG,GAAG,GAC7CA,KAAKc,MAAM,GAAG,GAAK,IAAIqC,EAAUnD,KAAM,EAAG,GAAG,GAC7CA,KAAKc,MAAM,GAAG,GAAK,IAAIqC,EAAUnD,KAAM,EAAG,GAAG,GAC7CA,KAAKc,MAAM,GAAG,GAAK,IAAIqC,EAAUnD,KAAM,EAAG,GAAG,GAC7CA,KAAKc,MAAM,GAAG,GAAK,IAAIqC,EAAUnD,KAAM,EAAG,GAAG,GAK7C,IAAMuE,EAAY,IAAIV,EAAU7D,KAAM,EAAG,GAAG,GAC5CA,KAAKc,MAAM,GAAG,GAAKyD,EACnBvE,KAAKc,MAAM,GAAG,GAAK,IAAI8C,EAAU5D,KAAM,EAAG,GAAG,GAC7CA,KAAKc,MAAM,GAAG,GAAK,IAAI8C,EAAU5D,KAAM,EAAG,GAAG,GAC7CA,KAAKc,MAAM,GAAG,GAAK,IAAIiD,EAAY/D,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIiD,EAAY/D,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIwB,EAAWtC,KAAM,EAAG,GAAG,GAC9CA,KAAKc,MAAM,GAAG,GAAK,IAAI6C,EAAY3D,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAI6C,EAAY3D,KAAM,EAAG,GAAG,GAE/CA,KAAKc,MAAM,GAAG,GAAK,IAAIqC,EAAUnD,KAAM,EAAG,GAAG,GAC7CA,KAAKc,MAAM,GAAG,GAAK,IAAIqC,EAAUnD,KAAM,EAAG,GAAG,GAC7CA,KAAKc,MAAM,GAAG,GAAK,IAAIqC,EAAUnD,KAAM,EAAG,GAAG,GAC7CA,KAAKc,MAAM,GAAG,GAAK,IAAIqC,EAAUnD,KAAM,EAAG,GAAG,GAC7CA,KAAKc,MAAM,GAAG,GAAK,IAAIqC,EAAUnD,KAAM,EAAG,GAAG,GAC7CA,KAAKc,MAAM,GAAG,GAAK,IAAIqC,EAAUnD,KAAM,EAAG,GAAG,GAC7CA,KAAKc,MAAM,GAAG,GAAK,IAAIqC,EAAUnD,KAAM,EAAG,GAAG,GAC7CA,KAAKc,MAAM,GAAG,GAAK,IAAIqC,EAAUnD,KAAM,EAAG,GAAG,GAO7C,IAAK,IAAIa,EAAI,EAAGA,EAAIb,KAAKc,MAAMC,OAAQF,IACnC,IAAK,IAAIG,EAAI,EAAGA,EAAIhB,KAAKc,MAAMD,GAAGE,OAAQC,IAAK,CAC3C,IAAMM,EAAOtB,KAAKc,MAAMD,GAAGG,GACvBM,IACAtB,KAAK6B,UAAUP,EAAK5B,IAAM4B,EACtBA,EAAKzB,cAELyB,EAAKb,KAAO8D,EACZjD,EAAKZ,QAAU4D,IAEfhD,EAAKZ,QAAU6D,EACfjD,EAAKb,KAAO6D,OAtFpC,sBAiGI,WACI,OAAOE,KAAKC,UAAUzE,KAAKc,MAAMiC,KAAI,SAAA2B,GAAC,OAAIA,EAAE3B,KAAI,SAAAnC,GAAC,OAAIA,EAAC,UAAMA,EAAElB,GAAR,YAAckB,EAAEjB,MAAS,gBAlGvF,qBAoGI,WACI,OAAQK,KAAKmE,cAAgBnE,KAAK+B,UAAUhB,SArGpD,qBAuGI,WACI,OAAQf,KAAKmE,cAAgB,GAAK,IAxG1C,yBA0GI,WAEI,IAAMvC,EAAW5B,KAAK+B,UAAU/B,KAAKmE,eAC/B9E,EAAQW,KAAKc,MAAMc,EAASpC,gBAAgBoC,EAASnC,gBAEtDJ,IAELA,EAAMG,eAAiBoC,EAAStC,mBAChCD,EAAMI,eAAiBmC,EAASrC,mBAGhCS,KAAKc,MAAMc,EAAStC,oBAAoBsC,EAASrC,oBAAsBF,EAEvEW,KAAKc,MAAMc,EAASpC,gBAAgBoC,EAASnC,gBAAkBO,KAAKkE,WAAWtC,EAASpC,eAAiB,IAAMoC,EAASnC,gBAExHO,KAAKmE,mBAzHb,yBA4HI,WACInE,KAAKmE,gBAEL,IAAMvC,EAAW5B,KAAK+B,UAAU/B,KAAKmE,eAC/B9E,EAAQW,KAAKc,MAAMc,EAAStC,oBAAoBsC,EAASrC,oBAC1DF,IAGLA,EAAMG,eAAiBoC,EAASpC,eAChCH,EAAMI,eAAiBmC,EAASnC,eAEhCO,KAAKc,MAAMc,EAASpC,gBAAgBoC,EAASnC,gBAAkBJ,EAE/DW,KAAKc,MAAMc,EAAStC,oBAAoBsC,EAASrC,oBAAsB,QAzI/E,2BA4II,SAAcqC,GACV,IAAM+C,EAAI3E,KAAK4E,eACfD,EAAEE,QAAQjD,GACV5B,KAAK+B,UAAY4C,EACjB3E,KAAKmE,cAAgB,IAhJ7B,0BAmJI,WACI,OAAOnE,KAAK+B,UAAU+C,MAAM9E,KAAKmE,mBApJzC,K,eCQeY,MAhBf,YAAuC,IAAzBC,EAAwB,EAAxBA,WAAWC,EAAa,EAAbA,WACfC,EAAMD,EAAahF,EAAWC,oBAAqBD,EAAWE,oBACxE,OAGgB,qBAAKgF,UAAWF,EAAY,QAAS,GAArC,SACKC,EAAInC,KAAI,SAACqC,EAAGC,GACT,OAAQ,qBAAaF,UAAWF,EAAY,QAAS,UAAWK,MAAO,CAAEC,MAAOP,EAAa,KAAMQ,OAAQR,EAAa,MAAhH,SACHI,GADaC,SCV7BI,GAAmBC,yIAAYC,WCa/BC,EAAe,SAACC,GAEzB,IAAIC,EAAa,+BAEjBD,EAAK1E,SAAQ,SAAU4E,GACnB,IAAIC,EAAMD,EAAIE,QAAQC,KAAK,KAC3BJ,GAAcE,EAAM,UAExB,IAAIG,EAAaC,UAAUN,GACvBO,EAAOC,SAASC,cAAc,KAClCF,EAAKG,aAAa,OAAQL,GAC1BE,EAAKG,aAAa,WAAY,eAC9BF,SAASG,KAAKC,YAAYL,GAE1BA,EAAKM,SC1BIC,EAAO,CAChB,CACIC,GAAG,SACHlH,KAAK,QACLmH,IAAIpB,kCAER,CACImB,GAAG,YACHlH,KAAK,WACLmH,IAAIpB,qCACF,CACFmB,GAAG,wBACHlH,KAAK,uBACLmH,IAAIpB,kCAeL,SAASqB,IACZ,OAAOlE,KAAKmE,IAAIC,OAAOC,YAAaD,OAAOE,aAAgB,KAAOF,OAAOE,WAAa,IAAM,IAAM,ICP/F,IAAMC,EAAeC,wBACxB,IAEEC,EAAe,CACjBC,QAAQ,IAKCC,EAAgB,WACzB,OAAOF,EAAcC,SAEZE,EAAgB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAC5B,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAqCJ,mBAAS,CAACK,KAAK,IAApD,mBAAOC,EAAP,KAAmBC,EAAnB,KAMMC,EAAS,CACXP,UAASC,aAAWC,iBAAgBC,oBAAkBE,aAAYG,cAN3C,SAACrC,GAExB,OADAuB,EAAcC,QAAUxB,EACjBmC,EAAenC,KAO1B,OACI,cAACqB,EAAaiB,SAAd,CAAuBC,MAAOH,EAA9B,SACKT,KCoJEa,MAzLf,WACI,MAAwBZ,mBAAS,CAC7Ba,WAAYzB,IACZ/B,WAAa+B,IAAO,IAFxB,mBAAO0B,EAAP,KAAaC,EAAb,KAIA,EAA0Bf,mBAAS,IAAnC,mBAAO7G,EAAP,KAAc6H,EAAd,KACA,EAA8ChB,mBAAS,IAAvD,mBAAOiB,EAAP,KAAwBC,EAAxB,KACA,EAA4ClB,mBAAS,IAArD,mBAAOzG,EAAP,KAAuB4H,EAAvB,KACA,EAA0CnB,mBAAS,MAAnD,mBAAOoB,EAAP,KAAsBC,EAAtB,KAEMC,EAAgBC,iBAAO,MAE7B,EAAkDvB,oBAAS,GAA3D,mBAAO1D,EAAP,KAA0BkF,EAA1B,KACA,EAA+CxB,mBAAS,CAAEyB,SAAS,EAAOC,SAAS,IAAnF,0BAASD,EAAT,EAASA,QAASC,EAAlB,EAAkBA,QAAWC,EAA7B,KAEA,EAA8BC,qBAAWnC,GAAzBS,GAAhB,EAAOD,QAAP,EAAgBC,YAEhB,SAAS2B,IACLP,EAAcQ,QAAQxF,mBAAqBgF,EAAcQ,QAAQxF,kBACjE0E,EAASM,EAAcQ,QAAQ3I,OAC/B+H,EAAmBI,EAAcQ,QAAQ7E,gBACzCkE,EAAkB,IAClBE,EAAiB,MACjBG,EAAqBF,EAAcQ,QAAQxF,mBAC3CqF,EAAe,CAAED,QAASJ,EAAcQ,QAAQJ,UAAWD,QAASH,EAAcQ,QAAQL,YAgC9F,SAASM,EAAarK,EAA0BsK,EAAWtE,GACvD,GAAInE,EAAeyI,EAAI,IAAMtE,GAAI,CAC7B,KAAI,OAAC0D,QAAD,IAACA,OAAD,EAACA,EAAezF,KAAKqG,EAAGtE,IAExB,OAGJmE,SAKG,GAAInK,EAAO,CAEd,GJlFWuK,EIiFJvK,EAAMwK,WJhFjBpE,GACJqE,QAAQC,KAAKH,GIgFD3F,IAAsB5E,EAAMQ,aAG5B,OAFAiJ,EAAkB,SAClBE,EAAiB,MAMrB,IAAMgB,EAAI3K,EAAM6B,iBAEVN,EAA+B,GACrCoJ,EAAE7I,SAAQ,SAAAC,GAENR,EAAEQ,EAAE5B,eAAiB,IAAM4B,EAAE3B,iBAAkB,KAGnDqJ,EAAkBlI,GAClBoI,EAAiB3J,QAGjByJ,EAAkB,IAClBE,EAAiB,MJvGP,IAACY,EIoHnB,OAvEAK,qBAAU,WACNpC,GAAW,GAPXoB,EAAcQ,QAAU,IAAIjJ,EAE5BgJ,IAOA,IAAM7H,EAAK,WACP,IAAM6G,EAAazB,IAGnB2B,EACI,CACIF,aACAxD,WALWwD,EAAa,KAWpC,OADAvB,OAAOiD,iBAAiB,SAAUvI,GAC3B,WACHsF,OAAOkD,oBAAoB,SAAUxI,MAI1C,IAmDC,qBAAKwD,UAAU,aAAf,SAEI,sBAAKA,UAAU,cAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,cAAC,EAAD,CAAKH,WAAYyD,EAAKzD,WAAYC,YAAU,IAC5C,sBAAKE,UAAU,iBAAf,UACI,cAAC,EAAD,CAAKH,WAAYyD,EAAKzD,WAAYC,YAAY,IAC9C,qBAAKE,UAAU,QAAQG,MAAO,CAAEC,MAAOkD,EAAKD,WAAa,KAAMhD,OAAQiD,EAAKD,WAAa,MAAzF,SAEK1H,EAAMiC,KAAI,SAACiD,EAA4B2D,GAEpC,OAAQ,qBAAaxE,UAAU,UAAUG,MAAO,CAAE8E,QAAS,QAAnD,SAIHpE,EAAIjD,KAAI,SAAC1D,EAA0BgG,GAEhC,IAAMgF,EAAkBnJ,EAAeyI,EAAI,IAAMtE,GACjD,OAAQ,qBAAKiF,QAAS,kBAAMZ,EAAarK,EAAOsK,EAAGtE,IAAYF,UAAU,UAAUG,MAAO,CAAEC,MAAOkD,EAAKzD,WAAa,KAAMQ,OAAQiD,EAAKzD,WAAa,KAAMuF,gBAAkBlF,EAAI,IAAM,KAAQsE,EAAI,IAAM,GAAK,6BAA+B,IAArO,SACJ,qBAAKxE,UAAY9F,EAAc4E,IAAsB5E,EAAMQ,aAAgB,sBAAwB,oBAA1E,GAA+FyF,MAAO,CAAEC,MAAO,MAAOC,OAAQ,MAAO4E,QAAS,OAAQI,eAAgB,SAAUC,WAAY,SAAUF,gBAAmBF,GAAmBhL,GAASA,IAAU0J,EAAsB,yBAAL,IAAzS,SACK1J,EAAQ,mBAAG8F,UAAW9F,EAAMO,KAAM0F,MAAO,CAAEoF,MAAQrL,EAAMQ,aAAe,QAAU,WAAoB,MAFnDwF,OAPlDsE,QA0B1B,cAAC,EAAD,CAAK3E,WAAYyD,EAAKzD,WAAYC,YAAY,OAElD,cAAC,EAAD,CAAKD,WAAYyD,EAAKzD,WAAYC,YAAU,IAC5C,sBAAKE,UAAU,cAAf,UACKiE,GAAW,yBAAQkB,QA/CxC,WACIrB,EAAcQ,QAAQkB,cACtBnB,KA6C0DrE,UAAU,MAAxC,eAAgD,mBAAGA,UAAU,kBACxEkE,GAAW,yBAAQiB,QApDxC,WACIrB,EAAcQ,QAAQmB,cACtBpB,KAkD0DrE,UAAU,MAAxC,eAAgD,mBAAGA,UAAU,wBAMjF,sBAAKA,UAAU,OAAOG,MAAO,CAAEuF,QAAS,QAAxC,UACI,sBAAK1F,UAAU,GAAGG,MAAO,CAAEuF,QAAS,UAApC,0BAEI,uBACA,mBAAG1F,UAAW,eAAgBG,MAAO,CAAEoF,MAAOzG,EAAoB,QAAU,WAC5E,uBACA,sBAAKqB,MAAO,CAAEwF,UAAW,UAAzB,UAC+B,GAA1BlC,EAAgB7H,QAAe,qCAC5B,wBAAQuJ,QAAS,WAAQ1E,EAAagD,IAAtC,SAA0D,mBAAGzD,UAAU,0BACvE,0BAEHyD,EAAgB7F,KAAI,SAACnB,EAAUmJ,GAE5B,OACI,sBAAKzF,MAAO,CAAE0F,SAAU,OAAQC,aAAc,MAAOb,QAAS,OAAQI,eAAgB,UAAtF,UACI,qBAAKlF,MAAO,CAAE4F,YAAa,OAA3B,SACI,mBAAG/F,UAAWvD,EAAShC,KAAM0F,MAAO,CAAEoF,MAAO9I,EAAS/B,aAAe,QAAU,aAEnF,gCACK+B,EAAS9B,aADd,IAC4B,mBAAGqF,UAAU,sBADzC,IACiEvD,EAAS7B,cALyBgL,YAd3H,aC5GDI,MArDf,WACE,MAAoCxD,mBAAS,GAA7C,mBAAOyD,EAAP,KAAmBC,EAAnB,KAWA,OATApB,qBAAU,WACR,IAAMqB,EAAOhF,SAASiF,cAAc,UAEhCC,EAAI,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAMG,wBAEjBJ,GAAkB,OAAJG,QAAI,IAAJA,OAAA,EAAAA,EAAMjG,QAAS,KAG5B,IAED,qBAAKJ,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SAEGyB,EAAK7D,KAAI,SAAC2I,EAAK7K,GACd,OACE,qBAAKnB,GAAG,QAAQyF,UAAU,+BAA1B,SAEE,eAAC,IAAD,CACEA,UAAU,kDAEV0B,GAAI6E,EAAI7E,GACRvB,MAAO,CACLE,OAAS4F,EAAa,GAAM,KAC5BO,cAAc,SACdC,WAAW,QAAD,OAAUF,EAAI5E,IAAd,MACV+E,eAAe,SARnB,UAYE,qBAAKvG,MAAO,CAACwG,WAAW,UAAxB,SAAoCJ,EAAI/L,OACxC,qBAAKwF,UAAU,kDAAf,SACGuG,EAAI/L,SAZFkB,a,QCxBRzB,EAAb,WAcI,WACIM,EACAC,EACAC,EACAC,EACAP,EACAC,EACAC,EACAC,GAGD,IAFCsM,EAEF,uDAF6B,GAE7B,yBAxBFrM,QAwBE,OAvBFC,UAuBE,OAtBFC,UAsBE,OArBFC,kBAqBE,OAnBFP,wBAmBE,OAlBFC,wBAkBE,OAjBFO,kBAiBE,OAhBFN,oBAgBE,OAfFC,oBAeE,OAdFM,cAcE,OAbFgM,kBAaE,EAEE/L,KAAKN,GAAKA,EACVM,KAAKL,KAAOA,EACZK,KAAKJ,KAAOA,EACZI,KAAKH,aAAeA,EACpBG,KAAKV,mBAAqBA,EAC1BU,KAAKT,mBAAqBA,EAC1BS,KAAKR,eAAiBA,EACtBQ,KAAKP,eAAiBA,EACtBO,KAAKF,aAAL,UAAuBkM,EAAa9L,oBAAoBF,KAAKT,qBAA7D,OAAmFyM,EAAa7L,oBAAoBH,KAAKV,qBACzHU,KAAKD,SAAL,UAAmBiM,EAAa9L,oBAAoBF,KAAKP,iBAAzD,OAA2EuM,EAAa7L,oBAAoBH,KAAKR,iBACjHQ,KAAK+L,aAAeA,EArC5B,0CAuCI,WACI,MAAO,CACH/L,KAAKN,GACLM,KAAKL,KACLK,KAAKJ,KACLI,KAAKH,aACLG,KAAKV,mBACLU,KAAKT,mBACLS,KAAKR,eACLQ,KAAKP,eACLO,KAAKF,aACLE,KAAKD,SACLC,KAAK+L,gBAnDjB,mBAuDI,WACI,MAAO,CAEH/L,KAAKL,KACLK,KAAKH,aAAe,QAAU,QAK9BG,KAAKF,aACLE,KAAKD,YAjEjB,sBAsEI,SAASK,GACLJ,KAAKN,GAAKU,EAAG,GACbJ,KAAKL,KAAOS,EAAG,GACfJ,KAAKJ,KAAOQ,EAAG,GACfJ,KAAKH,aAAeO,EAAG,GACvBJ,KAAKV,mBAAqBc,EAAG,GAC7BJ,KAAKT,mBAAqBa,EAAG,GAC7BJ,KAAKR,eAAiBY,EAAG,GACzBJ,KAAKP,eAAiBW,EAAG,GACzBJ,KAAKF,aAAeM,EAAG,GACvBJ,KAAKD,SAAWK,EAAG,GACnBJ,KAAK+L,aAAe3L,EAAG,MAjF/B,uBAoFI,WACI,MAAO,CACHJ,KAAKN,GACLM,KAAKL,KACLK,KAAKJ,KACLI,KAAKH,aACLG,KAAKV,mBACLU,KAAKT,mBACLS,KAAKR,eACLQ,KAAKP,eACLO,KAAK+L,kBA9FjB,KCIsBC,EAAtB,WAiBI,WACI3L,EACAb,EACAC,EACAI,EACAS,GACD,IAAD,gCAtBFX,KAAO,QAsBL,KArBFC,KAAO,QAqBL,KAjBFH,eAAiB,EAiBf,KAhBFD,eAAiB,EAgBf,KAfFK,cAAe,EAeb,KAdFU,oBAAsB,EAcpB,KAZFF,WAA2B,IAAI4L,GAAa,GAY1C,KAVFvM,GAAK,EAUH,KAiBFiB,mBAAqB,WAEjB,IADA,IAAMC,EAA+B,GAC5BC,EAAI,EAAGA,EAAI,EAAKR,WAAWS,MAAMC,OAAQF,IAC9C,IAAK,IAAIG,EAAI,EAAGA,EAAI,EAAKX,WAAWS,MAAMD,GAAGE,OAAQC,IAAK,CACtD,IAAMC,EAAY,EAAKZ,WAAWS,MAAMD,GAAGG,GACvCC,GAAaA,EAAUpB,eAAiB,EAAKA,cAC7CoB,EAAUC,iBACLC,SAAQ,SAAAC,GACLR,EAAEQ,EAAE5B,eAAiB,IAAM4B,EAAE3B,iBAAkB,KAMnE,OAAOmB,GA/BT,KAiCFS,kBAAoB,WAEhB,IADA,IAAMT,EAAI,GACDC,EAAI,EAAGA,EAAI,EAAKR,WAAWS,MAAMC,OAAQF,IAC9C,IAAK,IAAIG,EAAI,EAAGA,EAAI,EAAKX,WAAWS,MAAMD,GAAGE,OAAQC,IAAK,CACtD,IAAMM,EAAO,EAAKjB,WAAWS,MAAMD,GAAGG,GAClCM,GAAQA,EAAKzB,eAAiB,EAAKA,cACnCyB,EAAKJ,iBACAC,SAAQ,SAAAC,GACLR,EAAEQ,EAAE5B,eAAiB,IAAM4B,EAAE3B,iBAAkB,KAMnE,OAAOmB,GA/CT,KAgGFM,eAAiB,WACb,MAAO,IAjGT,KAwHFgL,MAAQ,WACJ,OAAO,MAzHT,KA2HFC,UAAY,WAAuB,IAAtBtC,EAAqB,wDACxBuC,EAAI,CACN,EAAK1M,GACL,EAAKC,KACL,EAAKC,KACL,EAAKJ,eACL,EAAKC,eACL,EAAKI,aACL,EAAKU,qBAET,OAAOsJ,EAAWrF,KAAKC,UAAU2H,GAAKA,QApIvB7K,GAAXjB,GACA0L,EAAaxK,WACbxB,KAAKN,GAAKsM,EAAaxK,UAEvBxB,KAAKN,GAAKY,EAKdN,KAAKK,WAAaA,EAClBL,KAAKH,aAAeA,EACpBG,KAAKR,eAAiBA,EACtBQ,KAAKP,eAAiBA,EApC9B,wCAyEI,SAAKgC,EAAgBC,EAAgBC,GACjC,IAAMT,EAAiBlB,KAAKkB,iBACxBY,GAAU,EACViK,OAAuCxK,EAC3CL,EAAeC,SAAQ,SAAAY,GAEfA,EAAUvC,iBAAmBiC,GAAUM,EAAUtC,iBAAmBiC,IACpEI,GAAU,EACViK,EAAehK,EAAUgK,iBAGjC,IAAMM,EAAIrM,KAAKK,WAAWwB,UAAU7B,KAAKN,IACnCkC,EAAW,IAAIxC,EAAciN,EAAE3M,GAAG2M,EAAE1M,KAAK0M,EAAEzM,KAAKyM,EAAExM,aAAcG,KAAKR,eAAgBQ,KAAKP,eAAgBgC,EAAQC,EAAQqK,GAEhI,IAAKjK,EACD,OAAO,EAIX,IAAME,EAAOhC,KAAKK,WAAWS,MAAMd,KAAKR,gBAAgBQ,KAAKP,gBAI7DO,KAAKK,WAAWS,MAAMd,KAAKR,gBAAgBQ,KAAKP,gBAAkB,KAEnCO,KAAKR,eACLQ,KAAKP,eAgBpC,OAfAO,KAAKR,eAAiBiC,EACtBzB,KAAKP,eAAiBiC,EAGtB1B,KAAKK,WAAWS,MAAMd,KAAKR,gBAAgBQ,KAAKP,gBAAkBuC,EAI9DL,GACAA,IAGJ3B,KAAKO,sBACLP,KAAKK,WAAW+B,cAAcR,IAEvB,IAnHf,sBAmII,WACI,MAAO,CACHlC,GAAIM,KAAKN,GACTC,KAAMK,KAAKL,KACX0C,KAAMrC,KAAKH,aAAe,QAAU,QACpCE,SAAS,GAAD,OAAKiM,EAAa9L,oBAAoBF,KAAKP,iBAA3C,OAA6DuM,EAAa7L,oBAAoBH,KAAKR,oBAxIvH,6BA4II,WACI,MAAM,OAAN,OAAcQ,KAAKR,eAAnB,iBAA0CQ,KAAKP,oBA7IvD,KAAsBuM,EAGX9L,oBAAsB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAH/C8L,EAIX7L,oBAAsB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAJ/C6L,EAYXxK,SAAW,ECZf,IAAM8K,EAAb,kDAGI,WACIjM,EACAb,EACAC,EACAI,EAAuBS,GACxB,IAAD,8BACE,cAAMD,EAAYb,EAAgBC,EAAgBI,EAAcS,IARpEX,KAAO,QAOL,EANFC,KAAO,qBAML,EAIFsB,eAAiB,WAA+H,IAA9HqB,EAA6H,uDAAxG,GAAI7C,EAAoG,uDAA/F,EAAGF,EAA4F,uDAA3E,EAAKA,eAAgBC,EAAsD,uDAArC,EAAKA,eAAgB8M,EAAgB,uDAAP,GAE1H,GAAN7M,GACAoK,QAAQ0C,IAAI,CAAEhN,iBAAgBC,mBAmElC,IA/DA,IAAMgN,EAAU,SAAC5L,GAAD,OAAOA,GAAK,GAAKA,GAAK,GAChC6L,EAAY,SAACC,EAAMC,GACrBD,EAAKjN,GAAKA,EACV,IAAMqL,EAAM4B,EAAKnN,eAAiB,IAAMmN,EAAKlN,eACvCoN,EAAMtK,EAAQwI,GACf8B,GAAOnN,IAAOmN,EAAInN,IAAOqL,GAAO,EAAKvL,eAAiB,IAAM,EAAKC,iBACjEoN,IAGOA,EAAId,eAAiBY,EAAKZ,cAAgB,IAAIhL,OAAS8L,EAAId,aAAahL,UAChFwB,EAAQwI,GAAO4B,GAHfpK,EAAQwI,GAAO4B,EAShBC,GACH,EAAK1L,eAAeqB,EAAS7C,EAAK,EAAGiN,EAAKnN,eAAgBmN,EAAKlN,eAAgBkN,EAAKZ,cAAgB,MAIlGvJ,EAAkB,SAACC,EAAcC,EAAc7B,EAAWG,GAAuC,IAAD,EAA3BsH,EAA2B,uDAAP,GAG3F,IAAKmE,EAAQhK,KAAUgK,EAAQ/J,GAAO,OAAO,EAE7C,IAAMC,EAAgB,EAAKtC,WAAWS,MAAM2B,GAAMC,GAClD,GAAKC,EAOE,IAAIA,EAAc9C,eAAiB,EAAKA,aAE3C,OAAO,EAEJ,GAAI8C,EAAc9C,eAAiB,EAAKA,cAAgB4M,EAAQhK,EAAO5B,IAAM4L,EAAQ/J,EAAO1B,IAAmD,MAA7C,EAAKX,WAAWS,MAAM2B,EAAO5B,GAAG6B,EAAO1B,KAAc,YAAKX,WAAWS,MAAM2B,EAAO5B,GAAG6B,EAAO1B,UAAvC,eAA2CnB,eAAgB,EAAKA,aAE1N,OAAO,EAGF8C,EAAc9C,eAAiB,EAAKA,cAAgB4M,EAAQhK,EAAO5B,IAAM4L,EAAQ/J,EAAO1B,IAAmD,MAA7C,EAAKX,WAAWS,MAAM2B,EAAO5B,GAAG6B,EAAO1B,KAG1IsH,EAAM1F,KAAK,CAACH,EAAMC,IAClBgK,EAAU,CACNlN,eAAgBiD,EAAO5B,EACvBpB,eAAgBiD,EAAO1B,EACvB+K,aAAa,YAAKzD,UAvBN,CAChB,GAAU,GAAN5I,EAAS,OAAO,EACpBgN,EAAU,CAAElN,eAAgBiD,EAAMhD,eAAgBiD,IAAO,GA4B7D,OAAO,GAKLoK,EAAc,YAAOP,GAClB1L,EAAI,EAAGA,EAAK,EAAIrB,EAAiBqB,IAAK,CAC3C,IAAM4B,EAAOjD,EAAiBqB,EACxB6B,EAAOjD,EAAiBoB,EAE9B,GAAI2B,EAAgBC,EAAMC,EAAM,EAAG,EAAGoK,GAClC,MAKR,IADA,IAAMC,EAAc,YAAOR,GAClB1L,EAAI,EAAGA,EAAIgC,KAAKC,IAAItD,EAAgBC,GAAiBoB,IAAK,CAC/D,IAAM4B,EAAOjD,EAAiBqB,EACxB6B,EAAOjD,EAAiBoB,EAG9B,GAAI2B,EAAgBC,EAAMC,GAAO,GAAI,EAAGqK,GACpC,MAKR,IADA,IAAMC,EAAc,YAAOT,GAClB1L,EAAI,EAAGA,EAAK,EAAIrB,EAAiBqB,IAAK,CAC3C,IAAM4B,EAAOjD,EAAiBqB,EACxB6B,EAAOjD,EAAiBoB,EAE9B,GAAI2B,EAAgBC,EAAMC,EAAM,GAAI,EAAGsK,GACnC,MAIR,IADA,IAAMC,EAAc,YAAOV,GAClB1L,EAAI,EAAGA,GAAKrB,EAAgBqB,IAAK,CACtC,IAAM4B,EAAOjD,EAAiBqB,EACxB6B,EAAOjD,EAAiBoB,EAG9B,GAAI2B,EAAgBC,EAAMC,GAAO,EAAG,EAAGuK,GACnC,MAIR,OAAQC,OAAOC,OAAO5K,GAAUQ,KAAI,SAAAC,GAChC,MAAO,CAEHxD,eAAgBwD,EAAMxD,eACtByD,UAAW+I,EAAa7L,oBAAoB6C,EAAMxD,gBAClDC,eAAgBuD,EAAMvD,eACtByD,UAAW8I,EAAa9L,oBAAoB8C,EAAMxD,gBAClDuM,aAAc/I,EAAM+I,kBAzH9B,EA+HFG,MAAQ,WACJ,OAAO,IAAII,EAAa,EAAKjM,WAAY,EAAKb,eAAe,EAAKC,eAAgB,EAAKI,aAAa,EAAKH,KAhI3G,EARN,UAAkCsM,GCFrBoB,EAAb,kDAII,WACI/M,EACAb,EACAC,EACAI,EAAuBS,GACxB,IAAD,8BACE,cAAMD,EAAYb,EAAgBC,EAAgBI,EAAcS,IATpEX,KAAO,OAQL,EAPFC,KAAO,gBAOL,EANMwD,QAAU4I,EAAa3I,UAM7B,EAIFC,KAAO,SAAC7B,EAAgBC,GAEpB,OAAO,EAAK0B,QAAQE,KAAKC,MAAlB,eAA8B,CAAC9B,EAAQC,EAAQ,WAElD,GAAI,EAAK7B,cAA2B,IAAX4B,IAAiB,EAAK5B,cAA2B,IAAX4B,EAAc,CAEzE,IAAM+B,EAAQ,IAAI8I,EAAa,EAAKjM,WAAYoB,EAAQ,EAAKhC,eAAgB,EAAKI,aAAc,EAAKH,IAErG,EAAKW,WAAWS,MAAM,EAAKtB,gBAAgB,EAAKC,gBAAkB+D,OAZ5E,EAmBFtC,eAAiB,WAA+H,IAA9HqB,EAA6H,uDAAxG,GAAI7C,EAAoG,uDAA/F,EAAGF,EAA4F,uDAA3E,EAAKA,eAAgBC,EAAsD,uDAArC,EAAKA,eAAgB8M,EAAgB,uDAAP,GAE9HxK,EAAY,CACd,CAAC,EAAG,GACJ,EAAE,GAAI,GACN,CAAC,GAAI,GACL,EAAE,EAAG,IAGH0K,EAAU,SAAC5L,GAAD,OAAOA,GAAK,GAAKA,GAAK,GAChC6L,EAAY,SAACC,EAAMC,GACrBD,EAAKjN,GAAKA,EACV,IAAMqL,EAAM4B,EAAKnN,eAAiB,IAAMmN,EAAKlN,eACvCoN,EAAMtK,EAAQwI,GACd8B,GAAOnN,IAAOmN,EAAInN,IAAOqL,GAAO,EAAKvL,eAAiB,IAAM,EAAKC,iBAClEoN,IAGOA,EAAId,eAAiBY,EAAKZ,cAAgB,IAAIhL,OAAS8L,EAAId,aAAahL,UAChFwB,EAAQwI,GAAO4B,GAHfpK,EAAQwI,GAAO4B,EAShBC,GACH,EAAK1L,eAAeqB,EAAS7C,EAAK,EAAGiN,EAAKnN,eAAgBmN,EAAKlN,eAAgBkN,EAAKZ,cAAgB,MAIlGvJ,EAAkB,SAACC,EAAcC,EAAc7B,EAAWG,GAAuC,IAA5BsH,EAA2B,uDAAP,GAE3F,IAAKmE,EAAQhK,KAAUgK,EAAQ/J,GAAO,OAAO,EAI7C,IAAMC,EAAgB,EAAKtC,WAAWS,MAAM2B,GAAMC,GAClD,GAAKC,EAQMA,EAAc9C,eAAiB,EAAKA,cAIpC8C,EAAc9C,eAAiB,EAAKA,cAAgB4M,EAAQhK,EAAO5B,IAAM4L,EAAQ/J,EAAO1B,IAAmD,MAA7C,EAAKX,WAAWS,MAAM2B,EAAO5B,GAAG6B,EAAO1B,KAE5IsH,EAAM1F,KAAK,CAACH,EAAMC,IAElBgK,EAAU,CACNlN,eAAgBiD,EAAO5B,EACvBpB,eAAgBiD,EAAO1B,EACvB+K,aAAczD,SAnBF,CAChB,GAAU,GAAN5I,GACC,EAAKG,cAAgBL,EAAiBiD,IACrC,EAAK5C,cAAgBL,EAAiBiD,EACjC,OAAO,EAClBiK,EAAU,CAAElN,eAAgBiD,EAAMhD,eAAgBiD,IAAO,GAoB7D,OAAO,GAGLoK,EAAc,YAAOP,GAS3B,OARAxK,EAAUZ,SAAQ,SAAA2C,GACd,IAAMrB,EAAOjD,EAAiBsE,EAAK,GAC7BpB,EAAOjD,EAAiBqE,EAAK,GAGnCtB,EAAgBC,EAAMC,EAAMoB,EAAK,GAAIA,EAAK,GAAIgJ,MAG1CI,OAAOC,OAAO5K,GAAUQ,KAAI,SAAAC,GAChC,MAAO,CAEHxD,eAAgBwD,EAAMxD,eACtByD,UAAW+I,EAAa7L,oBAAoB6C,EAAMxD,gBAClDC,eAAgBuD,EAAMvD,eACtByD,UAAW8I,EAAa9L,oBAAoB8C,EAAMxD,gBAClDuM,aAAc/I,EAAM+I,kBApG9B,EAwGFG,MAAQ,WACJ,OAAO,IAAIkB,EAAY,EAAK/M,WAAY,EAAKb,eAAe,EAAKC,eAAgB,EAAKI,aAAa,EAAKH,KAzG1G,EATN,UAAiCsM,GCDpBqB,EAA0B,SAACxH,EAAsC/E,GAE1E,kBAQI+E,EARJ,GACInG,EADJ,KAEIC,EAFJ,KAGIC,EAHJ,KAIIJ,EAJJ,KAKIC,EALJ,KAMII,EANJ,KAOIU,EAPJ,KASIlB,EAA2C,KAE/C,OAAQM,GACJ,IAAK,QAEDN,EAAQ,IAAIiN,EAAaxL,EAAOtB,EAA0BC,EAA0BI,EAAyBH,GAC7G,MACJ,IAAK,OACDL,EAAQ,IAAI+N,EAAYtM,EAAOtB,EAA0BC,EAA0BI,EAAyBH,GAC5G,MAEJ,QACI,OAAO,KAOf,OAHAL,EAAMkB,oBAAsBA,EAC5BlB,EAAMO,KAAOA,EAENP,GCzBE4M,EAAb,WAQI,aAA4B,IAAD,OAAfjI,EAAe,iFAP3BlD,MAAqCmL,EAAaqB,WAOvB,KAN3BrJ,mBAAoB,EAMO,KAL3BpC,UAA4C,GAKjB,KAJ3BqC,WAAqD,GAI1B,KAHnBnC,UAA6B,GAGV,KAF3BoC,cAAgB,EAEW,KADnBC,WAAY,EACO,KAqE3B8H,MAAQ,WACJ,IAAMqB,EAAkB,IAAItB,GAAa,GACzCsB,EAAgBtJ,kBAAoB,EAAKA,kBACzCsJ,EAAgB1L,UAAY,EAAKA,UACjC0L,EAAgBxL,UAAY,EAAKA,UAEjC,IAAK,IAAIlB,EAAI,EAAGA,EAAI,EAAKC,MAAMC,OAAQF,IACnC,IAAK,IAAIG,EAAI,EAAGA,EAAI,EAAKF,MAAMD,GAAGE,OAAQC,IAAK,CAC3C,IAAMM,EAAO,EAAKR,MAAMD,GAAGG,GACvBM,IACAiM,EAAgBzM,MAAMD,GAAGG,GAAKM,EAAK4K,SAO/C,OAAOqB,GAtFgB,KA4I3BpB,UAAY,WAAuB,IAAtBtC,EAAqB,wDACxB/I,EAAQ,EAAKA,MAAMiC,KAAI,SAACiD,GAAD,OAAkCA,EAAIjD,KAAI,SAAC1D,GAAD,OAAyC,MAATA,EAAgB,KAAOA,EAAM8M,kBAC9HpK,EAAY,EAAKA,UAAUgB,KAAI,SAAA3B,GAAC,OAAIA,EAAE+K,eACtChI,EAAgB,EAAKA,cACrBF,EAAoB,EAAKA,kBACzBC,EAAagJ,OAAOC,OAAO,EAAKjJ,YAAYnB,KAAI,SAAC1D,GAAD,OAAgCA,EAAQA,EAAM8M,YAAc,QAE5GtG,EAAO,CAAC/E,EAAOiB,EAAWoC,EAAeF,EAAmBC,GAGlE,OAAO2F,EAAWrF,KAAKC,UAAUoB,GAAQA,GArJrC7F,KAAKoE,WAAaJ,IAEtBhE,KAAKqE,OACLrE,KAAKoE,WAAY,GAZzB,wCAeI,WACIpE,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAK/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAC/CA,KAAKc,MAAM,GAAG,GAAK,IAAIsM,EAAYpN,KAAM,EAAG,GAAG,GAI/C,IAAK,IAAIa,EAAI,EAAGA,EAAIb,KAAKc,MAAMC,OAAQF,IACnC,IAAK,IAAIG,EAAI,EAAGA,EAAIhB,KAAKc,MAAMD,GAAGE,OAAQC,IAAK,CAC3C,IAAMM,EAAOtB,KAAKc,MAAMD,GAAGG,GACvBM,IACAtB,KAAK6B,UAAUP,EAAK5B,IAAM4B,MAnD9C,sBA0EI,WACI,OAAOkD,KAAKC,UAAUzE,KAAKc,MAAMiC,KAAI,SAAA2B,GAAC,OAAIA,EAAE3B,KAAI,SAAAnC,GAAC,OAAIA,EAAC,UAAMA,EAAElB,GAAR,YAAckB,EAAEjB,MAAS,gBA3EvF,qBAkGI,WACI,OAAQK,KAAKmE,cAAgBnE,KAAK+B,UAAUhB,SAnGpD,qBAqGI,WACI,OAAQf,KAAKmE,cAAgB,GAAK,IAtG1C,yBAwGI,WAAe,IAAD,OAEJvC,EAAW5B,KAAK+B,UAAU/B,KAAKmE,eAC/B9E,EAAQW,KAAKc,MAAMc,EAASpC,gBAAgBoC,EAASnC,gBAEtDJ,IAELA,EAAMG,eAAiBoC,EAAStC,mBAChCD,EAAMI,eAAiBmC,EAASrC,mBAEhCS,KAAKc,MAAMc,EAASpC,gBAAgBoC,EAASnC,gBAAkB,KAC/DO,KAAKc,MAAMc,EAAStC,oBAAoBsC,EAASrC,oBAAsBF,EACvEuC,EAASmK,aAAa5K,SAAQ,SAAAqM,GAC1B,EAAK1M,MAAM0M,EAAI,IAAIA,EAAI,IAAM,EAAKtJ,WAAWsJ,EAAI,GAAK,IAAMA,EAAI,OAEpExN,KAAKmE,mBAvHb,yBAyHI,WAAe,IAAD,OACVnE,KAAKmE,gBAEL,IAAMvC,EAAW5B,KAAK+B,UAAU/B,KAAKmE,eAC/B9E,EAAQW,KAAKc,MAAMc,EAAStC,oBAAoBsC,EAASrC,oBAC1DF,IACLW,KAAKc,MAAMc,EAAStC,oBAAoBsC,EAASrC,oBAAsB,KAEvEF,EAAMG,eAAiBoC,EAASpC,eAChCH,EAAMI,eAAiBmC,EAASnC,eAEhCO,KAAKc,MAAMc,EAASpC,gBAAgBoC,EAASnC,gBAAkBJ,EAC/DuC,EAASmK,aAAa5K,SAAQ,SAAAqM,GAC1B,EAAK1M,MAAM0M,EAAI,IAAIA,EAAI,IAAM,WAtIzC,2BAyII,SAAc5L,GACV,IAAM+C,EAAI3E,KAAK4E,eACfD,EAAEE,QAAQjD,GACV5B,KAAK+B,UAAY4C,EACjB3E,KAAKmE,cAAgB,IA7I7B,0BAgJI,WACI,OAAOnE,KAAK+B,UAAU+C,MAAM9E,KAAKmE,kBAjJzC,uBA6DI,WACI,MAAO,CACH,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3C,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,WAtEvD,KAAa8H,EAgKFwB,YAAc,SAACC,GAClB,IAAMC,EAAe,IAAI1B,GAAa,GAChCpG,EAA2IrB,KAAKoJ,MAAMF,GAE5J,cAA8E7H,EAA9E,GAAOgI,EAAP,KAAeC,EAAf,KAA2BC,EAA3B,KAA2CC,EAA3C,KAA+DC,EAA/D,KACMnN,EAAS+M,EAA+D9K,KAAI,SAACiD,GAAD,OAASA,EAAIjD,KAAI,SAACmL,GAGhG,GAAc,MAAVA,EAAgB,OAAO,KAE3B,IAAM7O,EAAQgO,EAAwBa,EAAeP,GACrD,OAAa,MAATtO,EAAsB,MAC1BsO,EAAa9L,UAAUxC,EAAMK,IAAML,EAE5BA,SAGL0C,EAAa+L,EAAuB/K,KAAI,SAAA3B,GAAC,OAAI,IAAIhC,EAAcgC,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,OACjH+C,EAAgB4J,EAChB9J,EAAoB+J,EACpB9J,EAAqD,GAsB3D,OApBC+J,EACI9M,SAAQ,SAAC+M,GAGN,GAAc,MAAVA,EAAgB,CAEhB,IAAM7O,EAAQgO,EAAwBa,EAAeP,GACrD,GAAa,MAATtO,EAAe,OACnB6E,GAAgB,OAAL7E,QAAK,IAALA,OAAA,EAAAA,EAAOG,gBAAiB,KAAxB,OAA8BH,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAOI,iBAAkBJ,MAM9EsO,EAAa7M,MAAQA,EACrB6M,EAAa5L,UAAYA,EACzB4L,EAAaxJ,cAAgBA,EAC7BwJ,EAAa1J,kBAAoBA,EACjC0J,EAAazJ,WAAaA,EAEnByJ,G,MCeAQ,MArNf,WACI,MAAwBxG,mBAAS,CAC7Ba,WAAYzB,IACZ/B,WAAa+B,IAAO,IAFxB,mBAAO0B,EAAP,KAAaC,EAAb,KAIA,EAA0Bf,mBAAS,IAAnC,mBAAO7G,EAAP,KAAc6H,EAAd,KACA,EAA8ChB,mBAAS,IAAvD,mBAAOiB,EAAP,KAAwBC,EAAxB,KACA,EAA4ClB,mBAAS,IAArD,mBAAOzG,EAAP,KAAuB4H,EAAvB,KACA,EAA0CnB,mBAAS,MAAnD,mBAAOoB,EAAP,KAAsBC,EAAtB,KAEMoF,EAAkBlF,iBAAO,MAE/B,EAAkDvB,oBAAS,GAA3D,mBAAO1D,EAAP,KAA0BkF,EAA1B,KACA,EAA+CxB,mBAAS,CAAEyB,SAAS,EAAOC,SAAS,IAAnF,0BAASD,EAAT,EAASA,QAASC,EAAlB,EAAkBA,QAAWC,EAA7B,KAGA,SAASE,IACL4E,EAAgB3E,QAAQxF,mBAAqBmK,EAAgB3E,QAAQxF,kBACrE0E,EAASyF,EAAgB3E,QAAQ3I,OACjC+H,EAAmBuF,EAAgB3E,QAAQ7E,gBAC3CkE,EAAkB,IAClBE,EAAiB,MACjBG,EAAqBiF,EAAgB3E,QAAQxF,mBAC7CqF,EAAe,CAAED,QAAS+E,EAAgB3E,QAAQJ,UAAWD,QAASgF,EAAgB3E,QAAQL,YA4GlG,OAnGAa,qBAAU,WANNmE,EAAgB3E,QAAU,IAAIwC,EAE9BzC,IAMA,IAAM7H,EAAK,WACP,IAAM6G,EAAazB,IAGnB2B,EACI,CACIF,aACAxD,WALWwD,EAAa,KAWpC,OADAvB,OAAOiD,iBAAiB,SAAUvI,GAC3B,WACHsF,OAAOkD,oBAAoB,SAAUxI,MAI1C,IAgFC,qBAAKwD,UAAU,aAAf,SAEI,sBAAKA,UAAU,cAAf,UACI,sBAAKA,UAAU,qBAAf,UAEI,qBAAKA,UAAU,iBAAf,SAEI,qBAAKA,UAAU,QAAQG,MAAO,CAAEC,MAAOkD,EAAKD,WAAa,KAAMhD,OAAQiD,EAAKD,WAAa,MAAzF,SAEK1H,EAAMiC,KAAI,SAACiD,EAA8B2D,GAEtC,OAAQ,qBAAaxE,UAAU,UAAUG,MAAO,CAAE8E,QAAS,QAAnD,SAIHpE,EAAIjD,KAAI,SAAC1D,EAA4BgG,GAElC,IAAMgF,EAAkBnJ,EAAeyI,EAAI,IAAMtE,GACjD,OAAQ,qBAAKiF,QAAS,kBAhG1D,SAAsBjL,EAA4BsK,EAAWtE,GAEzD,GAAInE,EAAeyI,EAAI,IAAMtE,GAAI,CAC7B,KAAI,OAAC0D,QAAD,IAACA,OAAD,EAACA,EAAezF,KAAKqG,EAAGtE,IAExB,OAGiBnE,EAAeyI,EAAI,IAAMtE,GAGjClE,SAAQ,YAAa,IAAD,mBAAVwI,EAAU,KAAPtE,EAAO,KAC7B+I,EAAgB3E,QAAQvF,WAAWyF,EAAI,IAAMtE,GAAK+I,EAAgB3E,QAAQ3I,MAAM6I,GAAGtE,GACnF+I,EAAgB3E,QAAQ3I,MAAM6I,GAAGtE,GAAK,QAM1CmE,SAKG,GAAInK,EAAO,CAEd,GAAI4E,IAAsB5E,EAAMQ,aAG5B,OAFAiJ,EAAkB,SAClBE,EAAiB,MAMrB,IAAMgB,EAAI3K,EAAM6B,iBAGVN,EAAkC,GACxCoJ,EAAE7I,SAAQ,SAAAC,GACN,IAAMyL,OAAwBtL,GAAlBH,EAAE2K,aAA4B,GAAK3K,EAAE2K,aAEjDnL,EAAEQ,EAAE5B,eAAiB,IAAM4B,EAAE3B,gBAAkBoN,KAGnD/D,EAAkBlI,GAClBoI,EAAiB3J,QAGjByJ,EAAkB,IAClBE,EAAiB,MA+CuCU,CAAarK,EAAOsK,EAAGtE,IAAYF,UAAU,UAAUG,MAAO,CAAEC,MAAOkD,EAAKzD,WAAa,KAAMQ,OAAQiD,EAAKzD,WAAa,KAAMuF,gBAAkBlF,EAAI,IAAM,KAAQsE,EAAI,IAAM,GAAK,6BAA+B,IAArO,SACJ,qBAAKxE,UAAY9F,EAAc4E,IAAsB5E,EAAMQ,aAAgB,sBAAwB,oBAA1E,GAA+FyF,MAAO,CAAEC,MAAO,MAAOC,OAAQ,MAAO4E,QAAS,OAAQI,eAAgB,SAAUC,WAAY,SAAUF,gBAAmBF,GAAmBhL,GAASA,IAAU0J,EAAsB,yBAAL,IAAzS,SACK1J,EAAQ,mBAAG8F,UAAW9F,EAAMO,KAAM0F,MAAO,CAAEoF,MAAQrL,EAAMQ,aAAe,QAAU,WAAoB,MAFnDwF,OAPlDsE,UA6B9B,sBAAKxE,UAAU,cAAf,UACKiE,GAAW,yBAAQkB,QA9DxC,WACI8D,EAAgB3E,QAAQkB,cACxBnB,KA4D0DrE,UAAU,MAAxC,eAAgD,mBAAGA,UAAU,kBACxEkE,GAAW,yBAAQiB,QAnExC,WACI8D,EAAgB3E,QAAQmB,cACxBpB,KAiE0DrE,UAAU,MAAxC,eAAgD,mBAAGA,UAAU,wBAKjF,sBAAKA,UAAU,OAAOG,MAAO,CAAEuF,QAAS,QAAxC,UACI,sBAAK1F,UAAU,GAAGG,MAAO,CAAEuF,QAAS,UAApC,0BAEI,uBACA,mBAAG1F,UAAW,gBAAiBG,MAAO,CAAEoF,MAAOzG,EAAoB,QAAU,WAC7E,uBACA,sBAAKqB,MAAO,CAAEwF,UAAW,UAAzB,UACA,wBAAQR,QAvE5B,WACI,IAAMzE,EAAOuI,EAAgB3E,QAAQ0C,WAAU,GAE/CkC,aAAaC,QAAQ,WAAWzI,IAoEhB,SAAuB,mBAAGV,UAAU,iBACpC,wBAAQmF,QAnE5B,WACI,IAAMzE,EAAOwI,aAAaE,QAAQ,YAClC,GAAI1I,EAAJ,CACA,IAAM/E,EAAQmL,EAAawB,YAAY5H,GACvC/E,EAAMmD,mBAAqBnD,EAAMmD,kBAEjCmK,EAAgB3E,QAAU3I,EAC1B0I,MA4DgB,SAA0B,mBAAGrE,UAAU,mBACR,GAA1ByD,EAAgB7H,QAAe,qCAC5B,wBAAQuJ,QAAS,WAAQ1E,EAAagD,IAAtC,SAAiE,mBAAGzD,UAAU,0BAC9E,0BAEHyD,EAAgB7F,KAAI,SAACnB,EAAUmJ,GAE5B,OACI,sBAAKzF,MAAO,CAAE0F,SAAU,OAAQC,aAAc,MAAOb,QAAS,OAAQI,eAAgB,UAAtF,UACI,qBAAKlF,MAAO,CAAE4F,YAAa,OAA3B,SACI,mBAAG/F,UAAWvD,EAAShC,KAAM0F,MAAO,CAAEoF,MAAO9I,EAAS/B,aAAe,QAAU,aAEnF,gCACK+B,EAAS9B,aADd,IAC4B,mBAAGqF,UAAU,sBADzC,IACiEvD,EAAS7B,cALyBgL,YAhB3H,aCvJDyD,IChCHC,EDgCGD,EApCf,WACI,IAAME,EAAUC,cAChB,EAA4CpF,qBAAWnC,GAAhDU,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,kBAEvB,OACI,qBAAK5C,UAAU,+BAAf,SACI,iCACkC,KAA7BuJ,EAAQE,SAASC,UACd,sBAAMvE,QAAS,kBAAMoE,EAAQI,UAAUxJ,MAAO,CAACC,MAAO,OAAQwJ,OAAQ,WAChE5J,UAAU,6BADhB,SAEA,mBAAGA,UAAU,mBAAb,iBAGJ,eAAC,IAAD,CAAMA,UAAU,eAAe0B,GAAG,IAAlC,UACI,qBAAKvB,MAAO,CAACC,MAAO,QAASJ,UAAU,6BAAvC,SACA,qBAAK6J,IAAI,cAAczJ,MAAM,KAAKC,OAAO,KAAKL,UAAU,YAAY8J,IAAI,OAGxE,sBAAM9J,UAAU,kBAAhB,sBAKJ,sBAAMG,MAAO,CAAC4J,MAAM,SAApB,SACE,sBAAM5E,QAAS,kBAAMvC,GAAmBD,IAAiBxC,MAAO,CAACC,MAAO,OAAQwJ,OAAQ,WAClF5J,UAAU,yCADhB,SAEM,mBAAGA,UAAU,YAAb,yB,0DCtBZsJ,O,WAAAA,I,eAAAA,I,iBAAAA,I,eAAAA,I,gBAAAA,M,SCTSU,EAEjB,aAAe,IAAD,gCADdC,IAAoB,IAAIC,IACV,KAGdC,KAAO,SAAChH,GACJ,EAAK8G,IAAIjO,SAAQ,SAAAoO,GACbA,EAAGjH,OALG,KASdkH,UAAY,SAACD,GAET,OADA,EAAKH,IAAIK,IAAIF,GACN,CACHG,YAAa,WACT,EAAKN,IAAIO,OAAOJ,OCVzB,SAASK,EAAeC,EAAeC,GAC1C,MAAO,CAACzK,EAAW,GAARwK,EAAYlG,EAAW,GAARmG,GAGvB,SAASC,EAAe1K,EAAWsE,GACtC,MAAO,CAACtE,EAAGA,EAAI,GAAIsE,EAAGA,EAAI,IAgGvB,IAAMqG,GAAc,IAAIb,EAOlBc,GAAW,IAAId,EC3Gfe,GAAO,SAAMrD,EAAQsD,EAAgBC,GAE9C,MAAO,CACHvD,MACAsD,OACAC,SAKKC,GAAa,WACtB,IAAMC,EAAYJ,GAAK,GAEnBpM,EAAOwM,EAAUH,KAErB,MAAO,CACHI,KAAM,kBAAMD,EAAUH,MACtBK,KAAM,kBAAM1M,GACZ2M,QAAS,SAACrL,GAAD,OAAgBtB,EAAOsB,GAChCtB,OACAqJ,OAAQ,WAGJ,IAFA,IAAMjI,EAAW,GACbwL,EAAKJ,EAAUH,UACN5O,GAANmP,GACHxL,EAAItC,KAAK8N,EAAG7D,KACZ6D,EAAKA,EAAGP,KAGZ,OAAOjL,GAEXuK,IAAK,SAAC9K,GACF,IAAKb,EAGD,OAFAwM,EAAUH,KAAOxL,OACjBb,EAAOwM,EAAUH,MAIrBrM,EAAKqM,KAAOxL,EACZA,EAAEyL,KAAOtM,EACTA,EAAOA,EAAKqM,Q,ICrBHQ,G,WAKjB,WAAYC,GAAkG,IAAD,OAAlEf,EAAkE,uDAAlD,EAAGC,EAA+C,uDAA/B,EAAGxK,EAA4B,gEAJnGsL,SAImG,OAHnGC,MArBH,CACH9Q,SAAU,CACNsF,EAAG,EACHsE,EAAG,GAEPmH,KAAM,CACFzL,EAAG,EACHsE,EAAG,GAGPoH,WAAY,CACRC,MAAO,GACPC,MAAO,KAEXvG,MAAO,QACPwG,UAAW,IAS8F,KAwCtGC,KAAO,CACVC,IAAK,cAzCoG,KA6CtGC,SAAW,WACd,OAAO,EAAKR,OA9C6F,KAgDtGS,MAAQ,CACXC,WAAY,WACR,EAAKC,gBAAgBrQ,SAAQ,SAAAsQ,GACzBA,EAAKtQ,SAAQ,SAAAuQ,GACT,EAAKd,IAAIe,SAAT,UAAqBD,EAAS,GAA9B,YAAoCA,EAAS,IAAMA,EAAS,GAAIA,EAAS,WAMrFE,UAAW,WACP,EAAKhB,IAAIiB,YAET,EAAKjB,IAAIkB,YAAc,MACvB,EAAKlB,IAAImB,WACL,EAAKlB,MAAM9Q,SAASsF,EACpB,EAAKwL,MAAM9Q,SAAS4J,EACpB,EAAKkH,MAAME,WAAWC,MACtB,EAAKH,MAAME,WAAWE,QAI9BG,IAAK,WACD,EAAKE,MAAMC,aACX,EAAKD,MAAMM,YACX9H,QAAQ0C,IAAI,KAAM,KAxEtBxM,KAAK4Q,IAAMA,EAIPtL,IACAtF,KAAK6Q,MAAL,2BAAiB7Q,KAAK6Q,OAAUvL,SAExB/D,GAATsO,QAA+BtO,GAATuO,IAAmB9P,KAAK6Q,MAAM9Q,SAAW6P,EAAeC,EAAOC,IACxF9P,KAAK6Q,MAAMC,KAAOf,EAAe/P,KAAK6Q,MAAM9Q,SAASsF,EAAGrF,KAAK6Q,MAAM9Q,SAAS4J,G,iDAGhF,WACI,IAAMqI,EAAa,CACf,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,IACb,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,KAcjB,OAZAA,EAAW,GAAG,GAAG,GAAKhS,KAAK6Q,MAAM9Q,SAASsF,EAC1C2M,EAAW,GAAG,GAAG,GAAKhS,KAAK6Q,MAAM9Q,SAAS4J,EAE1CqI,EAAW,GAAG,GAAG,GAAKhS,KAAK6Q,MAAM9Q,SAASsF,EAAIrF,KAAK6Q,MAAME,WAAWC,MACpEgB,EAAW,GAAG,GAAG,GAAKhS,KAAK6Q,MAAM9Q,SAAS4J,EAE1CqI,EAAW,GAAG,GAAG,GAAKhS,KAAK6Q,MAAM9Q,SAASsF,EAC1C2M,EAAW,GAAG,GAAG,GAAKhS,KAAK6Q,MAAM9Q,SAAS4J,EAAI3J,KAAK6Q,MAAME,WAAWE,MAEpEe,EAAW,GAAG,GAAG,GAAKhS,KAAK6Q,MAAM9Q,SAASsF,EAAIrF,KAAK6Q,MAAME,WAAWC,MACpEgB,EAAW,GAAG,GAAG,GAAKhS,KAAK6Q,MAAM9Q,SAAS4J,EAAI3J,KAAK6Q,MAAME,WAAWE,MAE7De,I,wBAGX,SAAkBnC,EAAeC,GAC7B9P,KAAK6Q,MAAM9Q,SAAW6P,EAAeC,EAAOC,GAC5C9P,KAAK6Q,MAAMC,KAAKzL,EAAIwK,EACpB7P,KAAK6Q,MAAMC,KAAKnH,EAAImG,I,4BA2CxB,SAAemC,GACXjS,KAAK6Q,MAAMqB,OAAX,2BAAwBlS,KAAK6Q,MAAMqB,QAAWD,K,4BAGlD,WACI,OAAOjS,KAAK6Q,MAAMqB,W,KAIbC,GAAb,kDAII,WAAYvB,GAAkG,IAAD,EAAlEf,EAAkE,uDAAlD,EAAGC,EAA+C,uDAA/B,EAAGxK,EAA4B,mEACzG,cAAMsL,EAAKf,EAAOC,EAAOxK,IAJnB8M,mBAAqB/B,KAG8E,EAK7GgC,kBAAoB,SAACC,KALwF,EAStGC,YAAc,SAACD,KATuF,EAYnGE,aAAe,SAACF,GAGtB,IAFA,IACIG,EADApN,EAAI,EAAK+M,mBAAmB7B,OAEzBlL,GACCA,EAAEwH,IAAIyF,OAASA,GACXjN,EAAE+K,OACFqC,EAAYpN,EAAE+K,KACd/K,EAAE+K,KAAKD,UAAO5O,EAEd,EAAK6Q,mBAAmB3B,QAAQpL,EAAE+K,OAG1C/K,EAAIA,EAAE8K,KAGV,OAAOsC,GA3BkG,EAJjH,UAAwC9B,ICjHlC+B,G,kDAGF,WAAY9B,GAA+G,IAAD,EAA/Ef,EAA+E,uDAA/D,EAAGC,EAA4D,uDAA5C,EAAIzN,EAAwC,uDAAjC,IAAKwO,EAA4B,uCAMtH,GANsH,qBACtH,cAAMD,EAAKf,EAAOC,EAAQe,IAHbxO,UAEyG,IAqBnH8O,KAAO,CACV3F,KAAM,WACF,EAAKoF,IAAI+B,UAAY,EACrB,EAAK/B,IAAIiB,YAET,EAAKjB,IAAIkB,YAAc,EAAKjB,MAAMnG,MAClC,EAAKkG,IAAImB,WACL,EAAKlB,MAAM9Q,SAASsF,EACpB,EAAKwL,MAAM9Q,SAAS4J,EACpB,EAAKkH,MAAME,WAAWC,MACtB,EAAKH,MAAME,WAAWE,OAG1B,EAAKL,IAAIgC,QAGbC,MAAO,WACH,GAAkB,MAAd,EAAKxQ,MAA8B,MAAd,EAAKA,MAsB9B,GAAiB,KAAb,EAAKA,KAEL,IADA,IAAMyQ,EAAO,EAAKjC,MAAME,WAAWC,MAAQ,EAAKH,MAAMK,UAC7CrQ,EAAI,EAAGA,EAAI,EAAKgQ,MAAMK,UAAWrQ,IAAK,CAC3C,IAAMkS,EAAU,EAAKlC,MAAME,WAAWE,MAAQ,EAAMpQ,EAAIiS,EAElDE,EAAoBD,EAAS,EAAKlC,MAAM9Q,SAASsF,EACjD4N,EAAmB,EAAKpC,MAAM9Q,SAAS4J,EAAI,EAAKkH,MAAME,WAAWE,MAE1D,EAAKJ,MAAME,WAAWC,MAGnC,EAAKJ,IAAIiB,YACT,EAAKjB,IAAIkB,YAAc,EAAKjB,MAAMnG,MAClC,EAAKkG,IAAIsC,OAAO,EAAKrC,MAAM9Q,SAASsF,EAAKxE,EAAIiS,EAAO,EAAKjC,MAAM9Q,SAAS4J,GACxE,EAAKiH,IAAIuC,OAAOH,EAAmBC,GAEnC,EAAKrC,IAAIwC,eApCb,IADA,IAAMN,EAAO,EAAKjC,MAAME,WAAWE,MAAQ,EAAKJ,MAAMK,UAC7CrQ,EAAI,EAAGA,EAAI,EAAKgQ,MAAMK,UAAWrQ,IAAK,CAC3C,IAAMwS,EAAS,EAAKxC,MAAME,WAAWC,MAAQ,EAAMnQ,EAAIiS,EAEjDG,EAAmBI,EAAQ,EAAKxC,MAAM9Q,SAAS4J,EAC/CqJ,EAAoB,EAAKnC,MAAM9Q,SAASsF,EAAI,EAAKwL,MAAME,WAAWC,MAE5D,EAAKH,MAAME,WAAWE,MAGlC,EAAKL,IAAIiB,YACT,EAAKjB,IAAIkB,YAAc,EAAKjB,MAAMnG,MAClC,EAAKkG,IAAIsC,OAAO,EAAKrC,MAAM9Q,SAASsF,EAAG,EAAKwL,MAAM9Q,SAAS4J,EAAK9I,EAAIiS,GACpE,EAAKlC,IAAIuC,OAAOH,EAAmBC,GAEnC,EAAKrC,IAAIwC,WA2BrBhC,IAAK,WAGD,EAAKD,KAAK3F,OACV,EAAK2F,KAAK0B,UAnFd,EAAKjC,IAAMA,EACX,EAAKvO,KAAOA,EACZ,EAAKwO,MAAMK,UAAa,EAAKL,MAAME,WAAWE,MAAM,GAExC,KAAR5O,EAAa,CACb,IAAML,EAAO,EAAK6O,MAAME,WAAWC,MACnC,EAAKH,MAAME,WAAWC,MAAQ,EAAKH,MAAME,WAAWE,MACpD,EAAKJ,MAAME,WAAWE,MAAQjP,EAToF,S,8CAe1H,SAAkB6N,EAAeC,GAC7B9P,KAAKsT,WAAWzD,EAAOC,O,GAnBZa,IA8FN4C,GAAb,kDACI,WAAY3C,GAAmG,IAApEf,EAAmE,uDAAnD,EAAGC,EAAgD,uDAAhC,EAAIxK,EAA4B,8EACpGsL,EAAKf,EAAOC,EAAO,IAAKxK,GAFtC,UAA2BoN,IAOdc,GAAb,kDACI,WAAY5C,GAAmG,IAApEf,EAAmE,uDAAnD,EAAGC,EAAgD,uDAAhC,EAAIxK,EAA4B,8EACpGsL,EAAKf,EAAOC,EAAO,IAAKxK,GAFtC,UAA2BoN,ICnGNe,G,kDAMjB,WAAY7C,GAAsE,IAAD,EAAtCf,EAAsC,uDAAtB,EAAGC,EAAmB,uDAAH,EAAG,4BAC7E,cAAMc,EAAKf,EAAOC,EAAO,CAACiB,WAAY,CAACE,MAAO,GAAID,MAAO,OAK7DkB,OAAS,CACLwB,KAAM,SAAC7D,EAAeC,GAElB,IAAM6D,EAAgB,eAAO,EAAKC,uBAE5BC,EAAW9D,EAAe4D,EAAiBtO,EAAEsO,EAAiBhK,GAE9DmK,EAAM,CACRhU,aAAc6T,EACdI,OAAQ,WACJ,EAAKT,WAAWO,EAASxO,EAAGwO,EAASlK,GACrC,EAAKwH,KAAKC,OAEd4C,OAAQ,cAMZ,OADA,EAAKV,WAAWzD,EAAOC,GAChBgE,GAGXG,KAAM,WAAY,IAAXtP,EAAU,uDAAN,EACP,EAAc,EAAKuP,kBAAZ7O,EAAP,EAAOA,EAAEsE,EAAT,EAASA,EACT,OAAO,EAAKuI,OAAOwB,KAAKrO,EAAGsE,EAAIhF,IAEnCwP,GAAI,WAAY,IAAXxP,EAAU,uDAAN,EACL,EAAc,EAAKuP,kBAAZ7O,EAAP,EAAOA,EAAEsE,EAAT,EAASA,EACT,OAAO,EAAKuI,OAAOwB,KAAKrO,EAAGsE,EAAIhF,IAEnCyP,MAAO,WAAY,IAAXzP,EAAU,uDAAN,EACR,EAAc,EAAKuP,kBAAZ7O,EAAP,EAAOA,EAAEsE,EAAT,EAASA,EACT,OAAO,EAAKuI,OAAOwB,KAAKrO,EAAIV,EAAGgF,IAEnC0K,KAAM,WAAY,IAAX1P,EAAU,uDAAN,EACP,EAAc,EAAKuP,kBAAZ7O,EAAP,EAAOA,EAAEsE,EAAT,EAASA,EACT,OAAO,EAAKuI,OAAOwB,KAAKrO,EAAIV,EAAGgF,KA1C0C,EA6C1EwH,KAAO,CACVzC,QAAS,WACL,IAAMxJ,EAAM,EAAKkN,mBAAmBjF,SACpCjI,EAAI/D,SAAQ,SAAC2C,EAAMjD,GACf,GAAS,GAALA,EAAJ,CACA,IAAMuP,EAAOlL,EAAIrE,EAAI,GACrB,EAAK+P,IAAIiB,YACT,EAAKjB,IAAIkB,YAAc,EAAKjB,MAAMnG,MAClC,EAAKkG,IAAImB,WACL3B,EAAK/K,EACL+K,EAAKzG,EACL7F,EAAKuB,EAAI+K,EAAK/K,EACdvB,EAAK6F,EAAIyG,EAAKzG,QAK1B2K,IAAK,WACD,EAAK1D,IAAIiB,YACT,EAAKjB,IAAI0D,IACL,EAAKzD,MAAM9Q,SAASsF,EACpB,EAAKwL,MAAM9Q,SAAS4J,EACnB,EAAKkH,MAAME,WAAWC,MAAS,EAChC,EACU,EAAVnO,KAAK0R,IACL,GAGJ,EAAK3D,IAAI4D,UAAY,EAAK3D,MAAMnG,MAChC,EAAKkG,IAAIgC,QAEbxB,IAAK,WACD,EAAKD,KAAKzC,UACV,EAAKyC,KAAKmD,QA9E+D,EAuFjFjC,kBAAoB,SAACoC,GACjB,EAAKrC,mBAAmB3C,IAAIS,GAAK,CAAC7K,EAAE,EAAKwL,MAAM9Q,SAASsF,EAAEsE,EAAE,EAAKkH,MAAM9Q,SAAS4J,EAAE2I,OAAQmC,MAxFb,EA2FjFlC,YAAc,SAACD,GACX,IAAIG,EAAiB,EAAKD,aAAaF,GACvC,QAAIG,IAEJ,EAAK5B,MAAM9Q,SAASsF,EAAIoN,EAAU5F,IAAIxH,EACtC,EAAKwL,MAAM9Q,SAAS4J,EAAI8I,EAAU5F,IAAIlD,EAEtC,EAAKkH,MAAMC,KAAOf,EAAe0C,EAAU5F,IAAIxH,EAAEoN,EAAU5F,IAAIlD,IAExD,IAlGP,EAAKyI,mBAAmB3C,IAAIS,GAAK,CAAC7K,EAAG,EAAKwL,MAAM9Q,SAASsF,EAAGsE,EAAG,EAAKkH,MAAM9Q,SAAS4J,EAAE2I,OAAO,KAFf,E,kDAkFjF,WAAyB,IAAD,EACpB,OAAO,UAAAtS,KAAKoS,mBAAmB5B,cAAxB,eAAgC3D,IAAIyF,SAAU,I,iCAqBzD,WAA+B,IAAD,EAC1B,iBAAOtS,KAAKoS,mBAAmB5B,cAA/B,aAAO,EAAgC3D,M,6BAE3C,WAA2B,IAAD,EACtB,YAAc7M,KAAKoS,mBAAmB5B,cAAtC,aAAc,EAAgC3D,IAC9C,OAAOkD,EADP,EAAO1K,EAAP,EAASsE,K,iCAIb,WAAuB,IAAD,EACZ6G,EAAOxQ,KAAKoS,mBAAmB5B,OACrC,QAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM3D,IAAIyF,SAAU,KAAW,OAAJ9B,QAAI,IAAJA,GAAA,UAAAA,EAAMJ,YAAN,eAAYvD,IAAIyF,SAAU,O,GAxHjCH,ICD7BuC,G,kDAIH,WAAY9D,GAAgH,IAAD,EAAhFf,EAAgF,uDAAhE,EAAGC,EAA6D,uDAA7C,EAAExK,EAA2C,uCAAjB0J,EAAiB,uDAAJ,GAAI,4BACvH,cAAM4B,EAAKf,EAAOC,EAAOxK,IAJrBwB,IAAM,IAAI6N,MAGyG,EAFnHC,WAAoC,KAE+E,EAY3HzD,KAAO,CACH0D,MAAM,WAAO,IAAD,EACR,YAAKD,kBAAL,SAAiBE,MAAK,WAClB,EAAKlE,IAAImE,UAAU,EAAKjO,IAAK,EAAK+J,MAAM9Q,SAASsF,EAAG,EAAKwL,MAAM9Q,SAAS4J,EAAG,EAAKkH,MAAME,WAAWC,MAAO,EAAKH,MAAME,WAAWE,WAItIG,IAAK,WACD,EAAKD,KAAK0D,UAjBd,EAAK/N,IAAIkI,IAAMA,EACf,EAAK4F,WAAa,IAAII,SAAQ,SAACC,EAAQlB,GACnC,EAAKjN,IAAIoO,OAAS,WACdD,GAAQ,OANuG,E,UAJtGtE,IA8BXwE,GAAd,kDACI,WAAYvE,GAAsE,IAAvCf,EAAsC,uDAAtB,EAAGC,EAAmB,uDAAH,EAAG,uCACvEc,EAAKf,EAAOC,EAAM,CAACiB,WAAY,CAACE,MAAO,GAAID,MAAO,IAAKE,UAAW,GAAGxL,4BAFnF,UAA6BgP,IAMfU,GAAd,kDACI,WAAYxE,GAAsE,IAAvCf,EAAsC,uDAAtB,EAAGC,EAAmB,uDAAH,EAAG,uCACvEc,EAAKf,EAAOC,EAAM,CAACiB,WAAY,CAACE,MAAO,GAAID,MAAO,IAAKE,UAAW,GAAGxL,0BAFnF,UAA2BgP,ICpCdW,GAAb,kDAKI,WAAYzE,GAAwH,IAAD,EAAxFf,EAAwF,uDAAxE,EAAGC,EAAqE,uDAArD,EAAGzN,EAAkD,uDAAjC,IAAKiD,EAA4B,uCAU/H,GAV+H,qBAC/H,cAAMsL,EAAKf,EAAOC,EAAOxK,IAHZjD,UAEkH,IA0B5H8O,KAAO,CACV3F,KAAM,WACF,EAAKoF,IAAIiB,YAET,EAAKjB,IAAIkB,YAAc,EAAKjB,MAAMnG,MAClC,IAAMrF,EAAI,EAAKwL,MAAM9Q,SAASsF,GAAkB,KAAb,EAAKhD,KAAc,EAAI,GACpDsH,EAAI,EAAKkH,MAAM9Q,SAAS4J,GAAkB,KAAb,EAAKtH,KAAc,EAAI,GAC1D,EAAKuO,IAAImB,WACL1M,EACAsE,EACA,EAAKkH,MAAME,WAAWC,OAAsB,KAAb,EAAK3O,KAAc,GAAK,GACvD,EAAKwO,MAAME,WAAWE,OAAsB,KAAb,EAAK5O,KAAc,GAAK,IAG3D,EAAKuO,IAAIwC,UAGbkC,MAAO,WACH,EAAK1E,IAAIiB,YACT,EAAKjB,IAAI+B,UAAY,EACrB,EAAK/B,IAAIkB,YAAc,EAAKjB,MAAMnG,MAElC,IAAMyG,EAAO,WAAoB,IAAD,EAAlBmB,IAAkB,yDAC5B,GAAI,UAAC,EAAKzB,MAAMqB,cAAZ,aAAC,EAAmBqD,OAAxB,CACA,IAAIlQ,EAECA,EADAiN,EACI,EAAKd,gBAAgB,GAAG,GAAG,IAAmB,KAAb,EAAKnP,KAAc,GAAK,GADjD,EAAKmP,gBAAgB,GAAG,GAAG,IAAmB,KAAb,EAAKnP,KAAc,GAAK,GAE1E,IAEImT,EAFE7L,EAAI,EAAK6H,gBAAgB,GAAG,GAAG,IAAmB,KAAb,EAAKnP,KAAc,GAAK,GAI9DmT,EADAlD,EACO,EAAKd,gBAAgB,GAAG,GAAG,IAAmB,KAAb,EAAKnP,KAAc,GAAK,GADjD,EAAKmP,gBAAgB,GAAG,GAAG,IAAmB,KAAb,EAAKnP,KAAc,GAAK,GAG7E,IAAMoT,EAAO,EAAKjE,gBAAgB,GAAG,GAAG,IAAmB,KAAb,EAAKnP,KAAc,GAAK,GAEtE,EAAKuO,IAAIsC,OAAO7N,EAAGsE,GACnB,EAAKiH,IAAIuC,OACLqC,EACAC,GAGJ,EAAK7E,IAAIwC,WAGbjC,IACAA,GAAK,IAGTC,IAAK,WACD,EAAKD,KAAK3F,OACV,EAAK2F,KAAKmE,UA5EiH,EAgFnIjD,kBAAoB,SAACC,GAAoB,IAAD,EACpC,EAAKF,mBAAmB3C,IAAIS,GAAK,CAACqF,QAAQ,YAAK1E,MAAMqB,cAAX,eAAmBqD,UAAU,EAAOjD,aAjFiD,EAoFnIC,YAAc,SAACD,GACX,IAAIG,EAAkB,EAAKD,aAAaF,GACxC,SAAIG,IAAc,EAAK5B,MAAMqB,UAC7B,EAAKrB,MAAMqB,OAAOqD,OAAS9C,EAAU5F,IAAI0I,QAElC,IAtFP,EAAKnD,mBAAmB3C,IAAIS,GAAK,CAACqF,QAAQ,EAAOjD,OAAQ,KACzD,EAAKzB,MAAMnG,MAAQ,QACnB,EAAKmG,MAAMqB,OAAS,CAChBqD,QAAQ,GAEZ,EAAKlT,KAAOA,EAEA,KAARA,EAAa,CACb,IAAML,EAAO,EAAK6O,MAAME,WAAWC,MACnC,EAAKH,MAAME,WAAWC,MAAQ,EAAKH,MAAME,WAAWE,MACpD,EAAKJ,MAAME,WAAWE,MAAQjP,EAb6F,SALvI,8CAyBI,SAAkB6N,EAAeC,GAC7B9P,KAAKsT,WAAWzD,EAAOC,OA1B/B,GAA0BqC,IAoGbuD,GAAb,kDACI,WAAY9E,GAAsE,IAAvCf,EAAsC,uDAAtB,EAAGC,EAAmB,uDAAH,EAAG,uCACvEc,EAAKf,EAAOC,EAAO,IAAK,CAACiB,WAAY,CAACC,MAAO,GAAIC,MAAO,MAFtE,UAA2BoE,IAOdM,GAAb,kDACI,WAAY/E,GAAsE,IAAvCf,EAAsC,uDAAtB,EAAGC,EAAmB,uDAAH,EAAG,uCACvEc,EAAKf,EAAOC,EAAO,IAAK,CAACiB,WAAY,CAACC,MAAO,GAAIC,MAAO,MAFtE,UAA2BoE,IC/GdO,GAAb,WAII,WAAYC,EAAe/O,EAAWgP,GAAiB,yBAHvDD,WAGsD,OAFtD/O,SAEsD,OADtDgP,aACsD,EAClD9V,KAAK6V,MAAQA,EACb7V,KAAK8G,IAAMA,EACX9G,KAAK8V,QAAUA,EAPvB,8CAWI,WACI,OAAO9V,KAAK8V,YAZpB,KAgBaC,GAAb,kDACI,aAAe,uCACL,SAASrQ,4BAA+C,GAFtE,UAA4BkQ,IAMfI,GAAb,kDACI,aAAe,uCACL,aAAatQ,+BAAkD,GAF7E,UAA+BkQ,IClBPK,GAAvB,kDAQG,WAAYrF,GAAwH,IAAD,EAAxFf,EAAwF,uDAAxE,EAAGC,EAAqE,uDAArD,EAAGzN,EAAkD,uDAAjC,IAAKiD,EAA4B,mEAC/H,cAAMsL,EAAKf,EAAOC,EAAOxK,IANrBjD,UAK2H,IAH1HyE,SAG0H,IAF1H8N,gBAE0H,IA8B5HzD,KAAO,CACV+E,GAAI,WACA,GAAG,EAAKtB,YAAc,EAAK9N,IAEvB,EAAK8N,WAAWE,MAAK,WACb,EAAKhO,KACT,EAAK8J,IAAImE,UAAU,EAAKjO,IAAK,EAAK+J,MAAM9Q,SAASsF,EAAG,EAAKwL,MAAM9Q,SAAS4J,EAAG,EAAKkH,MAAME,WAAWC,MAAO,EAAKH,MAAME,WAAWE,cAJtI,CASA,EAAKL,IAAIiB,YACT,EAAKjB,IAAIkB,YAAc,EAAKjB,MAAMnG,MAClC,IAAMrF,EAAI,EAAKwL,MAAM9Q,SAASsF,EACxBsE,EAAI,EAAKkH,MAAM9Q,SAAS4J,EAC9B,EAAKiH,IAAImB,WACL1M,EACAsE,EACA,EAAKkH,MAAME,WAAWC,OAAsB,KAAb,EAAK3O,KAAc,GAAK,GACvD,EAAKwO,MAAME,WAAWE,OAAsB,KAAb,EAAK5O,KAAc,GAAK,IAG5C,KAAZ,EAAKA,MACJ,EAAKuO,IAAI0D,IACLjP,EAAK,EAAKwL,MAAME,WAAWC,MAAM,EACjCrH,EAAK,EAAKkH,MAAME,WAAWE,MAAM,EAChC,EAAKJ,MAAME,WAAWC,MAAS,EAChC,EACU,EAAVnO,KAAK0R,IACL,GAKR,EAAK3D,IAAIwC,WAGbkC,MAAO,WACH,EAAK1E,IAAIiB,YACT,EAAKjB,IAAI+B,UAAY,EACrB,EAAK/B,IAAIkB,YAAc,EAAKjB,MAAMnG,MAElC,IAAMyG,EAAO,WAAoB,IAAD,EAAlBmB,IAAkB,yDAC5B,GAAI,UAAC,EAAKzB,MAAMqB,cAAZ,aAAC,EAAmBqD,OAAxB,CACA,IAAIlQ,EAECA,EADAiN,EACI,EAAKd,gBAAgB,GAAG,GAAG,IAAmB,KAAb,EAAKnP,KAAc,EAAI,GADhD,EAAKmP,gBAAgB,GAAG,GAAG,IAAmB,KAAb,EAAKnP,KAAc,EAAI,GAEzE,IAEImT,EAFE7L,EAAI,EAAK6H,gBAAgB,GAAG,GAAG,IAAmB,KAAb,EAAKnP,KAAc,EAAI,GAI7DmT,EADAlD,EACO,EAAKd,gBAAgB,GAAG,GAAG,IAAmB,KAAb,EAAKnP,KAAc,EAAI,GADhD,EAAKmP,gBAAgB,GAAG,GAAG,IAAmB,KAAb,EAAKnP,KAAc,EAAI,GAG5E,IAAMoT,EAAO,EAAKjE,gBAAgB,GAAG,GAAG,IAAmB,KAAb,EAAKnP,KAAc,EAAI,GAErE,EAAKuO,IAAIsC,OAAO7N,EAAGsE,GACnB,EAAKiH,IAAIuC,OACLqC,EACAC,GAGJ,EAAK7E,IAAIwC,WAGbjC,IACAA,GAAK,IAGTC,IAAK,WACD,EAAKD,KAAK+E,KACV,EAAK/E,KAAKmE,UApGiH,EAwGnIjD,kBAAoB,SAACC,GAAoB,IAAD,EACpC,EAAKF,mBAAmB3C,IAAIS,GAAK,CAACqF,QAAQ,YAAK1E,MAAMqB,cAAX,eAAmBqD,UAAU,EAAOjD,aAzGiD,EA4GnIC,YAAc,SAACD,GACX,IAAIG,EAAkB,EAAKD,aAAaF,GACxC,SAAIG,IAAc,EAAK5B,MAAMqB,UAC7B,EAAKrB,MAAMqB,OAAOqD,OAAS9C,EAAU5F,IAAI0I,QAElC,IA9GP,EAAKnD,mBAAmB3C,IAAIS,GAAK,CAACqF,QAAQ,EAAOjD,OAAQ,KACzD,EAAKzB,MAAMnG,MAAQ,QACnB,EAAKmG,MAAMqB,OAAS,CAChBqD,QAAQ,GAEZ,EAAKlT,KAAOA,EAET,EAAKwO,MAAM7B,MACV,EAAKlI,IAAM,IAAI6N,MACf,EAAK7N,IAAIkI,IAAM,EAAK6B,MAAM7B,IAC1B,EAAK4F,WAAa,IAAII,SAAQ,SAACC,EAAQlB,GACnC,IAAI,EAAKjN,IAAK,OAAOmO,GAAQ,GAC7B,EAAKnO,IAAIoO,OAAS,WACdD,GAAQ,QAhB2G,EARtI,8CAgCG,SAAkBpF,EAAeC,GAC7B9P,KAAKsT,WAAWzD,EAAOC,OAjC9B,GAAuCqC,IA+H3BgE,GAAb,kDACI,WAAYvF,GAAsE,IAAvCf,EAAsC,uDAAtB,EAAGC,EAAmB,uDAAH,EAAG,uCACvEc,EAAKf,EAAOC,EAAO,IAAK,CAACiB,WAAY,CAACC,MAAO,GAAIC,MAAO,MAFtE,UAA8BgF,IAOjBG,GAAb,kDACI,WAAYxF,GAAsE,IAAvCf,EAAsC,uDAAtB,EAAGC,EAAmB,uDAAH,EAAG,uCACvEc,EAAKf,EAAOC,EAAO,IAAK,CAACiB,WAAY,CAACC,MAAO,GAAIC,MAAO,MAFtE,UAA8BgF,IAMjBI,GAAb,kDACI,WAAYzF,GAAsE,IAAvCf,EAAsC,uDAAtB,EAAGC,EAAmB,uDAAH,EAAG,uCACvEc,EAAKf,EAAOC,EAAO,IAAK,CAACiB,WAAY,CAACC,MAAO,GAAIC,MAAO,MAFtE,UAAmCgF,IClIdK,G,WAmBjB,WAAYC,EAA2B3F,EAA+B4F,EAAiCC,GAAmF,IAAD,gCAlBzLjJ,IAAM,CACFnI,EAAG,EACHsE,EAAG,IAgBkL,KAdzL+M,MAA2B,GAc8J,KAbjLjC,cAAgB,EAaiK,KAZxK+B,qBAYwK,OAXxKD,YAWwK,OAVxK3F,SAUwK,OATlL+F,OAAiB,KASiK,KARlLF,aAAoB,KAQ8J,KAPjLG,MAAQ,CACZ3R,WAAY,GACZ4R,SAAU,IAK2K,KAHxKC,MAAQ,KAGgK,KAwGjLC,aAxGiL,uCAwGlK,WAAOC,EAAsB1T,GAA7B,yCAAA0G,EAAA,sDAObiN,EAAaD,GAAavI,EAAU0F,IAAM6C,GAAavI,EAAUwF,KACjEiD,GAAgBD,EAChBE,EAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGpU,KAAI,SAAClC,GAAD,OAAUoW,EAAa3T,EAAKxD,aAAa6J,EAAIrG,EAAKxD,aAAauF,GAA+E,IAAvE2R,GAAavI,EAAU0F,IAAM6C,IAAcvI,EAAU4F,MAASxT,EAAIA,MAE7KuW,EAAiB,EAAKT,OAAOtF,WAAWtR,SAX3B,cAYHoX,GAZG,yDAYV3J,EAZU,sBAaC,EAAKkJ,OAbN,2DAaN1Q,EAbM,sBAcIA,GAdJ,kEAcF5F,EAdE,UAeIA,aAAcqT,IAAUrT,aAAcgV,IAf1C,2DAgBD1D,EAAWtR,EAAGoR,mBAGf0F,EAAe1J,EAAM4J,EAAe/R,GAAKqM,EAAS,GAAG,GAAG,KACrDwF,EAAe1J,EAAM4J,EAAe/R,GAAKqM,EAAS,GAAG,GAAG,KACxDuF,EAAazJ,EAAM4J,EAAezN,GAAK+H,EAAS,GAAG,GAAG,KACtDuF,EAAazJ,EAAM4J,EAAezN,GAAK+H,EAAS,GAAG,GAAG,IAtBvD,kCA2BU,EAAK2F,gBAAgBjX,GA3B/B,meAkCZ,GAlCY,4FAxGkK,6DA+MjLkX,SAAW,WACf,IAAMC,ET/NP,SAAmBC,EAAgBC,EAAgBjB,EAAiCG,EAAgBC,GAIvG,IAAMpJ,EAAM,CACRgK,SACAC,UAGJ,OAAO,SAACT,GAAiD,IAE/CU,EAAgB,GACtB,GAHoD,wDAI7CV,GAAavI,EAAU0F,GAAIqC,EAAgBmB,WAAWD,EACjDV,GAAavI,EAAUwF,KAAMuC,EAAgBmB,WAAWD,EACxDV,GAAavI,EAAU2F,MAAOoC,EAAgBoB,YAAYF,EAC1DV,GAAavI,EAAU4F,OAAMmC,EAAgBoB,YAAYF,OAJrE,CAOIV,GAAavI,EAAU0F,GAAI3G,EAAIiK,QAAUC,EACpCV,GAAavI,EAAUwF,KAAMzG,EAAIiK,QAAUC,EAC3CV,GAAavI,EAAU2F,MAAO5G,EAAIgK,QAAUE,EAC5CV,GAAavI,EAAU4F,OAAM7G,EAAIgK,QAAUE,GAEpD,IAAIG,EAAYrB,EAAgBsB,YAAc,EAC1CC,EAAavB,EAAgBwB,aAAe,EAE5CC,EAAuB,KAI3B,GAHIjB,IAAcvI,EAAU0F,IAAMyC,EAAMC,SAAS9V,SAAQkX,EAAkBrB,EAAMC,SAASD,EAAMC,SAAS9V,OAAS,IAC9GiW,IAAcvI,EAAU4F,MAAQuC,EAAM3R,WAAWlE,SAAQkX,EAAkBrB,EAAM3R,WAAW2R,EAAM3R,WAAWlE,OAAS,IAEtHiW,GAAavI,EAAUwF,MAAQzG,EAAIiK,QAAUM,EAAY,CAEzDnB,EAAMC,SAASjU,KAAK,CAChBsV,MAAO1K,EAAIiK,OACXU,OAAQ3B,EAAgBmB,YAE5B,IAAIS,EAAQ5B,EAAgBmB,UAAYI,EACpCK,EAAQ5B,EAAgB6B,eACxBD,EAAQ5B,EAAgB6B,aACxBN,EAAavB,EAAgB6B,aAAe7B,EAAgBmB,WAEhEnB,EAAgBmB,UAAYS,EAC5B5K,EAAIiK,QAAUM,EAIlB,GAAIf,GAAavI,EAAU0F,GAAI,CAC3B,IAAK8D,EAAiB,OACtBnO,QAAQ0C,IAAIyL,GACRzK,EAAIiK,QAAUQ,EAAgBC,QAC9BtB,EAAMC,SAASyB,MACf9B,EAAgBmB,UAAYM,EAAgBE,OAC5C3K,EAAIiK,OAASQ,EAAgBC,OAKrC,GAAIlB,GAAavI,EAAU2F,OAAS5G,EAAIgK,QAAUK,EAAW,CACzDjB,EAAM3R,WAAWrC,KAAK,CAClBsV,MAAO1K,EAAIgK,OACXW,OAAQ3B,EAAgBoB,aAE5B,IAAIQ,EAAQ5B,EAAgBoB,WAAaC,EACrCO,EAAQ5B,EAAgB+B,cACxBH,EAAQ5B,EAAgB+B,YACxBV,EAAYrB,EAAgB+B,YAAc/B,EAAgBoB,YAE9DpB,EAAgBoB,WAAaQ,EAC7B5K,EAAIgK,QAAUK,EAKlB,GAAIb,GAAavI,EAAU4F,KAAM,CAC7B,IAAK4D,EAAiB,OAClBzK,EAAIgK,QAAUS,EAAgBC,QAC9BtB,EAAM3R,WAAWqT,MACjB9B,EAAgBoB,WAAaK,EAAgBE,OAC7C3K,EAAIgK,OAASS,EAAgBC,USgJlBM,CACf,EAAK7B,OAAOtF,WAAWtR,SAASsF,EAChC,EAAKsR,OAAOtF,WAAWtR,SAAS4J,EAChC,EAAK6M,gBAAiB,EAAKG,OAAQ,EAAKC,OAG5C,8CAAO,WAAO6B,EAAkBzB,GAAzB,mBAAAhN,EAAA,4DACHyO,EAAIA,GAAKxR,OAAOyR,QACO,IAAbD,EAAEE,SAAiBF,EAAEG,SAAY5B,IAAcvI,EAAUoK,MAFhE,yCAE6E,EAAKA,QAFlF,UAGCC,GAAQ,EACRxV,EAA2F,KAE9E,IAAbmV,EAAEE,SAAiB3B,IAAcvI,EAAU0F,IAC3C6C,EAAYvI,EAAU0F,GACtB2E,GAAQ,EAEHtR,IAAgBuR,gBACjBzV,EAAO,EAAKqT,OAAOzE,OAAOiC,GAvPvB,KAyPa,IAAbsE,EAAEE,SAAiB3B,IAAcvI,EAAUwF,MAClD+C,EAAYvI,EAAUwF,KACtB6E,GAAQ,EAEHtR,IAAgBuR,gBACjBzV,EAAO,EAAKqT,OAAOzE,OAAO+B,KA9PvB,KAgQa,IAAbwE,EAAEE,SAAiB3B,IAAcvI,EAAU4F,MAClD2C,EAAYvI,EAAU4F,KACtByE,GAAQ,EAEHtR,IAAgBuR,gBACjBzV,EAAO,EAAKqT,OAAOzE,OAAOmC,KArQvB,KAsQa,IAAboE,EAAEE,SAAiB3B,IAAcvI,EAAU2F,QAClD4C,EAAYvI,EAAU2F,MACtB0E,GAAQ,EAEHtR,IAAgBuR,gBACjBzV,EAAO,EAAKqT,OAAOzE,OAAOkC,MA3QvB,MA+QP0E,QAAsBvX,GAAbyV,EAnCV,qBAoCKxP,IAAgBuR,cApCrB,yCAoC2CxB,EAAWP,GAAW,IApCjE,wBAqCuB,EAAKD,aAAaC,EAAW1T,GArCpD,WAsCiB,KADVwS,EArCP,kDAsC2BxS,EAAKyQ,UAtChC,QAuCgB,GAAX+B,EACAxS,EAAKyQ,SAELwD,EAAWP,GAEf,EAAKvC,eAAiBqB,EACtB,EAAKa,OAAOtE,kBAAkB,EAAKoC,eACnC,EAAKuE,SA9CN,4CAAP,yDArNAhZ,KAAKwW,gBAAkBA,EACvBxW,KAAKuW,OAASA,EACdvW,KAAK4Q,IAAMA,EACX5Q,KAAKyW,aAAeA,EAGpBzW,KAAKgZ,SAELhZ,KAAK8W,MAAQ9W,KAAKsX,WAElBtH,GAAYR,WAAU,SAAC3C,GACnB,EAAKiK,MAAM,KAAMjK,MAGrBvG,SAAS4D,iBAAiB,UAAWlK,KAAK8W,OAAO,G,2CAKrD,WACIxQ,SAAS6D,oBAAoB,UAAWnK,KAAK8W,OAAO,K,4BAIxD,WACI,GAAyB,GAArB9W,KAAK0W,MAAM3V,OAAa,CACxBf,KAAK2W,OAAS,IAAIlD,GAAOzT,KAAK4Q,IAAK5Q,KAAKwN,IAAInI,GAAK,EAAWrF,KAAKwN,IAAI7D,GAAK,GAC1E,IAAMsP,EAAM,IAAI7D,GAAKpV,KAAK4Q,IAAK5Q,KAAKwN,IAAInI,GAAK,EAAWrF,KAAKwN,IAAI7D,GAAK,GACtE3J,KAAK0W,MAAQ,CACT,CAAC1W,KAAK2W,QACN,CAACsC,GAED,CAAC,IAAI1F,GAAMvT,KAAK4Q,IAAK5Q,KAAKwN,IAAInI,EAAGrF,KAAKwN,IAAI7D,EAAK,EAAU,CACrDoH,WAAY,CACRE,MAAO,IACPD,MAAO,MAEX,IAAI0E,GAAM1V,KAAK4Q,IAAK5Q,KAAKwN,IAAInI,EAAK,EAAUrF,KAAKwN,IAAI7D,EAAK,GAC1D,IAAI4J,GAAMvT,KAAK4Q,IAAK5Q,KAAKwN,IAAInI,EAAK,GAAUrF,KAAKwN,IAAI7D,EAAK,EAAQ,CAC9DoH,WAAY,CACRE,MAAO,IACPD,MAAO,OAKnB,CAAC,IAAIwC,GAAMxT,KAAK4Q,IAAK5Q,KAAKwN,IAAInI,EAAGrF,KAAKwN,IAAI7D,EAAK,EAAU,CACrDoH,WAAY,CACRC,MAAO,GACPC,MAAO,OAIX,IAAImF,GAASpW,KAAK4Q,IAAK5Q,KAAKwN,IAAInI,EAAK,GAAUrF,KAAKwN,IAAI7D,EAAK,GAC7D,IAAIwM,GAASnW,KAAK4Q,IAAK5Q,KAAKwN,IAAInI,EAAK,EAAUrF,KAAKwN,IAAI7D,EAAK,GAC7D,IAAI0M,GAAcrW,KAAK4Q,IAAK5Q,KAAKwN,IAAInI,EAAK,EAAUrF,KAAKwN,IAAI7D,EAAK,KAClE,IAAI6J,GAAMxT,KAAK4Q,IAAK5Q,KAAKwN,IAAInI,EAAK,GAAUrF,KAAKwN,IAAI7D,EAAK,EAAU,CACpEoH,WAAY,CACRC,MAAO,GACPC,MAAO,QAGf,CAAC,IAAI0E,GAAM3V,KAAK4Q,IAAK5Q,KAAKwN,IAAInI,EAAGrF,KAAKwN,IAAI7D,EAAK,KAC/C,CAAC,IAAI6J,GAAMxT,KAAK4Q,IAAK5Q,KAAKwN,IAAInI,EAAGrF,KAAKwN,IAAI7D,EAAK,GAAU,CACrDoH,WAAY,CACRE,MAAO,IACPD,MAAO,OAIf,CAAC,IAAIuC,GAAMvT,KAAK4Q,IAAK5Q,KAAKwN,IAAInI,EAAK,EAAUrF,KAAKwN,IAAI7D,EAAK,GAAU,CACjEoH,WAAY,CACRE,MAAO,IACPD,MAAO,OAaf,CACI,IAAImE,GAAOnV,KAAK4Q,IAAK5Q,KAAKwN,IAAInI,EAAK,EAAUrF,KAAKwN,IAAI7D,EAAK,IAC3D,IAAIwL,GAAOnV,KAAK4Q,IAAK5Q,KAAKwN,IAAInI,EAAK,GAAUrF,KAAKwN,IAAI7D,EAAK,MAOvE3J,KAAK0W,MAAMvV,SAAQ,SAAA6E,GACfA,EAAI7E,SAAQ,SAAAf,GACHA,GACLA,EAAG+Q,KAAKC,c,6BA4CpB,SAAwBhR,GAA4B,IAAD,OAC/C,OAAO,IAAI4U,SAAQ,SAACC,GAAa,IAAD,EAK5B,GADA7U,EAAGkR,MAAMF,QACHhR,aAAc+R,IAAkB,OAAO8C,EAAQ,GACrD,IAAMiE,EAAS9Y,aAAciV,GACvB8D,EAAY/Y,aAAc6V,GAE5B,aAAM7V,EAAGiR,WAAWa,cAApB,aAAM,EAAsBqD,OAAQ,CAChC,GAAI2D,EAAQ,OAAOjE,EAAQ,GAC3B,GAAGkE,EAAW,OAAOlE,EAAQ,GAGjChF,GAASX,KAAK,CACV8J,YAAa,CACTvD,MAAO,QACPhQ,KAAM,CAAC,IAAIkQ,GAAU,IAAIC,IACzBrU,GAAI,SAAC0X,GAED,OADApJ,GAASX,KAAK,CAAC8J,iBAAa7X,IACvB8X,GAELjZ,EAAGkZ,eAAe,CAAC/D,QAAQ,IAC3BnV,EAAGiS,kBAAkB,EAAKoC,cAAgB4E,EAAKE,cAC/C,EAAKP,SAEE/D,EAAQoE,EAAKE,eANFtE,EAAQ,Y,yBAiBlD,WACIjV,KAAK4Q,IAAI4I,UAAU,EAAG,EAAGxZ,KAAKuW,OAAOhR,MAAOvF,KAAKuW,OAAO/Q,U,oBAG5D,WACIxF,KAAKyZ,cACLzZ,KAAKyW,eACLzW,KAAK0Z,iBACLzJ,GAASX,KAAK,CAACtH,KAAMhI,KAAK2W,OAAOgD,qB,kBAGrC,WAAgB,IAAD,OACe,GAAtB3Z,KAAKyU,gBACTzU,KAAKyU,eAAiBzU,KAAK2W,OAAOiD,sBAClC5Z,KAAK0W,MAAMvV,SAAQ,SAAA6E,GACfA,EAAI7E,SAAQ,SAAAf,GACHA,GAAQA,aAAc+R,IAE3B/R,EAAGmS,YAAY,EAAKkC,qBAI5BzU,KAAKgZ,c,KC1Ob,SAASa,GAAUtD,EAA2B3F,GAK1C,IAL6F,IAApB3L,IAAmB,yDACtFwD,EAAO,GACTqR,EAAa,EACbC,EAAQ,EACNrI,EAAYzM,EAAasR,EAAO/Q,OAAS+Q,EAAOhR,MAC/CuU,EAAapI,GAChBd,EAAIiB,YACA5M,GACA2L,EAAIsC,OAAO,EAAG4G,GACdlJ,EAAIuC,OAAOoD,EAAOhR,MAAOuU,KAEzBlJ,EAAIsC,OAAO4G,EAAY,GACvBlJ,EAAIuC,OAAO2G,EAAYvD,EAAO/Q,SAGhB,GAAdsU,GAA4B,GAATC,GACnBnJ,EAAI+B,UAAY,EAChB/B,EAAIkB,YAAc,UAElBiI,EAAQ,IAERnJ,EAAI+B,UAAY,EAChB/B,EAAIkB,YAAc,WAEtBlB,EAAIwC,SACJ0G,GAAcrR,EACdsR,IAkBD,IAAM5I,GAAO,SAACoF,EAAkCC,GACnD,GAAKD,GAAWC,EAAhB,CACA,IAAM5F,EAAM2F,EAAOyD,WAAW,MACzBpJ,IACL2F,EAAOhR,MAAQ,IACfgR,EAAO/Q,OAAS,KAEhB,IAAI8Q,GAAOC,EAAO3F,EAAI4F,GAAiB,YAlB3C,SAAkBD,EAA2B3F,GAEzCA,EAAIqJ,yBAA2B,oBAE/BrJ,EAAI4D,UAAY,UAChB5D,EAAIsJ,SAAS,EAAG,EAAG3D,EAAOhR,MAAOgR,EAAO/Q,QAExCqU,GAAUtD,EAAQ3F,GAAK,GACvBiJ,GAAUtD,EAAQ3F,GAAK,GAWnBuJ,CAAS5D,EAAQ3F,SCtDlB,SAASwJ,GAAOC,GACnB,IAAM/U,EAAK,aACPgV,aAAc,MACd/P,gBAAiB,sBACjBM,QAAS,YACDwP,EAAM/U,OAAS,IAK3B,OAHG+U,EAAME,WACLjV,EAAMiF,qBAAkBhJ,GAGxB,kDAAa8Y,GAAb,IAAoB/U,MAAOA,EAA3B,SACK+U,EAAM3S,YAKZ,SAAS8S,GAAWH,GACvB,OACI,cAACD,GAAD,2BAAYC,GAAZ,IAAoB/U,MAAK,aAAGiF,gBAAgB,OAAQM,QAAQ,OAAWwP,EAAM/U,OAAQ,IAArF,SACI,mBAAGH,UAAW,aAAcG,MAAO,CAACoF,MAAO,QAASM,SAAU,aAKnE,SAASyP,GAAWJ,GACvB,IAAMK,EAAUL,EAAMK,QACtB,OACI,cAACN,GAAD,2BAAYC,GAAZ,IAAoB/U,MAAK,aAAGiF,gBAAgB,OAAQM,QAAQ,OAAWwP,EAAM/U,OAAQ,IAArF,SACI,mBAAGH,WAAauV,EAAqB,WAAb,cAAyB,WAAYpV,MAAO,CAACoF,MAAO,QAASM,SAAU,aAKpG,SAAS2P,GAAYN,GACxB,OACI,cAACD,GAAD,2BAAYC,GAAZ,aACI,mBAAGlV,UAAW,cAAeG,MAAO,CAACoF,MAAO2P,EAAME,SAAU,OAAO,UAAWvP,SAAU,aAK7F,SAAS4P,GAAaP,GACzB,OACI,cAACD,GAAD,2BAAaC,GAAb,aACI,mBAAGlV,UAAW,cAAeG,MAAO,CAACoF,MAAO2P,EAAME,SAAU,OAAO,MAAOvP,SAAU,aCnChG,SAAS6P,GAAOR,GACZ,IAAMxU,EAAOwU,EAAMxU,KACnB,EAAwC8B,mBAAS,MAAjD,mBAAOmT,EAAP,KAAqBC,EAArB,KAEA,OAAKlV,EACE,qBAAKP,MAAO,CACfvF,SAAU,QACVib,IAAK,MACLzV,MAAO,QACPC,OAAQ,QACRyV,OAAQ,GACR7Q,QAAS,OACTI,eAAgB,SAChBC,WAAY,UART,SAYH,sBAAKnF,MAAO,CAACsG,WAAY,UAAWrG,MAAO,OAAQ2V,SAAU,QAASrQ,QAAS,OAA/E,UACI,qBAAKvF,MAAO,CAACsG,WAAY,UAAWf,QAAS,MAAOI,aAAc,QAAlE,SACKpF,EAAKgQ,QAGV,qBAAKvQ,MAAO,GAAZ,SACKO,EAAKA,KAAK9C,KAAI,SAAAsW,GACX,IAAM8B,EAAa9B,EAAKxD,QAAL,OAAciF,QAAd,IAAcA,OAAd,EAAcA,EAAcjF,OAC/C,OACI,sBAAsBvL,QAAS,WAC3ByQ,EAAgB1B,IACjB/T,MAAK,aAEJ8V,WAAY,OACZnQ,aAAc,MACdb,QAAS,OACTiR,SAAU,SACVxQ,QAAS,MACTyP,aAAc,MACdgB,OAAQ,yBACJH,EAAa,CAEbG,OAAQ,mBACR,IAdR,UAiBI,qBAAKhW,MAAO,CACRsG,WAAY,UACZ0O,aAAc,MACd/U,MAAO,OACPC,OAAQ,OACR4E,QAAS,OACTiR,SAAU,UANd,SASI,qBAAK/V,MAAO,CAACC,MAAO,QAASyJ,IAAKqK,EAAKvS,QAE3C,qBAAKxB,MAAO,CAAC8V,WAAY,QAAzB,SACK/B,EAAKxD,UA7BJwD,EAAKxD,YAqC3B,uBACA,sBAAKvQ,MAAO,CAAC8E,QAAS,OAAQI,eAAgB,iBAA9C,UACI,cAACmQ,GAAD,CAAarQ,QAAS,kBAAM+P,EAAMkB,QAAQ5Z,GAAGmZ,IAAeP,UAAWO,IAEvE,cAACF,GAAD,CAActQ,QAAS,kBAAM+P,EAAMkB,QAAQ5Z,GAAG,iBA/DxC,6BAwFtB,SAAS6Z,GAASnB,GACd,IAAMrT,EAAMnE,KAAK4Y,MAAMpB,EAAMrS,KAAO,IAC9B0T,EAAUrB,EAAMrS,KAAO,GAC7B,OAAO,sBAAK1C,MAAO,CACfsG,WAAY,UACZ0O,aAAc,MACdzP,QAAS,YACTT,QAAS,eACTM,MAAO,UACPiR,WAAY,OACZ3Q,SAAU,QAPP,UASFhE,EAAM,GAAK,IAAMA,EAAMA,EATrB,IAS2B0U,EAAU,GAAK,IAAMA,EAAUA,KAqDtDE,OAhDf,WACI,MAAoCrS,qBAAWnC,GAAxCa,EAAP,EAAOA,WAAYG,EAAnB,EAAmBA,cAiBnB,SAASyT,IACL,OAAO,sBAAKvW,MAAO,CAACvF,SAAU,QAAS+b,OAAQ,MAAOvW,MAAO,QAASqG,WAAY,UAAWqP,OAAQ,GACzF9V,UAAW,MADhB,UAEH,sBAAKG,MAAO,CAACwF,UAAW,SAAxB,YACQ7C,EAAWD,MAAS,cAACwS,GAAD,CAAYlV,MAAO,CAACyW,OAAO,EAAE7Q,YAAa,OAAQZ,QAAS,WAC/E0F,GAAYV,KAAKb,EAAUoK,SAG/B,cAAC4B,GAAD,CAAYC,QAASzS,EAAW8Q,cAAezT,MAAO,CAACyW,OAAO,EAAE7Q,YAAa,OAAQZ,QAAS,WAC1FlC,EAAc,2BAAIH,GAAL,IAAgB8Q,eAAe9Q,EAAW8Q,oBAG3D,cAACyC,GAAD,CAAUxT,KAAMC,EAAWD,UAG/B,0BAMR,OApCAiC,qBAAU,WACN,IAAM+R,EAAM/L,GAAST,WAAU,SAAC3C,QAEZtL,GAAZsL,EAAI7E,OACJC,EAAWD,KAAO6E,EAAI7E,MAE1BC,EAAWmR,YAAcvM,EAAIuM,YAC7BhR,EAAc,eAAIH,OAEtB,OAAO,WACH+T,EAAItM,iBAGT,IAuBK,qCACA,cAACmL,GAAD,CAAQhV,KAAMoC,EAAWmR,YAAamC,QAAS/T,IAAgB4R,cAC/D,cAACyC,EAAD,Q,SC/GGI,OAxCf,WACI,IAAOhU,EAAcsB,qBAAWnC,GAAzBa,WACDiU,EAAYhT,iBAA0B,MACtCiT,EAAqBjT,iBAAuB,MAGlDe,qBAAU,WACNkH,GAAK+K,EAAUzS,QAAS0S,EAAmB1S,WAC5C,IAEH,IAAM2S,EAAWC,aAAa,aAC1BC,SAAU,SAACC,GACe,SAAlBA,EAAUC,KAAgBxM,GAAYV,KAAKb,EAAU4F,MACnC,UAAlBkI,EAAUC,KAAiBxM,GAAYV,KAAKb,EAAU2F,OACpC,OAAlBmI,EAAUC,KAAcxM,GAAYV,KAAKb,EAAU0F,IACjC,SAAlBoI,EAAUC,KAAgBxM,GAAYV,KAAKb,EAAUwF,QAG1D,CACCwI,MAAO,GACPC,sBAAsB,EACtBC,YAAY,EACZC,YAAY,EACZC,cAAe,EACfC,cAAeC,IACfC,kBAAmB,CAACC,SAAS,MAKrC,OACI,+CAASb,GAAT,aACI,sBAAKc,IAAKf,EAAoBhX,UAAW,0BAA4B8C,EAAW8Q,cAA+B,GAAf,gBAAhG,UACI,wBAAQmE,IAAKhB,EAAW5W,MAAO,CAAC6X,YAAa,UAC7C,cAAC,GAAD,WCdDC,OAnBf,WACE,MAA8B7T,qBAAWnC,GAEzC,OAFA,EAAOQ,QAAP,EAAgBC,WAId,eAAC,IAAD,CAAewV,SAAU3X,SAAzB,UACA,cAAC,EAAD,IACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4X,KAAK,SAASC,UAAWhV,IAChC,cAAC,IAAD,CAAO+U,KAAK,YAAYC,UAAWpP,IACnC,cAAC,IAAD,CAAOmP,KAAK,wBAAwBC,UAAWtB,KAC/C,cAAC,IAAD,CAAOqB,KAAK,IAAIC,UAAWpS,WCPpBqS,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB5I,MAAK,YAAkD,IAA/C6I,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAAShF,OACP,cAAC,IAAMiF,WAAP,UACI,cAAC,EAAD,UAEA,cAAC,GAAD,QAGJ3X,SAAS4X,eAAe,SAM1BV,O","file":"static/js/main.005c3386.chunk.js","sourcesContent":["import { ChessBoard } from \"./ChessBoard\";\nimport { ChessKing } from \"./ChessKing\";\nimport { ChessPiece } from \"./ChessPiece\";\n\nexport class PieceMovement {\n    id: number;\n    name: string;\n    icon: string;\n    isPieceWhite: boolean\n\n    prevPositionYIndex: number;\n    prevPositionXIndex: number;\n    prevPosition: string;\n    positionYIndex: number;\n    positionXIndex: number;\n    position: string;\n\n    constructor(\n        piece: ChessPiece,\n        prevPositionYIndex: number,\n        prevPositionXIndex: number,\n        positionYIndex: number,\n        positionXIndex: number,\n\n    ) {\n\n        this.id = piece.id;\n        this.name = piece.name;\n        this.icon = piece.icon;\n        this.isPieceWhite = piece.isPieceWhite;\n        this.prevPositionYIndex = prevPositionYIndex;\n        this.prevPositionXIndex = prevPositionXIndex;\n        this.positionYIndex = positionYIndex;\n        this.positionXIndex = positionXIndex;\n        this.prevPosition = `${ChessPiece.availableXMovements[this.prevPositionXIndex]}${ChessPiece.availableYMovements[this.prevPositionYIndex]}`\n        this.position = `${ChessPiece.availableXMovements[this.positionXIndex]}${ChessPiece.availableYMovements[this.positionYIndex]}`\n\n    }\n    toJSON() {\n        return [\n            this.id,\n            this.name,\n            this.icon,\n            this.isPieceWhite,\n            this.prevPositionYIndex,\n            this.prevPositionXIndex,\n            this.positionYIndex,\n            this.positionXIndex,\n            this.prevPosition,\n            this.position,\n\n        ]\n\n    }\n    toCSV() {\n        return [\n            // this.id,\n            this.name,\n            this.isPieceWhite?'white':'black',\n            // this.prevPositionYIndex,\n            // this.prevPositionXIndex,\n            // this.positionYIndex,\n            // this.positionXIndex,\n            this.prevPosition,\n            this.position,\n\n        ]\n\n    }\n    fromJSON(el:any []){\n        this.id = el[0]\n        this.name = el[1]\n        this.icon = el[2]\n        this.isPieceWhite = el[3]\n        this.prevPositionYIndex = el[4]\n        this.prevPositionXIndex = el[5]\n        this.positionYIndex = el[6]\n        this.positionXIndex = el[7]\n        this.prevPosition = el[8]\n        this.position = el[9]\n\n    }\n\n\n\n}\n","import { devLog } from \"../../env\";\nimport { ChessBoard } from \"./ChessBoard\";\nimport { ChessKing } from \"./ChessKing\";\nimport { PieceMovement } from \"./PieceMovement\";\n\nexport abstract class ChessPiece {\n    name = 'piece'\n    icon = 'chess'\n    static availableXMovements = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\n    static availableYMovements = ['8', '7', '6', '5', '4', '3', '2', '1'];\n\n    positionXIndex = 0;\n    positionYIndex = 0;\n    isPieceWhite = true;\n    successfulMovements = 0;\n\n    chessBoard: ChessBoard = new ChessBoard(true);\n    static globalId = 0\n    id = 0\n\n    king: ChessKing | null = null;\n    oppKing: ChessKing | null = null;\n\n    constructor(\n        chessBoard: ChessBoard,\n        positionYIndex: number,\n        positionXIndex: number,\n        isPieceWhite: boolean,\n        ghostId?: number\n    ) {\n        if (ghostId == undefined) {\n            ChessPiece.globalId++;\n            this.id = ChessPiece.globalId;\n        } else {\n            this.id = ghostId\n        }\n\n\n\n        this.chessBoard = chessBoard;\n        this.isPieceWhite = isPieceWhite;\n        this.positionYIndex = positionYIndex;\n        this.positionXIndex = positionXIndex;\n\n    }\n\n    anticipateOppMoves = () => {\n        const _: { [id: string]: boolean } = {}\n        for (let i = 0; i < this.chessBoard.board.length; i++) {\n            for (let j = 0; j < this.chessBoard.board[i].length; j++) {\n                const cellPiece = this.chessBoard.board[i][j];\n                if (cellPiece && cellPiece.isPieceWhite !== this.isPieceWhite) {\n                    cellPiece.availableMoves()\n                        .forEach(m => {\n                            _[m.positionYIndex + \",\" + m.positionXIndex] = true\n                        })\n                }\n\n            }\n        }\n        return _;\n    }\n    anticipateMyMoves = () => {\n        const _ = {}\n        for (let i = 0; i < this.chessBoard.board.length; i++) {\n            for (let j = 0; j < this.chessBoard.board[i].length; j++) {\n                const cell = this.chessBoard.board[i][j];\n                if (cell && cell.isPieceWhite === this.isPieceWhite) {\n                    cell.availableMoves()\n                        .forEach(m => {\n                            _[m.positionYIndex + \",\" + m.positionXIndex] = true\n                        })\n                }\n\n            }\n        }\n        return _;\n    }\n\n    move(yIndex: number, xIndex: number, cb?: () => void) {\n        const movement = new PieceMovement(this.chessBoard.pieceHash[this.id], this.positionYIndex, this.positionXIndex, yIndex, xIndex);\n        const availableMoves = this.availableMoves();\n        let canmove = false;\n        availableMoves.forEach(movements => {\n\n            if (movements.positionYIndex === yIndex && movements.positionXIndex === xIndex) {\n                canmove = true;\n            }\n        })\n\n        if (!canmove) {\n            return false;\n        }\n        // swap pos in board;\n        const temp = this.chessBoard.board[this.positionYIndex][this.positionXIndex]\n\n\n\n        this.chessBoard.board[this.positionYIndex][this.positionXIndex] = null;\n\n        const previousPositionYIndex = this.positionYIndex;\n        const previousPositionXIndex = this.positionXIndex;\n        this.positionYIndex = yIndex;\n        this.positionXIndex = xIndex;\n\n        // assign new pos\n        this.chessBoard.board[this.positionYIndex][this.positionXIndex] = temp;\n        // test to see if the move puts the king at risk\n        const oppMoves = this.anticipateOppMoves();\n        if (oppMoves[this.king?.positionYIndex + ',' + this.king?.positionXIndex]) {\n            // king is at risk\n            // revert move\n            alert('king at risk')\n\n            this.chessBoard.board[this.positionYIndex][this.positionXIndex] = null;\n\n            this.positionYIndex = previousPositionYIndex;\n            this.positionXIndex = previousPositionXIndex;\n\n            this.chessBoard.board[previousPositionYIndex][previousPositionXIndex] = temp;\n\n\n            return false;\n        }\n        const myMoves = this.anticipateMyMoves();\n        if (myMoves[this.oppKing?.positionYIndex + ',' + this.oppKing?.positionXIndex]) {\n            // king is at risk\n            // revert move\n            alert('check')\n\n\n\n        }\n\n        if (cb) {\n            cb()\n        }\n\n        this.successfulMovements++;\n        this.chessBoard.addToMovement(movement);\n        //devLog(movement)\n        return true;\n\n\n    }\n    availableMoves = () => {\n        return [] as {\n            positionYIndex: number;\n            positionY: string;\n            positionXIndex: number;\n            positionX: string;\n        }[]\n\n    }\n\n    toString() {\n        return {\n            id: this.id,\n            name: this.name,\n            type: this.isPieceWhite ? 'White' : 'Black',\n            position: `${ChessPiece.availableXMovements[this.positionXIndex]}${ChessPiece.availableYMovements[this.positionYIndex]}`\n        }\n            ;\n    }\n    currentPosition() {\n        return `Y = ${this.positionYIndex}, X = ${this.positionXIndex}`\n    }\n\n\n}\n","import { ChessBoard } from \"./ChessBoard\";\nimport { ChessPiece } from \"./ChessPiece\";\n\nexport class ChessQueen extends ChessPiece {\n    name = 'queen'\n    icon = 'fas fa-chess-queen'\n    constructor(\n        chessBoard:ChessBoard,\n        positionYIndex:number,\n        positionXIndex:number,\n        isPieceWhite:boolean,ghostId?:number\n        ) {\n        super(chessBoard,positionYIndex, positionXIndex,isPieceWhite,ghostId);\n    }\n\n    availableMoves = () => {\n        let indexes:{\n            positionYIndex:number\n            positionXIndex:number\n\n\n        }[] = [];\n\n        // check up\n\n\n\n\n        const analyzeAndBreak = (incY,incX) => {\n            if(incY < 0 || incY > 7 || incX < 0 || incX >7) return true;\n            const possiblePiece = this.chessBoard.board[incY][incX]\n            if (!possiblePiece) {\n                indexes.push({ positionYIndex: incY, positionXIndex: incX })\n\n            } else if (possiblePiece.isPieceWhite === this.isPieceWhite) {\n                // if its same color\n                return true\n\n            } else {\n                indexes.push({ positionYIndex: incY, positionXIndex: incX })\n\n                return true\n\n            }\n        }\n\n\n\n            for (let i = this.positionYIndex + 1; i < 8; i++) {\n                const incY = i;\n                const incX = this.positionXIndex\n               \n\n                if (analyzeAndBreak( incY,incX)) {\n                    break;\n                }\n            }\n            for (let i = this.positionYIndex - 1; i >= 0; i--) {\n                const incY = i;\n                const incX = this.positionXIndex\n               \n\n                if (analyzeAndBreak( incY,incX)) {\n                    break;\n                }\n            }\n            for (let i = this.positionXIndex + 1; i < 8; i++) {\n                const incX = i;\n                const incY = this.positionYIndex\n               \n\n                if (analyzeAndBreak( incY,incX)) {\n                    break;\n                }\n            }\n            for (let i = this.positionXIndex - 1; i >= 0; i--) {\n                const incX = i;\n                const incY = this.positionYIndex\n               \n\n                if (analyzeAndBreak( incY,incX)) {\n                    break;\n                }\n            }\n\n            // do diagonal \n\n\n            for (let i = 1; i < (8-this.positionYIndex); i++) {\n                const incY = this.positionYIndex + i;\n                const incX = this.positionXIndex + i;\n               \n\n                if (analyzeAndBreak( incY,incX)) {\n                    break;\n                }\n            }\n            for (let i = 1; i < Math.max(this.positionYIndex, this.positionXIndex); i++) {\n                const incY = this.positionYIndex - i;\n                const incX = this.positionXIndex -i\n               \n\n                if (analyzeAndBreak( incY,incX)) {\n                    break;\n                }\n            }\n        \n\n\n            for (let i = 1; i < (8-this.positionYIndex); i++) {\n                const incY = this.positionYIndex + i;\n                const incX = this.positionXIndex - i;\n               \n\n                if (analyzeAndBreak( incY,incX)) {\n                    break;\n                }\n            }\n            for (let i = 1; i <= this.positionYIndex; i++) {\n                const incY = this.positionYIndex - i;\n                const incX = this.positionXIndex + i\n               \n\n                if (analyzeAndBreak( incY,incX)) {\n                    break;\n                }\n            }\n        \n\n\n\n\n\n\n\n        return indexes.map(index => {\n            return {\n\n                positionYIndex: index.positionYIndex,\n                positionY: ChessPiece.availableYMovements[index.positionYIndex],\n                positionXIndex: index.positionXIndex,\n                positionX: ChessPiece.availableXMovements[index.positionYIndex]\n            }\n        })\n    }\n\n\n}\n","import { ChessQueen } from \"./ChessQueen\";\nimport { ChessPiece } from \"./ChessPiece\";\nimport { ChessBoard } from \"./ChessBoard\";\n\nexport class ChessPawn extends ChessPiece {\n    name = 'pawn'\n    icon = 'fas fa-chess-pawn'\n    _parent = ChessPiece.prototype\n     constructor(\n        chessBoard:ChessBoard,\n        positionYIndex:number,\n        positionXIndex:number,\n        isPieceWhite:boolean,ghostId?:number\n        ) {\n        super(chessBoard, positionYIndex, positionXIndex, isPieceWhite,ghostId);\n    }\n\n    move = (yIndex:number, xIndex:number) => {\n\n        return this._parent.move.apply(this, [yIndex, xIndex, () => {\n            // check if its promotable\n            if (this.isPieceWhite && yIndex === 0 || !this.isPieceWhite && yIndex === 7) {\n                // promote\n                const queen = new ChessQueen(this.chessBoard, yIndex, this.positionXIndex, this.isPieceWhite,this.id);\n                queen.king = this.king;\n                queen.oppKing = this.oppKing;\n                this.chessBoard.board[this.positionYIndex][this.positionXIndex] = queen;\n            }\n\n\n        }])\n    }\n\n    availableMoves = () => {\n        let indexes:{\n            positionYIndex:number\n            positionXIndex:number\n        }[] = [];\n        const incY1 = !this.isPieceWhite ? 1 : -1;\n        const incY2 = !this.isPieceWhite ? 2 : -2;\n\n\n\n\n        // check if it can move a step in y axes and if its own piece isnt on its moves\n        if (this.positionYIndex + incY1 < ChessPiece.availableXMovements.length && this.positionYIndex + incY1 >= 0 && !this.chessBoard.board[this.positionYIndex + incY1][this.positionXIndex]) {\n            indexes.push({ positionYIndex: this.positionYIndex + incY1, positionXIndex: this.positionXIndex })\n\n            if (this.successfulMovements === 0) {\n                // check if its first time, only move if theres nothing in the way\n\n                if (this.positionYIndex + incY2 < ChessPiece.availableYMovements.length && this.positionYIndex + incY2 >= 0 && !this.chessBoard.board[this.positionYIndex + incY2][this.positionXIndex]) {\n                    indexes.push({ positionYIndex: this.positionYIndex + incY2, positionXIndex: this.positionXIndex })\n\n                }\n            }\n\n\n\n        }\n\n\n\n    \n        if (this.positionYIndex + incY1 < ChessPiece.availableYMovements.length && this.positionYIndex + incY1 >= 0  && this.chessBoard.board[this.positionYIndex + incY1][this.positionXIndex + 1] &&this.chessBoard.board[this.positionYIndex + incY1][this.positionXIndex + 1]?.isPieceWhite === !this.isPieceWhite) {\n            indexes.push({ positionYIndex: this.positionYIndex + incY1, positionXIndex: this.positionXIndex + 1 })\n            // check diagonal if an opp is there\n        }\n \n        if (this.positionYIndex + incY1 < ChessPiece.availableYMovements.length  && this.positionYIndex + incY1 >= 0 && this.chessBoard.board[this.positionYIndex + incY1][this.positionXIndex - 1] &&this.chessBoard.board[this.positionYIndex + incY1][this.positionXIndex - 1]?.isPieceWhite === !this.isPieceWhite) {\n            indexes.push({ positionYIndex: this.positionYIndex + incY1, positionXIndex: this.positionXIndex - 1 })\n            // check diagonal if an opp is there\n        }\n\n\n\n\n\n\n\n        return indexes.map(index => {\n            return {\n\n                positionYIndex: index.positionYIndex,\n                positionY: ChessPiece.availableYMovements[index.positionYIndex],\n                positionXIndex: index.positionXIndex,\n                positionX: ChessPiece.availableXMovements[index.positionYIndex]\n            }\n        })\n    }\n\n\n}\n","import { ChessBoard } from \"./ChessBoard\";\nimport { ChessPiece } from \"./ChessPiece\";\n\nexport class ChessBishop extends ChessPiece {\n    name = 'bishop'\n    icon = 'fas fa-chess-bishop'\n     constructor(\n        chessBoard:ChessBoard,\n        positionYIndex:number,\n        positionXIndex:number,\n        isPieceWhite:boolean,ghostId?:number\n        ) {\n        super(chessBoard, positionYIndex, positionXIndex, isPieceWhite,ghostId);\n    }\n\n    availableMoves = () => {\n        let indexes:{\n            positionYIndex:number\n            positionXIndex:number\n\n\n        }[] = [];\n\n        // check up\n\n\n\n\n        const analyzeAndBreak = (incY, incX) => {\n            if (incY < 0 || incY > 7 || incX < 0 || incX > 7) return true;\n            const possiblePiece = this.chessBoard.board[incY][incX]\n            if (!possiblePiece) {\n                indexes.push({ positionYIndex: incY, positionXIndex: incX })\n\n            } else if (possiblePiece.isPieceWhite === this.isPieceWhite) {\n                // if its same color\n                return true\n\n            } else {\n                indexes.push({ positionYIndex: incY, positionXIndex: incX })\n\n                return true\n\n            }\n        }\n\n\n\n\n        // do diagonal \n\n\n        for (let i = 1; i < (8 - this.positionYIndex); i++) {\n            const incY = this.positionYIndex + i;\n            const incX = this.positionXIndex + i;\n\n\n            if (analyzeAndBreak(incY, incX)) {\n                break;\n            }\n        }\n        for (let i = 1; i < Math.max(this.positionYIndex, this.positionXIndex); i++) {\n            const incY = this.positionYIndex - i;\n            const incX = this.positionXIndex - i\n\n\n            if (analyzeAndBreak(incY, incX)) {\n                break;\n            }\n        }\n\n\n\n        for (let i = 1; i < (8 - this.positionYIndex); i++) {\n            const incY = this.positionYIndex + i;\n            const incX = this.positionXIndex - i;\n\n\n            if (analyzeAndBreak(incY, incX)) {\n                break;\n            }\n        }\n        for (let i = 1; i <= Math.max(this.positionYIndex,this.positionXIndex); i++) {\n            const incY = this.positionYIndex - i;\n            const incX = this.positionXIndex + i\n\n\n            if (analyzeAndBreak(incY, incX)) {\n                break;\n            }\n        }\n\n\n\n\n\n\n        return indexes.map(index => {\n            return {\n\n                positionYIndex: index.positionYIndex,\n                positionY: ChessPiece.availableYMovements[index.positionYIndex],\n                positionXIndex: index.positionXIndex,\n                positionX: ChessPiece.availableXMovements[index.positionYIndex]\n            }\n        })\n    }\n\n\n}\n","import { ChessBoard } from \"./ChessBoard\";\nimport { ChessPiece } from \"./ChessPiece\";\n\nexport class ChessRook extends ChessPiece {\n    name = 'rook'\n    icon = 'fas fa-chess-rook'\n    constructor(\n        chessBoard:ChessBoard,\n        positionYIndex:number,\n        positionXIndex:number,\n        isPieceWhite:boolean,ghostId?:number\n        ) {\n        super(chessBoard,positionYIndex, positionXIndex,isPieceWhite,ghostId);\n    }\n\n    availableMoves = () => {\n        let indexes:{\n            positionYIndex:number\n            positionXIndex:number\n\n\n        }[] = [];\n\n        // check up\n\n\n\n\n        const analyzeAndBreak = (incY,incX) => {\n            if(incY < 0 || incY > 7 || incX < 0 || incX >7) return true;\n            const possiblePiece = this.chessBoard.board[incY][incX]\n            if (!possiblePiece) {\n                indexes.push({ positionYIndex: incY, positionXIndex: incX })\n\n            } else if (possiblePiece.isPieceWhite === this.isPieceWhite) {\n                // if its same color\n                return true\n\n            } else {\n                indexes.push({ positionYIndex: incY, positionXIndex: incX })\n\n                return true\n\n            }\n        }\n\n\n\n            for (let i = this.positionYIndex + 1; i < 8; i++) {\n                const incY = i;\n                const incX = this.positionXIndex\n               \n\n                if (analyzeAndBreak( incY,incX)) {\n                    break;\n                }\n            }\n            for (let i = this.positionYIndex - 1; i >= 0; i--) {\n                const incY = i;\n                const incX = this.positionXIndex\n               \n\n                if (analyzeAndBreak( incY,incX)) {\n                    break;\n                }\n            }\n            for (let i = this.positionXIndex + 1; i < 8; i++) {\n                const incX = i;\n                const incY = this.positionYIndex\n               \n\n                if (analyzeAndBreak( incY,incX)) {\n                    break;\n                }\n            }\n            for (let i = this.positionXIndex - 1; i >= 0; i--) {\n                const incX = i;\n                const incY = this.positionYIndex\n               \n\n                if (analyzeAndBreak( incY,incX)) {\n                    break;\n                }\n            }\n\n            // do diagonal \n\n\n\n\n\n\n\n\n\n        return indexes.map(index => {\n            return {\n\n                positionYIndex: index.positionYIndex,\n                positionY: ChessPiece.availableYMovements[index.positionYIndex],\n                positionXIndex: index.positionXIndex,\n                positionX: ChessPiece.availableXMovements[index.positionYIndex]\n            }\n        })\n    }\n\n\n}\n","import { ChessBoard } from \"./ChessBoard\";\nimport { ChessPiece } from \"./ChessPiece\";\n\nexport class ChessKing extends ChessPiece {\n    name = 'king'\n    icon = 'fas fa-chess-king'\n    constructor(\n        chessBoard:ChessBoard,\n        positionYIndex:number,\n        positionXIndex:number,\n        isPieceWhite:boolean,ghostId?:number\n        ) {\n           \n        super(chessBoard,positionYIndex, positionXIndex,isPieceWhite,ghostId);\n      \n    }\n\n    availableMoves = () => {\n        let indexes:{\n            positionYIndex:number\n            positionXIndex:number\n\n\n        }[] = [];\n\n        // check up\n\n\n\n\n        const analyzeAndBreak = (incY,incX) => {\n            if(incY < 0 || incY > 7 || incX < 0 || incX >7) return true;\n            const possiblePiece = this.chessBoard.board[incY][incX]\n            if (!possiblePiece) {\n                indexes.push({ positionYIndex: incY, positionXIndex: incX })\n\n            } else if (possiblePiece.isPieceWhite === this.isPieceWhite) {\n                // if its same color\n                return true\n\n            } else {\n                indexes.push({ positionYIndex: incY, positionXIndex: incX })\n\n                return true\n\n            }\n        }\n\n\n\n       \n        const movements = [\n            [1,0],\n            [0,1],\n            [-1,0],\n            [0,-1],\n\n            [1,1],\n            [-1,-1],\n            [-1,1],\n            [1,-1],\n\n\n\n        ]\n        \n\n\n            for (let i = 0; i < movements.length; i++) {\n                const curr = movements[i]\n                const incY = this.positionYIndex + curr[0];\n                const incX = this.positionXIndex + curr[1];\n               \n\n                analyzeAndBreak( incY,incX)\n            }\n          \n\n\n\n\n\n\n\n        return indexes.map(index => {\n            return {\n\n                positionYIndex: index.positionYIndex,\n                positionY: ChessPiece.availableYMovements[index.positionYIndex],\n                positionXIndex: index.positionXIndex,\n                positionX: ChessPiece.availableXMovements[index.positionYIndex]\n            }\n        })\n    }\n\n\n}\n","import { ChessBoard } from \"./ChessBoard\";\nimport { ChessPiece } from \"./ChessPiece\";\n\nexport class ChessKnight extends ChessPiece {\n    name = 'knight'\n    icon = 'fas fa-chess-knight'\n     constructor(\n        chessBoard:ChessBoard,\n        positionYIndex:number,\n        positionXIndex:number,\n        isPieceWhite:boolean,ghostId?:number\n        ) {\n        super(chessBoard,positionYIndex, positionXIndex,isPieceWhite,ghostId);\n\n    }\n\n\n\n    availableMoves = () => {\n        let indexes:{\n            positionYIndex:number\n            positionXIndex:number\n\n\n        }[] = [];\n\n        // check up\n\n\n\n\n        const analyzeAndBreak = (incY,incX) => {\n   \n            if(incY < 0 || incY > 7 || incX < 0 || incX >7) return true;\n           \n          \n           \n            const possiblePiece = this.chessBoard.board[incY][incX]\n            if (!possiblePiece) {\n                indexes.push({ positionYIndex: incY, positionXIndex: incX })\n\n            } else if (possiblePiece.isPieceWhite === this.isPieceWhite) {\n                // if its same color\n             //   return true\n\n            } else {\n                indexes.push({ positionYIndex: incY, positionXIndex: incX })\n\n                return true\n\n            }\n        }\n\n\n\n       \n        const movements = [\n            [2,1],\n            [2,-1],\n            [-2,1],\n            [-2,-1],\n            [1,2],\n            [1,-2],\n            [-1,2],\n            [-1,-2],\n      \n\n\n\n        ]\n        \n\n\n            for (let i = 0; i < movements.length; i++) {\n                const curr = movements[i]\n                const incY = this.positionYIndex + curr[0];\n                const incX = this.positionXIndex + curr[1];\n               \n\n                analyzeAndBreak( incY,incX)\n            }\n          \n\n\n\n\n\n\n\n        return indexes.map(index => {\n            return {\n\n                positionYIndex: index.positionYIndex,\n                positionY: ChessPiece.availableYMovements[index.positionYIndex],\n                positionXIndex: index.positionXIndex,\n                positionX: ChessPiece.availableXMovements[index.positionYIndex]\n            }\n        })\n    }\n\n\n\n}\n","import { ChessPawn } from \"./ChessPawn\";\nimport { ChessQueen } from \"./ChessQueen\";\nimport { ChessBishop } from \"./ChessBishop\";\nimport { ChessRook } from \"./ChessRook\";\nimport { ChessKing } from \"./ChessKing\";\nimport { ChessKnight } from \"./ChessKnight\";\nimport { ChessPiece } from \"./ChessPiece\";\nimport { PieceMovement } from \"./PieceMovement\";\n\n\n\nexport class ChessBoard {\n    board: ChessKing[][] | null[][] = [\n        [null, null, null, null, null, null, null, null],\n        [null, null, null, null, null, null, null, null],\n        [null, null, null, null, null, null, null, null],\n        [null, null, null, null, null, null, null, null],\n        [null, null, null, null, null, null, null, null],\n        [null, null, null, null, null, null, null, null],\n        [null, null, null, null, null, null, null, null],\n        [null, null, null, null, null, null, null, null],\n    ]\n    isWhiteTurnToPlay = false\n    pieceHash: { [id: number]: ChessPiece } = {}\n    killedHash: { [str: string]: ChessPiece | null } = {}\n    private movements: PieceMovement[] = []\n    movementIndex = 0\n    private initiated = false;\n    constructor(dummy = false) {\n        if (this.initiated || dummy) return\n\n        this.init()\n        this.initiated = true;\n\n    }\n    init() {\n\n        const blackKing = new ChessKing(this, 0, 3, false);\n        this.board[0][3] = blackKing\n\n        this.board[0][0] = new ChessRook(this, 0, 0, false);\n        this.board[0][7] = new ChessRook(this, 0, 7, false);\n\n        this.board[0][1] = new ChessKnight(this, 0, 1, false);\n        this.board[0][6] = new ChessKnight(this, 0, 6, false);\n\n        this.board[0][4] = new ChessQueen(this, 0, 4, false);\n        this.board[0][2] = new ChessBishop(this, 0, 2, false);\n        this.board[0][5] = new ChessBishop(this, 0, 5, false);\n\n        this.board[1][0] = new ChessPawn(this, 1, 0, false);\n        this.board[1][1] = new ChessPawn(this, 1, 1, false);\n        this.board[1][2] = new ChessPawn(this, 1, 2, false);\n        this.board[1][3] = new ChessPawn(this, 1, 3, false);\n        this.board[1][4] = new ChessPawn(this, 1, 4, false);\n        this.board[1][5] = new ChessPawn(this, 1, 5, false);\n        this.board[1][6] = new ChessPawn(this, 1, 6, false);\n        this.board[1][7] = new ChessPawn(this, 1, 7, false)\n\n\n\n\n        const whiteKing = new ChessKing(this, 7, 3, true);\n        this.board[7][3] = whiteKing\n        this.board[7][0] = new ChessRook(this, 7, 0, true);\n        this.board[7][7] = new ChessRook(this, 7, 7, true);\n        this.board[7][1] = new ChessKnight(this, 7, 1, true);\n        this.board[7][6] = new ChessKnight(this, 7, 6, true);\n        this.board[7][4] = new ChessQueen(this, 7, 4, true);\n        this.board[7][2] = new ChessBishop(this, 7, 2, true);\n        this.board[7][5] = new ChessBishop(this, 7, 5, true);\n\n        this.board[6][0] = new ChessPawn(this, 6, 0, true);\n        this.board[6][1] = new ChessPawn(this, 6, 1, true);\n        this.board[6][2] = new ChessPawn(this, 6, 2, true);\n        this.board[6][3] = new ChessPawn(this, 6, 3, true);\n        this.board[6][4] = new ChessPawn(this, 6, 4, true);\n        this.board[6][5] = new ChessPawn(this, 6, 5, true);\n        this.board[6][6] = new ChessPawn(this, 6, 6, true);\n        this.board[6][7] = new ChessPawn(this, 6, 7, true);\n\n\n\n\n\n        // set the aims for all pieces, whom they should protect and whom they should all attack\n        for (let i = 0; i < this.board.length; i++) {\n            for (let j = 0; j < this.board[i].length; j++) {\n                const cell = this.board[i][j];\n                if (cell) {\n                    this.pieceHash[cell.id] = cell;\n                    if (cell.isPieceWhite) { // if its my piece\n\n                        cell.king = whiteKing;\n                        cell.oppKing = blackKing;\n                    } else {\n                        cell.oppKing = whiteKing;\n                        cell.king = blackKing;\n                    }\n\n                }\n\n            }\n        }\n\n\n    }\n\n    toString() {\n        return JSON.stringify(this.board.map(r => r.map(_ => _ ? `${_.id}-${_.name}` : 'null')));\n    }\n    canUndo() {\n        return (this.movementIndex < this.movements.length)\n    }\n    canRedo() {\n        return (this.movementIndex - 1 >= 0)\n    }\n    performUndo() {\n\n        const movement = this.movements[this.movementIndex]\n        const piece = this.board[movement.positionYIndex][movement.positionXIndex];\n\n        if (!piece) return;\n\n        piece.positionYIndex = movement.prevPositionYIndex;\n        piece.positionXIndex = movement.prevPositionXIndex;\n\n\n        this.board[movement.prevPositionYIndex][movement.prevPositionXIndex] = piece;\n\n        this.board[movement.positionYIndex][movement.positionXIndex] = this.killedHash[movement.positionYIndex + ',' + movement.positionXIndex];\n\n        this.movementIndex++;\n    }\n\n    performRedo() {\n        this.movementIndex--;\n\n        const movement = this.movements[this.movementIndex]\n        const piece = this.board[movement.prevPositionYIndex][movement.prevPositionXIndex];\n        if (!piece) return;\n\n\n        piece.positionYIndex = movement.positionYIndex;\n        piece.positionXIndex = movement.positionXIndex;\n\n        this.board[movement.positionYIndex][movement.positionXIndex] = piece;\n\n        this.board[movement.prevPositionYIndex][movement.prevPositionXIndex] = null;\n\n    }\n    addToMovement(movement: PieceMovement) {\n        const n = this.getMovements();\n        n.unshift(movement);\n        this.movements = n;\n        this.movementIndex = 0;\n\n    }\n    getMovements() {\n        return this.movements.slice(this.movementIndex);\n    }\n\n}\n\n\n\n\n","import { useEffect, useRef, useState } from \"react\";\nimport { ChessPiece } from \"../engine/ChessPiece\";\n\nfunction Bar({pieceWidth,horizontal}) {\n    const arr = horizontal ? ChessPiece.availableXMovements: ChessPiece.availableYMovements;\nreturn (\n\n\n                <div className={horizontal ?'Bar-X': ''} >\n                    {arr.map((c, x) => {\n                        return (<div key={x} className={horizontal ?'Bar-X': 'Board-X'} style={{ width: pieceWidth + 'px', height: pieceWidth + 'px', }}>\n                            {c}\n                        </div>)\n                    })}\n                </div>\n)\n    \n}\n\nexport default Bar;\n","export const LOGGING = true && !process.env.production;\nexport const devLog = (o)=> {\n    if(!LOGGING) return;\n    console.warn(o)\n\n}","import { PieceMovement } from \"../chess/engine/PieceMovement\";\n\nexport const safeObjectAssessor = (...args) => {\n    let base = args[0];\n\n    for (let i = 1; i < args.length; i++) {\n        if (!base) return false;\n        base = base[args[i]];\n    }\n\n    return true;\n\n}\nexport const csvGenerator = (data: PieceMovement[]) => {\n\n    let csvContent = \"data:text/csv;charset=utf-8,\";\n\n    data.forEach(function (obj: PieceMovement) {\n        let row = obj.toCSV().join(\",\");\n        csvContent += row + \"\\r\\n\";\n    });\n    var encodedUri = encodeURI(csvContent);\n    var link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"my_data.csv\");\n    document.body.appendChild(link); // Required for FF\n\n    link.click();\n}\n","\nexport const NAVS = [\n    {\n        to:'/chess',\n        name:'Chess',\n        img:process.env.PUBLIC_URL + '/assets/chess-banner.png'\n    },\n    {\n        to:'/checkers',\n        name:'Checkers',\n        img:process.env.PUBLIC_URL + '/assets/checkers-banner.png'\n    },    {\n        to:'/stolen-in-60-seconds',\n        name:'Stolen in 60 seconds',\n        img:process.env.PUBLIC_URL + '/assets/ss60-banner.png'\n    }\n]\n\nexport interface HashIndex {\n    [id: string]: {\n        positionYIndex: number\n        positionXIndex: number\n        jumpPosition?: number[][]\n        id: 0\n\n\n    }\n}\n\nexport function f() {\n    return Math.min(window.innerHeight, window.innerWidth)  - (150 + (window.innerWidth > 700 ? 100 : 0))\n}","import React, { FC, useState, createContext } from 'react';\nimport {Tool} from \"../StolenIn60Seconds/misc/models/Tool\";\nimport {PromptData} from \"../StolenIn60Seconds/misc/types\";\n\ninterface StageProps  {\n    screenGrabbed?: boolean;\n    time: number;\n    toolsPrompt?:PromptData<Tool[], Tool>;\n}\ninterface StateContext  {\n    showNav: boolean;\n    setShowNav: (value: (((prevState: boolean) => boolean) | boolean)) => void;\n    optionsClicked: boolean;\n    setOptionsClicked: (value: (((prevState: boolean) => boolean) | boolean)) => void;\n    stageProps: {\n        screenGrabbed?: boolean;\n        time: number;\n        toolsPrompt?:PromptData<Tool[], Tool>;\n    },\n    setStageProps: React.Dispatch<React.SetStateAction<StageProps>>\n};\n\n\nexport const StateContext = createContext<StateContext>(\n    {} as StateContext\n);\nconst stagePropsObj ={\n    content:{\n\n    }\n\n} as { content:StageProps }\nexport const getStageProps = () =>{\n    return stagePropsObj.content\n}\nexport const StateProvider = ({ children }: any) => {\n    const [showNav, setShowNav] = useState(true);\n    const [optionsClicked, setOptionsClicked] = useState(false);\n    const [stageProps, _setStageProps] = useState({time:0} as StageProps);\n    const  setStageProps:any = (obj:StageProps) => {\n        stagePropsObj.content = obj;\n        return _setStageProps(obj)\n    }\n\n    const states = {\n        showNav, setShowNav,optionsClicked, setOptionsClicked,stageProps, setStageProps\n    }\n\n    return (\n        <StateContext.Provider value={states}>\n            {children}\n        </StateContext.Provider>\n    );\n};\n","import {useContext, useEffect, useRef, useState} from \"react\";\nimport { ChessBoard } from \"./engine/ChessBoard\";\nimport './Chess.css';\nimport { ChessPiece } from \"./engine/ChessPiece\";\nimport Bar from \"./misc/Bar\";\nimport { devLog } from '../env'\nimport { PieceMovement } from \"./engine/PieceMovement\";\nimport { csvGenerator } from \"../misc/functions\";\nimport { f } from \"../misc/data\";\nimport {StateContext} from \"../misc/StateProvider\";\n\n\n\nfunction ChessGame() {\n    const [size, setSize] = useState({\n        boardWidth: f(),\n        pieceWidth: (f()) / 8\n    })\n    const [board, setBoard] = useState([] as ChessPiece[][] | null[][])\n    const [movementHistory, setMovementHistory] = useState([] as PieceMovement[])\n    const [availableMoves, setAvailableMoves] = useState({} as { [id: string]: boolean })\n    const [selectedPiece, setSelectedPiece] = useState(null as ChessPiece | null)\n\n    const chessBoardRef = useRef(null as any as ChessBoard);\n\n    const [isWhiteTurnToPlay, setIsWhiteTurnToPlay] = useState(true);\n    const [{ canUndo, canRedo }, setUndoAndRedo] = useState({ canUndo: false, canRedo: false });\n\n    const {showNav, setShowNav} = useContext(StateContext)\n\n    function reloadBoard() {\n        chessBoardRef.current.isWhiteTurnToPlay = !chessBoardRef.current.isWhiteTurnToPlay\n        setBoard(chessBoardRef.current.board)\n        setMovementHistory(chessBoardRef.current.getMovements())\n        setAvailableMoves({});\n        setSelectedPiece(null);\n        setIsWhiteTurnToPlay(chessBoardRef.current.isWhiteTurnToPlay)\n        setUndoAndRedo({ canRedo: chessBoardRef.current.canRedo(), canUndo: chessBoardRef.current.canUndo() })\n    }\n    function init() {\n        chessBoardRef.current = new ChessBoard();\n\n        reloadBoard()\n    }\n\n\n    useEffect(() => {\n        setShowNav(false)\n        init()\n        const cb = () => {\n            const boardWidth = f()\n            const pieceWidth = boardWidth / 8;\n\n            setSize(\n                {\n                    boardWidth,\n                    pieceWidth\n                }\n            )\n\n        }\n        window.addEventListener('resize', cb)\n        return () => {\n            window.removeEventListener('resize', cb)\n        }\n\n\n    }, [])\n\n    function onPieceClick(piece: ChessPiece | null, y: number, x: number) {\n        if (availableMoves[y + \",\" + x]) {\n            if (!selectedPiece?.move(y, x)) {\n                // invalid move\n                return;\n            }\n\n            reloadBoard()\n\n\n\n\n        } else if (piece) {\n            devLog(piece.toString())\n            if (isWhiteTurnToPlay !== piece.isPieceWhite) {\n                setAvailableMoves({});\n                setSelectedPiece(null);\n                return;\n            }\n\n\n            // show available moves\n            const a = piece.availableMoves();\n\n            const _: { [id: string]: boolean } = {}\n            a.forEach(m => {\n\n                _[m.positionYIndex + \",\" + m.positionXIndex] = true\n            });\n\n            setAvailableMoves(_);\n            setSelectedPiece(piece);\n\n        } else {\n            setAvailableMoves({});\n            setSelectedPiece(null);\n        }\n\n    }\n    function performRedo() {\n        chessBoardRef.current.performRedo();\n        reloadBoard()\n    }\n    function performUndo() {\n        chessBoardRef.current.performUndo();\n        reloadBoard()\n    }\n\n    return (\n        <div className=\"Whole-Body\">\n\n            <div className=\"Chess-Field\">\n                <div className=\"Chess-Pre-Playable\">\n                    <Bar pieceWidth={size.pieceWidth} horizontal />\n                    <div className=\"Chess-Playable\">\n                        <Bar pieceWidth={size.pieceWidth} horizontal={false} />\n                        <div className='Board' style={{ width: size.boardWidth + 'px', height: size.boardWidth + 'px' }} >\n\n                            {board.map((row: ChessPiece[] | null[], y: number) => {\n\n                                return (<div key={y} className='Board-Y' style={{ display: 'flex' }}>\n\n\n\n                                    {row.map((piece: ChessPiece | null, x: number) => {\n\n                                        const shouldHighlight = availableMoves[y + \",\" + x];\n                                        return (<div onClick={() => onPieceClick(piece, y, x)} key={x} className='Board-X' style={{ width: size.pieceWidth + 'px', height: size.pieceWidth + 'px', backgroundColor: (x % 2 === 0) === (y % 2 === 0) ? 'rgba(245, 222, 179, 0.596)' : '' }}>\n                                            <div className={!piece ? '' : (isWhiteTurnToPlay !== piece.isPieceWhite) ? 'Piece-inner-invalid' : 'Piece-inner-valid'} style={{ width: '70%', height: '70%', display: 'flex', justifyContent: 'center', alignItems: 'center', backgroundColor: !(shouldHighlight || piece && piece === selectedPiece) ? '' : 'rgba(255, 255, 0, 0.5)' }}>\n                                                {piece ? <i className={piece.icon} style={{ color: (piece.isPieceWhite ? \"white\" : \"black\") }} ></i> : ''}\n\n                                            </div>\n                                        </div>\n\n\n                                        )\n                                    })}\n\n\n\n                                </div>\n\n\n                                )\n                            })}\n                        </div>\n                        <Bar pieceWidth={size.pieceWidth} horizontal={false} />\n                    </div>\n                    <Bar pieceWidth={size.pieceWidth} horizontal />\n                    <div className=\"text-center\">\n                        {canUndo && <button onClick={performUndo} className=\"m-2\">  <i className=\"fa fa-undo\" /></button>}\n                        {canRedo && <button onClick={performRedo} className=\"m-2\">  <i className=\"fa fa-redo\" /></button>}\n\n\n                    </div>\n                </div>\n              \n                <div className='Side' style={{ padding: '10px' }} >\n                    <div className='' style={{ padding: '0 30px' }} >\n                        Piece To Play\n                        <br />\n                        <i className={'fa fa-chess '} style={{ color: isWhiteTurnToPlay ? 'white' : 'black' }} ></i>\n                        <hr />\n                        <div style={{ textAlign: 'center' }}>\n                            {movementHistory.length != 0 && <>\n                                <button onClick={() => { csvGenerator(movementHistory) }}><i className=\"fa fa-file-download\" /></button>\n                                <br />\n                            </>}\n                            {movementHistory.map((movement, key) => {\n\n                                return (\n                                    <div style={{ fontSize: '13px', marginBottom: '5px', display: 'flex', justifyContent: 'center' }} key={key}>\n                                        <div style={{ marginRight: '5px' }}>\n                                            <i className={movement.icon} style={{ color: movement.isPieceWhite ? 'white' : 'black' }} />\n                                        </div>\n                                        <div>\n                                            {movement.prevPosition} <i className=\"fa fa-arrow-right\" /> {movement.position}\n                                        </div>\n                                    </div>\n                                )\n\n                            })}\n                        </div>\n                    </div> </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ChessGame;\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { NAVS } from './misc/data';\nimport './index';\n\nfunction Home() {\n  const [boundWidth, setBoundWidth] = useState(0);\n\n  useEffect(() => {\n    const elem = document.querySelector('#bound');\n\n    var rect = elem?.getBoundingClientRect();\n\n    setBoundWidth(rect?.width || 0);\n\n\n  }, [])\n  return (\n    <div className='container'>\n      <div className='row'>\n\n        {NAVS.map((nav, i) => {\n          return (\n            <div id=\"bound\" className='col-6 col-md-4 col-lg-3 mb-2'>\n\n              <Link\n                className='d-block border rounded  text-center bound-inner'\n                key={i}\n                to={nav.to}\n                style={{\n                  height: (boundWidth - 24) + 'px',\n                  verticalAlign:'bottom',\n                  background: `url('${nav.img}')`,\n                  backgroundSize:'cover'\n\n                }}\n              >\n                <div style={{visibility:'hidden'}}>{nav.name}</div>\n                <div className='bound-content p-1 bg-primary rounded text-white'>\n                  {nav.name}\n                </div>\n\n\n              </Link>\n\n\n            </div>\n          )\n\n        })}\n\n\n      </div>\n    </div>\n\n  );\n}\n\nexport default Home;\n","\nimport { CheckerPiece } from \"./CheckerPiece\";\n\nexport class PieceMovement {\n    id: number;\n    name: string;\n    icon: string;\n    isPieceWhite: boolean\n\n    prevPositionYIndex: number;\n    prevPositionXIndex: number;\n    prevPosition: string;\n    positionYIndex: number;\n    positionXIndex: number;\n    position: string;\n    jumpPosition: number[][]\n\n    constructor(\n        id: number,\n        name:string,\n        icon:string,\n        isPieceWhite:boolean,\n        prevPositionYIndex: number,\n        prevPositionXIndex: number,\n        positionYIndex: number,\n        positionXIndex: number,\n        jumpPosition: number[][] = []\n\n    ) {\n\n        this.id = id;\n        this.name = name;\n        this.icon = icon;\n        this.isPieceWhite = isPieceWhite;\n        this.prevPositionYIndex = prevPositionYIndex;\n        this.prevPositionXIndex = prevPositionXIndex;\n        this.positionYIndex = positionYIndex;\n        this.positionXIndex = positionXIndex;\n        this.prevPosition = `${CheckerPiece.availableXMovements[this.prevPositionXIndex]}${CheckerPiece.availableYMovements[this.prevPositionYIndex]}`\n        this.position = `${CheckerPiece.availableXMovements[this.positionXIndex]}${CheckerPiece.availableYMovements[this.positionYIndex]}`\n        this.jumpPosition = jumpPosition\n    }\n    toJSON() {\n        return [\n            this.id,\n            this.name,\n            this.icon,\n            this.isPieceWhite,\n            this.prevPositionYIndex,\n            this.prevPositionXIndex,\n            this.positionYIndex,\n            this.positionXIndex,\n            this.prevPosition,\n            this.position,\n            this.jumpPosition\n        ]\n\n    }\n    toCSV() {\n        return [\n            // this.id,\n            this.name,\n            this.isPieceWhite ? 'white' : 'black',\n            // this.prevPositionYIndex,\n            // this.prevPositionXIndex,\n            // this.positionYIndex,\n            // this.positionXIndex,\n            this.prevPosition,\n            this.position,\n\n        ]\n\n    }\n    fromJSON(el: any[]) {\n        this.id = el[0]\n        this.name = el[1]\n        this.icon = el[2]\n        this.isPieceWhite = el[3]\n        this.prevPositionYIndex = el[4]\n        this.prevPositionXIndex = el[5]\n        this.positionYIndex = el[6]\n        this.positionXIndex = el[7]\n        this.prevPosition = el[8]\n        this.position = el[9]\n        this.jumpPosition = el[10]\n\n    }\n    serialize(){\n        return [\n            this.id,\n            this.name,\n            this.icon,\n            this.isPieceWhite,\n            this.prevPositionYIndex,\n            this.prevPositionXIndex,\n            this.positionYIndex,\n            this.positionXIndex,\n            this.jumpPosition\n        ]\n    }\n\n\n\n}\n","import { devLog } from \"../../env\";\nimport { CheckerBoard } from \"./CheckerBoard\";\nimport { CheckerPawn } from \"./CheckerPawn\";\nimport { CheckerQueen } from \"./CheckerQueen\";\n\nimport { PieceMovement } from \"./PieceMovement\";\n\nexport abstract class CheckerPiece {\n    name = 'piece'\n    icon = 'chess'\n    static availableXMovements = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\n    static availableYMovements = ['8', '7', '6', '5', '4', '3', '2', '1'];\n\n    positionXIndex = 0;\n    positionYIndex = 0;\n    isPieceWhite = true;\n    successfulMovements = 0;\n\n    chessBoard: CheckerBoard = new CheckerBoard(true);\n    static globalId = 0\n    id = 0\n\n\n\n    constructor(\n        chessBoard: CheckerBoard,\n        positionYIndex: number,\n        positionXIndex: number,\n        isPieceWhite: boolean,\n        ghostId?: number\n    ) {\n        if (ghostId == undefined) {\n            CheckerPiece.globalId++;\n            this.id = CheckerPiece.globalId;\n        } else {\n            this.id = ghostId\n        }\n\n\n\n        this.chessBoard = chessBoard;\n        this.isPieceWhite = isPieceWhite;\n        this.positionYIndex = positionYIndex;\n        this.positionXIndex = positionXIndex;\n\n    }\n\n    anticipateOppMoves = () => {\n        const _: { [id: string]: boolean } = {}\n        for (let i = 0; i < this.chessBoard.board.length; i++) {\n            for (let j = 0; j < this.chessBoard.board[i].length; j++) {\n                const cellPiece = this.chessBoard.board[i][j];\n                if (cellPiece && cellPiece.isPieceWhite !== this.isPieceWhite) {\n                    cellPiece.availableMoves()\n                        .forEach(m => {\n                            _[m.positionYIndex + \",\" + m.positionXIndex] = true\n                        })\n                }\n\n            }\n        }\n        return _;\n    }\n    anticipateMyMoves = () => {\n        const _ = {}\n        for (let i = 0; i < this.chessBoard.board.length; i++) {\n            for (let j = 0; j < this.chessBoard.board[i].length; j++) {\n                const cell = this.chessBoard.board[i][j];\n                if (cell && cell.isPieceWhite === this.isPieceWhite) {\n                    cell.availableMoves()\n                        .forEach(m => {\n                            _[m.positionYIndex + \",\" + m.positionXIndex] = true\n                        })\n                }\n\n            }\n        }\n        return _;\n    }\n\n    move(yIndex: number, xIndex: number, cb?: () => void) {\n        const availableMoves = this.availableMoves();\n        let canmove = false;\n        let jumpPosition: undefined | number[][] = undefined;\n        availableMoves.forEach(movements => {\n\n            if (movements.positionYIndex === yIndex && movements.positionXIndex === xIndex) {\n                canmove = true\n                jumpPosition = movements.jumpPosition;\n            }\n        })\n        const p = this.chessBoard.pieceHash[this.id];\n        const movement = new PieceMovement(p.id,p.name,p.icon,p.isPieceWhite, this.positionYIndex, this.positionXIndex, yIndex, xIndex, jumpPosition);\n\n        if (!canmove) {\n            return false;\n        }\n\n        // swap pos in board;\n        const temp = this.chessBoard.board[this.positionYIndex][this.positionXIndex]\n\n\n\n        this.chessBoard.board[this.positionYIndex][this.positionXIndex] = null;\n\n        const previousPositionYIndex = this.positionYIndex;\n        const previousPositionXIndex = this.positionXIndex;\n        this.positionYIndex = yIndex;\n        this.positionXIndex = xIndex;\n\n        // assign new pos\n        this.chessBoard.board[this.positionYIndex][this.positionXIndex] = temp;\n        // test to see if the move puts the king at risk\n\n\n        if (cb) {\n            cb()\n        }\n\n        this.successfulMovements++;\n        this.chessBoard.addToMovement(movement);\n        //devLog(movement)\n        return true;\n\n\n    }\n    availableMoves = () => {\n        return [] as {\n            positionYIndex: number;\n            positionY: string;\n            positionXIndex: number;\n            positionX: string;\n            jumpPosition?: number[][]\n        }[]\n\n    }\n\n\n    toString() {\n        return {\n            id: this.id,\n            name: this.name,\n            type: this.isPieceWhite ? 'White' : 'Black',\n            position: `${CheckerPiece.availableXMovements[this.positionXIndex]}${CheckerPiece.availableYMovements[this.positionYIndex]}`\n        }\n            ;\n    }\n    currentPosition() {\n        return `Y = ${this.positionYIndex}, X = ${this.positionXIndex}`\n    }\n    clone = (): CheckerPiece => {\n        return null as any as CheckerPiece;\n    }\n    serialize = (toString = false) => {\n        const s = [\n            this.id,\n            this.name,\n            this.icon,\n            this.positionYIndex,\n            this.positionXIndex,\n            this.isPieceWhite,\n            this.successfulMovements,\n        ]\n        return toString ? JSON.stringify(s) : s;\n    }\n \n\n\n\n}\n","import { threadId } from \"worker_threads\";\nimport { HashIndex } from \"../../misc/data\";\nimport { CheckerBoard } from \"./CheckerBoard\";\nimport { CheckerPiece } from \"./CheckerPiece\";\n\n\n\nexport class CheckerQueen extends CheckerPiece {\n    name = 'queen'\n    icon = 'fas fa-chess-queen'\n    constructor(\n        chessBoard: CheckerBoard,\n        positionYIndex: number,\n        positionXIndex: number,\n        isPieceWhite: boolean, ghostId?: number\n    ) {\n        super(chessBoard, positionYIndex, positionXIndex, isPieceWhite, ghostId);\n    }\n\n    availableMoves = (indexes: HashIndex = {}, id = 0, positionYIndex = this.positionYIndex, positionXIndex = this.positionXIndex, preArr = []) => {\n\n        if (id == 1) {\n            console.log({ positionYIndex, positionXIndex })\n        }\n\n\n        const inBound = (i) => i >= 0 && i <= 7\n        const addToHash = (hash, preventDFS?) => {\n            hash.id = id;\n            const key = hash.positionYIndex + ',' + hash.positionXIndex;\n            const val = indexes[key];\n            if ((val && id !== val.id) || key == this.positionYIndex + ',' + this.positionXIndex) return;\n            if (!val) {\n                indexes[key] = hash;\n\n            } else if (!val.jumpPosition || (hash.jumpPosition || []).length > val.jumpPosition.length) {\n                indexes[key] = hash;\n            } else {\n                //console.error(key,indexes)\n\n\n            }\n            if(preventDFS) return;\n            this.availableMoves(indexes, id + 1, hash.positionYIndex, hash.positionXIndex, hash.jumpPosition || [])\n\n        }\n\n        const analyzeAndBreak = (incY: number, incX: number, i: number, j: number, value: number[][] = []) => {\n\n\n            if (!inBound(incY) || !inBound(incX)) return true;\n\n            const possiblePiece = this.chessBoard.board[incY][incX]\n            if (!possiblePiece) {\n                if (id != 0) return true;\n                addToHash({ positionYIndex: incY, positionXIndex: incX },true)\n\n\n\n\n            } else if (possiblePiece.isPieceWhite === this.isPieceWhite) {\n                // if its same color\n                return true\n\n            } else if (possiblePiece.isPieceWhite !== this.isPieceWhite && inBound(incY + i) && inBound(incX + j) && this.chessBoard.board[incY + i][incX + j] != null && this.chessBoard.board[incY + i][incX + j]?.isPieceWhite != this.isPieceWhite) {\n\n                return true;\n\n            }\n            else if (possiblePiece.isPieceWhite !== this.isPieceWhite && inBound(incY + i) && inBound(incX + j) && this.chessBoard.board[incY + i][incX + j] == null) {\n                // its not the same color and its possible to jump\n\n                value.push([incY, incX]);\n                addToHash({\n                    positionYIndex: incY + i,\n                    positionXIndex: incX + j,\n                    jumpPosition: [...value]\n                })\n\n\n\n            }\n\n            return false;\n        }\n\n\n        // do diagonal \n        const n1: number[][] = [...preArr];\n        for (let i = 1; i < (8 - positionYIndex); i++) {\n            const incY = positionYIndex + i;\n            const incX = positionXIndex + i;\n\n            if (analyzeAndBreak(incY, incX, 1, 1, n1)) {\n                break;\n            }\n\n        }\n        const n2: number[][] = [...preArr];\n        for (let i = 1; i < Math.max(positionYIndex, positionXIndex); i++) {\n            const incY = positionYIndex - i;\n            const incX = positionXIndex - i;\n\n\n            if (analyzeAndBreak(incY, incX, -1, -1, n2)) {\n                break;\n            }\n\n        }\n        const n3: number[][] = [...preArr];\n        for (let i = 1; i < (8 - positionYIndex); i++) {\n            const incY = positionYIndex + i;\n            const incX = positionXIndex - i;\n\n            if (analyzeAndBreak(incY, incX, 1, -1, n3)) {\n                break;\n            }\n        }\n        const n4: number[][] = [...preArr];\n        for (let i = 1; i <= positionYIndex; i++) {\n            const incY = positionYIndex - i;\n            const incX = positionXIndex + i\n\n\n            if (analyzeAndBreak(incY, incX, -1, 1, n4)) {\n                break;\n            }\n        }\n\n        return (Object.values(indexes)).map(index => {\n            return {\n\n                positionYIndex: index.positionYIndex,\n                positionY: CheckerPiece.availableYMovements[index.positionYIndex],\n                positionXIndex: index.positionXIndex,\n                positionX: CheckerPiece.availableXMovements[index.positionYIndex],\n                jumpPosition: index.jumpPosition\n\n            }\n        })\n    }\n\n    clone = () => {\n        return new CheckerQueen(this.chessBoard, this.positionYIndex,this.positionXIndex, this.isPieceWhite,this.id)\n    }\n\n\n}\n","import { CheckerQueen } from \"./CheckerQueen\";\nimport { CheckerPiece } from \"./CheckerPiece\";\nimport { CheckerBoard } from \"./CheckerBoard\";\nimport { HashIndex } from \"../../misc/data\";\n\nexport class CheckerPawn extends CheckerPiece {\n    name = 'pawn'\n    icon = 'fas fa-circle'\n    private _parent = CheckerPiece.prototype\n    constructor(\n        chessBoard: CheckerBoard,\n        positionYIndex: number,\n        positionXIndex: number,\n        isPieceWhite: boolean, ghostId?: number\n    ) {\n        super(chessBoard, positionYIndex, positionXIndex, isPieceWhite, ghostId);\n    }\n\n    move = (yIndex: number, xIndex: number) => {\n\n        return this._parent.move.apply(this, [yIndex, xIndex, () => {\n            // check if its promotable\n            if (this.isPieceWhite && yIndex === 0 || !this.isPieceWhite && yIndex === 7) {\n                // promote\n                const queen = new CheckerQueen(this.chessBoard, yIndex, this.positionXIndex, this.isPieceWhite, this.id);\n\n                this.chessBoard.board[this.positionYIndex][this.positionXIndex] = queen;\n            }\n\n\n        }])\n    }\n\n    availableMoves = (indexes: HashIndex = {}, id = 0, positionYIndex = this.positionYIndex, positionXIndex = this.positionXIndex, preArr = []) => {\n\n        const movements = [\n            [1, 1],\n            [-1, -1],\n            [1, -1],\n            [-1, 1],\n        ]\n\n        const inBound = (i) => i >= 0 && i <= 7\n        const addToHash = (hash, preventDFS?) => {\n            hash.id = id;\n            const key = hash.positionYIndex + ',' + hash.positionXIndex;\n            const val = indexes[key];\n            if ( (val && id !== val.id) || key == this.positionYIndex + ',' + this.positionXIndex) return;\n            if (!val) {\n                indexes[key] = hash;\n\n            } else if (!val.jumpPosition || (hash.jumpPosition || []).length > val.jumpPosition.length) {\n                indexes[key] = hash;\n            } else {\n                //console.error(key,indexes)\n\n\n            }\n            if(preventDFS) return;\n            this.availableMoves(indexes, id + 1, hash.positionYIndex, hash.positionXIndex, hash.jumpPosition || [])\n\n        }\n\n        const analyzeAndBreak = (incY: number, incX: number, i: number, j: number, value: number[][] = []) => {\n\n            if (!inBound(incY) || !inBound(incX)) return true;\n\n\n\n            const possiblePiece = this.chessBoard.board[incY][incX]\n            if (!possiblePiece) {\n                if (id != 0 || \n                    (this.isPieceWhite && positionYIndex < incY) || // avoid white pawns from going back\n                    (!this.isPieceWhite && positionYIndex > incY // avoid black bawns from going back\n                        )) return true;\n                addToHash({ positionYIndex: incY, positionXIndex: incX },true)\n\n\n            } else if (possiblePiece.isPieceWhite === this.isPieceWhite) {\n                // if its same color\n                //   return true\n\n            } else if (possiblePiece.isPieceWhite !== this.isPieceWhite && inBound(incY + i) && inBound(incX + j) && this.chessBoard.board[incY + i][incX + j] == null) {\n                // its not the same color and its possible to jump\n                value.push([incY, incX]);\n\n                addToHash({\n                    positionYIndex: incY + i,\n                    positionXIndex: incX + j,\n                    jumpPosition: value\n                })\n\n\n\n            }\n            return false;\n        }\n\n        const n1: number[][] = [...preArr];\n        movements.forEach(curr => {\n            const incY = positionYIndex + curr[0];\n            const incX = positionXIndex + curr[1];\n\n            // check if it can move a step in y axes and if its own piece isnt on its moves\n            analyzeAndBreak(incY, incX, curr[0], curr[1], n1)\n        })\n\n        return (Object.values(indexes)).map(index => {\n            return {\n\n                positionYIndex: index.positionYIndex,\n                positionY: CheckerPiece.availableYMovements[index.positionYIndex],\n                positionXIndex: index.positionXIndex,\n                positionX: CheckerPiece.availableXMovements[index.positionYIndex],\n                jumpPosition: index.jumpPosition\n            }\n        })\n    }\n    clone = () => {\n        return new CheckerPawn(this.chessBoard, this.positionYIndex,this.positionXIndex, this.isPieceWhite,this.id)\n    }\n\n\n}\n","import { CheckerBoard } from \"../engine/CheckerBoard\";\nimport { CheckerPawn } from \"../engine/CheckerPawn\";\nimport { CheckerQueen } from \"../engine/CheckerQueen\";\n\nexport const checkerPieceDeSerialize = (data:  (string | number | boolean)[], board: CheckerBoard) => {\n     \n    const [\n        id,\n        name,\n        icon,\n        positionYIndex,\n        positionXIndex,\n        isPieceWhite,\n        successfulMovements,\n    ] = data;\n    let piece: CheckerPawn | CheckerQueen | null = null;\n\n    switch (name) {\n        case 'queen':\n\n            piece = new CheckerQueen(board, positionYIndex as number, positionXIndex as number, isPieceWhite as boolean, id as number)\n            break;\n        case 'pawn':\n            piece = new CheckerPawn(board, positionYIndex as number, positionXIndex as number, isPieceWhite as boolean, id as number)\n            break;\n\n        default:\n            return null\n\n    }\n\n    piece.successfulMovements = successfulMovements as number;\n    piece.icon = icon as string;\n\n    return piece;\n}","import { CheckerPiece } from \"./CheckerPiece\";\nimport { CheckerPawn } from \"./CheckerPawn\";\nimport { CheckerQueen } from \"./CheckerQueen\";\n\nimport { PieceMovement } from \"./PieceMovement\";\nimport { checkerPieceDeSerialize } from \"../misc\";\n\n\n\nexport class CheckerBoard {\n    board: CheckerPiece[][] | null[][] = CheckerBoard.newBoard();\n    isWhiteTurnToPlay = false\n    pieceHash: { [id: number]: CheckerPiece } = {}\n    killedHash: { [str: string]: CheckerPiece | null } = {}\n    private movements: PieceMovement[] = [];\n    movementIndex = 0;\n    private initiated = false;\n    constructor(dummy = false) {\n        if (this.initiated || dummy) return\n\n        this.init()\n        this.initiated = true;\n\n    }\n    init() {\n        this.board[0][0] = new CheckerPawn(this, 0, 0, false);\n        this.board[0][2] = new CheckerPawn(this, 0, 2, false);\n        this.board[0][4] = new CheckerPawn(this, 0, 4, false);\n        this.board[0][6] = new CheckerPawn(this, 0, 6, false);\n        this.board[1][1] = new CheckerPawn(this, 1, 1, false);\n        this.board[1][3] = new CheckerPawn(this, 1, 3, false);\n        this.board[1][5] = new CheckerPawn(this, 1, 5, false);\n        this.board[1][7] = new CheckerPawn(this, 1, 7, false)\n        this.board[2][0] = new CheckerPawn(this, 2, 0, false);\n        this.board[2][2] = new CheckerPawn(this, 2, 2, false);\n        this.board[2][4] = new CheckerPawn(this, 2, 4, false);\n        this.board[2][6] = new CheckerPawn(this, 2, 6, false);\n\n\n\n\n        this.board[5][1] = new CheckerPawn(this, 5, 1, true);\n        this.board[5][3] = new CheckerPawn(this, 5, 3, true);\n        this.board[5][5] = new CheckerPawn(this, 5, 5, true);\n        this.board[5][7] = new CheckerPawn(this, 5, 7, true);\n        this.board[6][0] = new CheckerPawn(this, 6, 0, true);\n        this.board[6][2] = new CheckerPawn(this, 6, 2, true);\n        this.board[6][4] = new CheckerPawn(this, 6, 4, true);\n        this.board[6][6] = new CheckerPawn(this, 6, 6, true);\n        this.board[7][1] = new CheckerPawn(this, 7, 1, true);\n        this.board[7][3] = new CheckerPawn(this, 7, 3, true);\n        this.board[7][5] = new CheckerPawn(this, 7, 5, true);\n        this.board[7][7] = new CheckerPawn(this, 7, 7, true);\n\n\n\n        for (let i = 0; i < this.board.length; i++) {\n            for (let j = 0; j < this.board[i].length; j++) {\n                const cell = this.board[i][j];\n                if (cell) {\n                    this.pieceHash[cell.id] = cell;\n\n\n                }\n\n            }\n        }\n\n\n    }\n    static newBoard() {\n        return [\n            [null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null],\n            [null, null, null, null, null, null, null, null],\n        ]\n    }\n\n    toString() {\n        return JSON.stringify(this.board.map(r => r.map(_ => _ ? `${_.id}-${_.name}` : 'null')));\n    }\n    clone = () => {\n        const newCheckerBoard = new CheckerBoard(true);\n        newCheckerBoard.isWhiteTurnToPlay = this.isWhiteTurnToPlay\n        newCheckerBoard.pieceHash = this.pieceHash\n        newCheckerBoard.movements = this.movements\n\n        for (let i = 0; i < this.board.length; i++) {\n            for (let j = 0; j < this.board[i].length; j++) {\n                const cell = this.board[i][j];\n                if (cell) {\n                    newCheckerBoard.board[i][j] = cell.clone();\n\n\n                }\n\n            }\n        }\n        return newCheckerBoard;\n\n    }\n\n    canUndo() {\n        return (this.movementIndex < this.movements.length)\n    }\n    canRedo() {\n        return (this.movementIndex - 1 >= 0)\n    }\n    performUndo() {\n\n        const movement = this.movements[this.movementIndex]\n        const piece = this.board[movement.positionYIndex][movement.positionXIndex];\n\n        if (!piece) return;\n\n        piece.positionYIndex = movement.prevPositionYIndex;\n        piece.positionXIndex = movement.prevPositionXIndex;\n\n        this.board[movement.positionYIndex][movement.positionXIndex] = null;\n        this.board[movement.prevPositionYIndex][movement.prevPositionXIndex] = piece;\n        movement.jumpPosition.forEach(pos => {\n            this.board[pos[0]][pos[1]] = this.killedHash[pos[0] + ',' + pos[1]];\n        })\n        this.movementIndex++;\n    }\n    performRedo() {\n        this.movementIndex--;\n\n        const movement = this.movements[this.movementIndex]\n        const piece = this.board[movement.prevPositionYIndex][movement.prevPositionXIndex];\n        if (!piece) return;\n        this.board[movement.prevPositionYIndex][movement.prevPositionXIndex] = null;\n\n        piece.positionYIndex = movement.positionYIndex;\n        piece.positionXIndex = movement.positionXIndex;\n\n        this.board[movement.positionYIndex][movement.positionXIndex] = piece;\n        movement.jumpPosition.forEach(pos => {\n            this.board[pos[0]][pos[1]] = null;\n        })\n    }\n    addToMovement(movement: PieceMovement) {\n        const n = this.getMovements();\n        n.unshift(movement);\n        this.movements = n;\n        this.movementIndex = 0;\n\n    }\n    getMovements() {\n        return this.movements.slice(this.movementIndex);\n    }\n\n    serialize = (toString = false) => {\n        const board = this.board.map((row: CheckerPiece[] | null[]) => row.map((piece: CheckerPiece | null) => piece == null ? null : piece.serialize()))\n        const movements = this.movements.map(m => m.serialize());\n        const movementIndex = this.movementIndex;\n        const isWhiteTurnToPlay = this.isWhiteTurnToPlay;\n        const killedHash = Object.values(this.killedHash).map((piece: CheckerPiece | null) => piece ? piece.serialize() : null)\n\n        const data = [board, movements, movementIndex, isWhiteTurnToPlay, killedHash]\n\n\n        return toString ? JSON.stringify(data) : data;\n    }\n    static deSerialize = (str: string) => {\n        const checkerBoard = new CheckerBoard(true);\n        const data: (number | boolean | PieceMovement[] | (string | (string | number | boolean)[])[] | (string | (string | number | boolean)[])[][])[] = JSON.parse(str);\n\n        const [_board, _movements, _movementIndex, _isWhiteTurnToPlay, _killedHash] = data;\n        const board = (_board as (string | (string | number | boolean)[] | null)[][]).map((row) => row.map((_piece) => {\n\n\n            if (_piece == null) return null;\n\n            const piece = checkerPieceDeSerialize(_piece as any, checkerBoard);\n            if (piece == null) return null;\n            checkerBoard.pieceHash[piece.id] = piece\n\n            return piece;\n\n        }))\n        const movements = (_movements as any[][]).map(m => new PieceMovement(m[0], m[1], m[2], m[3], m[4], m[5], m[6], m[7], m[8]));\n        const movementIndex = _movementIndex as number;\n        const isWhiteTurnToPlay = _isWhiteTurnToPlay as boolean;\n        const killedHash: { [str: string]: CheckerPiece | null } = {};\n\n        (_killedHash as (string | (string | number | boolean)[] | null)[])\n            .forEach((_piece) => {\n\n\n                if (_piece != null) {\n\n                    const piece = checkerPieceDeSerialize(_piece as any, checkerBoard)\n                    if (piece == null) return;\n                    killedHash[piece?.positionYIndex + ',' + piece?.positionXIndex] = piece\n\n                }\n            })\n\n\n        checkerBoard.board = board as any;\n        checkerBoard.movements = movements\n        checkerBoard.movementIndex = movementIndex\n        checkerBoard.isWhiteTurnToPlay = isWhiteTurnToPlay\n        checkerBoard.killedHash = killedHash\n\n        return checkerBoard;\n    }\n}\n\n\n\n\n","import { useEffect, useRef, useState } from \"react\";\nimport { CheckerBoard } from \"./engine/CheckerBoard\";\nimport './Checkers.css';\nimport { CheckerPiece } from \"./engine/CheckerPiece\";\n\nimport { devLog } from '../env'\nimport { PieceMovement } from \"./engine/PieceMovement\";\nimport { csvGenerator } from \"../misc/functions\";\nimport { f } from \"../misc/data\";\n\n\n\n\nfunction CheckersGame() {\n    const [size, setSize] = useState({\n        boardWidth: f(),\n        pieceWidth: (f()) / 8\n    })\n    const [board, setBoard] = useState([] as CheckerPiece[][] | null[][])\n    const [movementHistory, setMovementHistory] = useState([] as PieceMovement[])\n    const [availableMoves, setAvailableMoves] = useState({} as { [id: string]: number[][] })\n    const [selectedPiece, setSelectedPiece] = useState(null as CheckerPiece | null)\n\n    const checkerBoardRef = useRef(null as any as CheckerBoard);\n\n    const [isWhiteTurnToPlay, setIsWhiteTurnToPlay] = useState(true);\n    const [{ canUndo, canRedo }, setUndoAndRedo] = useState({ canUndo: false, canRedo: false });\n\n\n    function reloadBoard() {\n        checkerBoardRef.current.isWhiteTurnToPlay = !checkerBoardRef.current.isWhiteTurnToPlay\n        setBoard(checkerBoardRef.current.board)\n        setMovementHistory(checkerBoardRef.current.getMovements())\n        setAvailableMoves({});\n        setSelectedPiece(null);\n        setIsWhiteTurnToPlay(checkerBoardRef.current.isWhiteTurnToPlay)\n        setUndoAndRedo({ canRedo: checkerBoardRef.current.canRedo(), canUndo: checkerBoardRef.current.canUndo() })\n    }\n    function init() {\n        checkerBoardRef.current = new CheckerBoard();\n\n        reloadBoard()\n    }\n\n\n    useEffect(() => {\n        init()\n        const cb = () => {\n            const boardWidth = f()\n            const pieceWidth = boardWidth / 8;\n\n            setSize(\n                {\n                    boardWidth,\n                    pieceWidth\n                }\n            )\n\n        }\n        window.addEventListener('resize', cb)\n        return () => {\n            window.removeEventListener('resize', cb)\n        }\n\n\n    }, [])\n\n    function onPieceClick(piece: CheckerPiece | null, y: number, x: number) {\n\n        if (availableMoves[y + \",\" + x]) {\n            if (!selectedPiece?.move(y, x)) {\n                // invalid move\n                return;\n            }\n\n            const possibleJump = availableMoves[y + \",\" + x];\n\n\n            possibleJump.forEach(([y, x]) => {\n                checkerBoardRef.current.killedHash[y + ',' + x] = checkerBoardRef.current.board[y][x];\n                checkerBoardRef.current.board[y][x] = null;\n            })\n\n\n\n\n            reloadBoard()\n\n\n\n\n        } else if (piece) {\n            //devLog(piece.toString())\n            if (isWhiteTurnToPlay !== piece.isPieceWhite) {\n                setAvailableMoves({});\n                setSelectedPiece(null);\n                return;\n            }\n\n\n            // show available moves\n            const a = piece.availableMoves();\n            //console.log(a)\n\n            const _: { [id: string]: number[][] } = {}\n            a.forEach(m => {\n                const val = m.jumpPosition == undefined ? [] : m.jumpPosition;\n\n                _[m.positionYIndex + \",\" + m.positionXIndex] = val\n            });\n\n            setAvailableMoves(_);\n            setSelectedPiece(piece);\n\n        } else {\n            setAvailableMoves({});\n            setSelectedPiece(null);\n        }\n\n    }\n    function performRedo() {\n        checkerBoardRef.current.performRedo();\n        reloadBoard()\n    }\n    function performUndo() {\n        checkerBoardRef.current.performUndo();\n        reloadBoard()\n    }\n    function save(){\n        const data = checkerBoardRef.current.serialize(true);\n        // @ts-ignore\n        localStorage.setItem(\"checkers\",data);\n    }\n    function restore(){\n        const data = localStorage.getItem(\"checkers\");\n        if(!data) return;\n        const board = CheckerBoard.deSerialize(data)\n        board.isWhiteTurnToPlay = !board.isWhiteTurnToPlay\n\n        checkerBoardRef.current = board;\n        reloadBoard()\n\n    }\n\n    return (\n        <div className=\"Whole-Body\">\n\n            <div className=\"Chess-Field\">\n                <div className=\"Chess-Pre-Playable\">\n\n                    <div className=\"Chess-Playable\">\n\n                        <div className='Board' style={{ width: size.boardWidth + 'px', height: size.boardWidth + 'px' }} >\n\n                            {board.map((row: CheckerPiece[] | null[], y: number) => {\n\n                                return (<div key={y} className='Board-Y' style={{ display: 'flex' }}>\n\n\n\n                                    {row.map((piece: CheckerPiece | null, x: number) => {\n\n                                        const shouldHighlight = availableMoves[y + \",\" + x];\n                                        return (<div onClick={() => onPieceClick(piece, y, x)} key={x} className='Board-X' style={{ width: size.pieceWidth + 'px', height: size.pieceWidth + 'px', backgroundColor: (x % 2 === 0) === (y % 2 === 0) ? 'rgba(245, 222, 179, 0.596)' : '' }}>\n                                            <div className={!piece ? '' : (isWhiteTurnToPlay !== piece.isPieceWhite) ? 'Piece-inner-invalid' : 'Piece-inner-valid'} style={{ width: '70%', height: '70%', display: 'flex', justifyContent: 'center', alignItems: 'center', backgroundColor: !(shouldHighlight || piece && piece === selectedPiece) ? '' : 'rgba(255, 255, 0, 0.5)' }}>\n                                                {piece ? <i className={piece.icon} style={{ color: (piece.isPieceWhite ? \"white\" : \"black\") }} ></i> : ''}\n\n                                            </div>\n                                        </div>\n\n\n                                        )\n                                    })}\n\n\n\n                                </div>\n\n\n                                )\n                            })}\n                        </div>\n\n                    </div>\n\n                    <div className=\"text-center\">\n                        {canUndo && <button onClick={performUndo} className=\"m-2\">  <i className=\"fa fa-undo\" /></button>}\n                        {canRedo && <button onClick={performRedo} className=\"m-2\">  <i className=\"fa fa-redo\" /></button>}\n\n\n                    </div>\n                </div>\n                <div className='Side' style={{ padding: '10px' }} >\n                    <div className='' style={{ padding: '0 30px' }} >\n                        Piece To Play\n                        <br />\n                        <i className={'fa fa-circle '} style={{ color: isWhiteTurnToPlay ? 'white' : 'black' }} ></i>\n                        <hr />\n                        <div style={{ textAlign: 'center' }}>\n                        <button onClick={save}><i className=\"fa fa-save\" /></button>\n                        <button onClick={restore}><i className=\"fa fa-upload\" /></button>\n                            {movementHistory.length != 0 && <>\n                                <button onClick={() => { csvGenerator(movementHistory as any) }}><i className=\"fa fa-file-download\" /></button>\n                                <br />\n                            </>}\n                            {movementHistory.map((movement, key) => {\n\n                                return (\n                                    <div style={{ fontSize: '13px', marginBottom: '5px', display: 'flex', justifyContent: 'center' }} key={key}>\n                                        <div style={{ marginRight: '5px' }}>\n                                            <i className={movement.icon} style={{ color: movement.isPieceWhite ? 'white' : 'black' }} />\n                                        </div>\n                                        <div>\n                                            {movement.prevPosition} <i className=\"fa fa-arrow-right\" /> {movement.position}\n                                        </div>\n                                    </div>\n                                )\n\n                            })}\n                        </div>\n                    </div> </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CheckersGame;\n","import {useContext, useEffect, useRef, useState} from \"react\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {StateContext} from \"./StateProvider\";\n\n\nfunction NavBar() {\n    const history = useHistory();\n    const {optionsClicked, setOptionsClicked} = useContext(StateContext)\n\n    return (\n        <nav className=\"navbar navbar-light bg-light\">\n            <span>\n                {history.location.pathname != '/' &&\n                    <span onClick={() => history.goBack()} style={{width: '50px', cursor: 'pointer'}}\n                          className=\"text-center d-inline-block\">\n                    <i className=\"fa fa-arrow-left\"> </i>\n                </span>}\n\n                <Link className=\"navbar-brand\" to=\"/\">\n                    <div style={{width: '50px'}} className=\"d-inline-block text-center\">\n                    <img src=\"favicon.png\" width=\"25\" height=\"25\" className=\"align-top\" alt=\"\"/>\n                    </div>\n                 \n                    <span className=\" d-inline-block\">\n                    Games\n                    </span>\n                </Link>\n\n                <form style={{float:'right'}}>\n                  <span onClick={() => setOptionsClicked(!optionsClicked)} style={{width: '50px', cursor: 'pointer'}}\n                        className=\"text-center d-inline-block form-inline\">\n                        <i className=\"fa fa-cog\"> </i>\n                    </span>\n                </form>\n\n            </span>\n        </nav>\n    )\n\n}\n\nexport default NavBar;\n","import {Tool} from \"./models/Tool\";\n\nexport interface Position {\n    x: number;\n    y: number;\n}\n\nexport type WallType = 'H' | 'V' | 'B';\n\nexport enum Direction {\n    up,\n    down,\n    right,\n    left,\n    undo,\n}\nexport interface PromptData<T,X>{\n    title: string;\n    data:T;\n    cb: (data:X|null) => void\n\n}\n\n\nexport interface ItemState {\n    position: { x: number, y: number },\n    grid: { x: number, y: number },\n    dimensions: { xAxis: number, yAxis: number },\n    color: string,\n    src?: string,\n    noOfLines: number\n    action?: {\n        opened?: boolean\n    }\n}\n\n","export default class Subscription<T> {\n    fns:Set<Function> = new Set<Function>();\n    constructor() {\n    }\n\n    emit = (value:T) => {\n        this.fns.forEach(fn => {\n            fn(value)\n        })\n\n    }\n    subscribe = (fn: Function) => {\n        this.fns.add(fn)\n        return {\n            unsubscribe: () => {\n                this.fns.delete(fn);\n            }\n        }\n    }\n}","import {Direction, PromptData} from \"../types\";\nimport Subscription from \"./Subscription\";\nimport Circle from \"../models/Circle\";\nimport {Tool} from \"../models/Tool\";\n\nexport function gridToPosition(gridX: number, gridY: number) {\n    return {x: gridX * 20, y: gridY * 20};\n}\n\nexport function positionToGrid(x: number, y: number) {\n    return {x: x / 20, y: y / 20};\n}\n\nexport function clear(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n}\n\n\nexport function moveFrame(frameX: number, frameY: number, canvasContainer: HTMLDivElement, player: Circle, stack: {\n    horizontal: any[],\n    vertical: any[]\n}) {\n    const pos = {\n        frameX,\n        frameY,\n    }\n\n    return (direction: Direction, screenGrabbed = false) => {\n\n        const movemtntPixel = 60;\n        if(screenGrabbed){\n            if(direction == Direction.up) canvasContainer.scrollTop-=movemtntPixel;\n            else if(direction == Direction.down) canvasContainer.scrollTop+=movemtntPixel;\n            else if(direction == Direction.right) canvasContainer.scrollLeft+=movemtntPixel;\n            else if(direction == Direction.left) canvasContainer.scrollLeft-=movemtntPixel;\n            return;\n        }\n        if (direction == Direction.up) pos.frameY -= movemtntPixel\n        else if (direction == Direction.down) pos.frameY += movemtntPixel\n        else if (direction == Direction.right) pos.frameX += movemtntPixel\n        else if (direction == Direction.left) pos.frameX -= movemtntPixel\n\n        let distWidth = canvasContainer.clientWidth / 2;\n        let distHeight = canvasContainer.clientHeight / 2;\n\n        let previousInStack: any = null;\n        if (direction === Direction.up && stack.vertical.length) previousInStack = stack.vertical[stack.vertical.length - 1];\n        if (direction === Direction.left && stack.horizontal.length) previousInStack = stack.horizontal[stack.horizontal.length - 1];\n\n        if (direction == Direction.down && pos.frameY >= distHeight) {\n\n            stack.vertical.push({\n                frame: pos.frameY,\n                scroll: canvasContainer.scrollTop\n            })\n            let total = canvasContainer.scrollTop + distHeight;\n            if (total > canvasContainer.scrollHeight) {\n                total = canvasContainer.scrollHeight\n                distHeight = canvasContainer.scrollHeight - canvasContainer.scrollTop\n            }\n            canvasContainer.scrollTop = total;\n            pos.frameY -= distHeight\n\n        }\n\n        if (direction == Direction.up) {\n            if (!previousInStack) return;\n            console.log(previousInStack)\n            if (pos.frameY <= previousInStack.frame) {\n                stack.vertical.pop();\n                canvasContainer.scrollTop = previousInStack.scroll;\n                pos.frameY = previousInStack.frame;\n\n            }\n        }\n\n        if (direction == Direction.right && pos.frameX >= distWidth) {\n            stack.horizontal.push({\n                frame: pos.frameX,\n                scroll: canvasContainer.scrollLeft\n            })\n            let total = canvasContainer.scrollLeft + distWidth;\n            if (total > canvasContainer.scrollWidth) {\n                total = canvasContainer.scrollWidth\n                distWidth = canvasContainer.scrollWidth - canvasContainer.scrollLeft\n            }\n            canvasContainer.scrollLeft = total;\n            pos.frameX -= distWidth\n\n        }\n\n\n        if (direction == Direction.left) {\n            if (!previousInStack) return;\n            if (pos.frameX <= previousInStack.frame) {\n                stack.horizontal.pop();\n                canvasContainer.scrollLeft = previousInStack.scroll;\n                pos.frameX = previousInStack.frame;\n\n            }\n        }\n\n    }\n}\n\n\nexport const keyboardObs = new Subscription()\n\ninterface StageProps {\n    time?: number;\n    toolsPrompt?: PromptData<Tool[], Tool>\n}\n\nexport const stageObs = new Subscription<StageProps>();\n\n","interface Node<T> {\n    val: T,\n    next?: Node<T>,\n    prev?: Node<T>,\n}\n\nexport const node = <T, >(val: T, next?: Node<T>, prev?: Node<T>): Node<T> => {\n\n    return {\n        val,\n        next,\n        prev\n    }\n\n}\n\nexport const LinkedList = <T, >() => {\n    const globalRef = node(0 as any)\n\n    let curr = globalRef.next\n\n    return {\n        head: () => globalRef.next,\n        tail: () => curr,\n        setCurr: (c: Node<T>) => curr = c,\n        curr,\n        values: () => {\n            const arr: T[] = [];\n            let _x = globalRef.next;\n            while (_x != undefined) {\n                arr.push(_x.val)\n                _x = _x.next;\n            }\n\n            return arr;\n        },\n        add: (n: Node<T>) => {\n            if (!curr) {\n                globalRef.next = n;\n                curr = globalRef.next\n                return;\n            }\n\n            curr.next = n;\n            n.prev = curr;\n            curr = curr.next;\n\n        }\n\n    }\n\n}","import {gridToPosition, positionToGrid} from \"../utils\";\nimport {ItemState, Position} from \"../types\";\nimport {LinkedList} from \"../modules/linkedlist\";\n\nexport function getDefaultState() {\n    return {\n        position: {\n            x: 0,\n            y: 0,\n        },\n        grid: {\n            x: 0,\n            y: 0,\n\n        },\n        dimensions: {\n            xAxis: 20,\n            yAxis: 120\n        },\n        color: 'black',\n        noOfLines: 10,\n    }\n}\n\nexport default class Item {\n    protected ctx: CanvasRenderingContext2D;\n    protected state: ItemState = getDefaultState()\n\n\n    constructor(ctx: CanvasRenderingContext2D, gridX: number = 0, gridY: number = 0, style?: Partial<ItemState>) {\n        this.ctx = ctx;\n\n\n        // @ ts-ignore\n        if (style) {\n            this.state = {...this.state, ...style};\n        }\n        if(gridX != undefined && gridY != undefined)this.state.position = gridToPosition(gridX, gridY);\n        this.state.grid = positionToGrid(this.state.position.x, this.state.position.y)\n\n    }\n    public getBoundaries() {\n        const boundaries = [\n            [[0, 0], [0, 0]],\n            [[0, 0], [0, 0]],\n        ]\n        boundaries[0][0][0] = this.state.position.x;\n        boundaries[0][0][1] = this.state.position.y;\n\n        boundaries[0][1][0] = this.state.position.x + this.state.dimensions.xAxis;\n        boundaries[0][1][1] = this.state.position.y;\n\n        boundaries[1][0][0] = this.state.position.x;\n        boundaries[1][0][1] = this.state.position.y + this.state.dimensions.yAxis;\n\n        boundaries[1][1][0] = this.state.position.x + this.state.dimensions.xAxis;\n        boundaries[1][1][1] = this.state.position.y + this.state.dimensions.yAxis;\n\n        return boundaries;\n    }\n\n    public updateGrid(gridX: number, gridY: number) {\n        this.state.position = gridToPosition(gridX, gridY);\n        this.state.grid.x = gridX;\n        this.state.grid.y = gridY;\n\n\n    }\n\n    public draw = {\n        all: () => {\n\n        }\n    }\n    public getState = () => {\n        return this.state;\n    }\n    public debug = {\n        cordinates: () => {\n            this.getBoundaries().forEach(each => {\n                each.forEach(boundary => {\n                    this.ctx.fillText(`${boundary[0]},${boundary[1]}`, boundary[0], boundary[1]);\n                })\n\n            })\n\n        },\n        highlight: () => {\n            this.ctx.beginPath();\n\n            this.ctx.strokeStyle = 'red';\n            this.ctx.strokeRect(\n                this.state.position.x,\n                this.state.position.y,\n                this.state.dimensions.xAxis,\n                this.state.dimensions.yAxis,\n            );\n        },\n\n        all: () => {\n            this.debug.cordinates()\n            this.debug.highlight()\n            console.log('el', this)\n\n        }\n    }\n\n    setActionState(param: { opened: boolean }) {\n        this.state.action = {...this.state.action, ...param}\n    }\n\n    getActionState() {\n        return this.state.action\n    }\n}\n\nexport class StateActionItem<T> extends Item {\n    protected stateActionHistory = LinkedList<T & { second: number }>();\n\n\n    constructor(ctx: CanvasRenderingContext2D, gridX: number = 0, gridY: number = 0, style?: Partial<ItemState>) {\n        super(ctx, gridX, gridY, style)\n\n    }\n\n    timeElapsedAction = (second: number) => {\n\n    }\n\n    public resetToTime = (second: number) => {\n\n    }\n    protected _resetToTime = (second: number) => {\n        let x = this.stateActionHistory.head();\n        let resetNode: typeof x;\n        while (x) {\n            if (x.val.second > second) {\n                if (x.prev) {\n                    resetNode = x.prev;\n                    x.prev.next = undefined;\n\n                    this.stateActionHistory.setCurr(x.prev)\n                }\n            }\n            x = x.next;\n        }\n\n        return resetNode\n    }\n\n\n}\n\n","import {ItemState, Position} from \"../types\";\nimport Item, {getDefaultState} from \"./Item\";\n\nclass Wall extends Item {\n    private readonly type: string;\n\n    constructor(ctx: CanvasRenderingContext2D, gridX: number = 0, gridY: number = 0,  type = 'V', state?: Partial<ItemState>) {\n        super(ctx, gridX, gridY,  state);\n        this.ctx = ctx;\n        this.type = type;\n        this.state.noOfLines =  this.state.dimensions.yAxis/10;\n\n        if (type == 'H') {\n            const temp = this.state.dimensions.xAxis;\n            this.state.dimensions.xAxis = this.state.dimensions.yAxis;\n            this.state.dimensions.yAxis = temp;\n        }\n\n\n    }\n\n    public updateGrid(gridX: number, gridY: number) {\n        this.updateGrid(gridX, gridY);\n\n\n    }\n\n    public draw = {\n        rect: () => {\n            this.ctx.lineWidth = 2\n            this.ctx.beginPath();\n\n            this.ctx.strokeStyle = this.state.color;\n            this.ctx.strokeRect(\n                this.state.position.x,\n                this.state.position.y,\n                this.state.dimensions.xAxis,\n                this.state.dimensions.yAxis,\n            );\n\n            this.ctx.fill();\n\n        },\n        lines: () => {\n            if (this.type === 'V' || this.type === 'B') {\n                const diff = this.state.dimensions.yAxis / this.state.noOfLines;\n                for (let i = 0; i < this.state.noOfLines; i++) {\n                    const _long = (this.state.dimensions.xAxis / 2) + (i * diff);\n\n                    const longWithPosition = _long + this.state.position.y;\n                    const shortWithPosition = this.state.position.x + this.state.dimensions.xAxis\n\n                    if (_long > this.state.dimensions.yAxis) {\n\n                    }\n                    this.ctx.beginPath();\n                    this.ctx.strokeStyle = this.state.color;\n                    this.ctx.moveTo(this.state.position.x, this.state.position.y + (i * diff));\n                    this.ctx.lineTo(shortWithPosition, longWithPosition);\n\n                    this.ctx.stroke();\n                }\n                return;\n            }\n\n\n            if (this.type == 'H') {\n                const diff = this.state.dimensions.xAxis / this.state.noOfLines;\n                for (let i = 0; i < this.state.noOfLines; i++) {\n                    const _short = (this.state.dimensions.yAxis / 2) + (i * diff);\n\n                    const shortWithPosition = _short + this.state.position.x;\n                    const longWithPosition = this.state.position.y + this.state.dimensions.yAxis\n\n                    if (_short > this.state.dimensions.xAxis) {\n\n                    }\n                    this.ctx.beginPath();\n                    this.ctx.strokeStyle = this.state.color;\n                    this.ctx.moveTo(this.state.position.x + (i * diff), this.state.position.y);\n                    this.ctx.lineTo(shortWithPosition, longWithPosition);\n\n                    this.ctx.stroke();\n                }\n            }\n\n        },\n        all: () => {\n\n\n            this.draw.rect();\n            this.draw.lines();\n        }\n    }\n\n}\n\nexport class HWall extends Wall {\n    constructor(ctx: CanvasRenderingContext2D, gridX: number = 0, gridY: number = 0,  style?: Partial<ItemState>) {\n        super(ctx, gridX, gridY, 'H', style)\n    }\n\n}\n\nexport class VWall extends Wall {\n    constructor(ctx: CanvasRenderingContext2D, gridX: number = 0, gridY: number = 0,  style?: Partial<ItemState>) {\n        super(ctx, gridX, gridY, 'V', style)\n    }\n\n}\n","import Item, {StateActionItem} from \"./Item\";\nimport {Position} from \"../types\";\nimport {positionToGrid, stageObs} from \"../utils\";\nimport {node} from \"../modules/linkedlist\";\n\nexport default class Circle extends StateActionItem<{\n    x:number;\n    y:number;\n}> {\n\n\n    constructor(ctx: CanvasRenderingContext2D, gridX: number = 0, gridY: number = 0) {\n        super(ctx, gridX, gridY, {dimensions: {yAxis: 10, xAxis: 10}})\n        this.stateActionHistory.add(node({x: this.state.position.x, y: this.state.position.y,second:0}))\n\n    }\n\n    action = {\n        goTo: (gridX: number, gridY: number) => {\n\n            const previousPosition = {...this.getPreviousPosition()};\n\n            const prevGrid = positionToGrid(previousPosition.x,previousPosition.y);\n\n            const res = {\n                prevPosition: previousPosition,\n                reject: () => {\n                    this.updateGrid(prevGrid.x, prevGrid.y);\n                    this.draw.all();\n                },\n                accept: () => {\n\n                }\n\n            }\n            this.updateGrid(gridX, gridY);\n            return res;\n\n        },\n        down: (n = 1) => {\n            const {x,y} = this.getPreviousGrid();\n            return this.action.goTo(x, y + n)\n        },\n        up: (n = 1) => {\n            const {x,y} = this.getPreviousGrid();\n            return this.action.goTo(x, y - n)\n        },\n        right: (n = 1) => {\n            const {x,y} = this.getPreviousGrid();\n            return this.action.goTo(x + n, y)\n        },\n        left: (n = 1) => {\n            const {x,y} = this.getPreviousGrid();\n            return this.action.goTo(x - n, y)\n        }\n    }\n    public draw = {\n        history: () => {\n            const arr = this.stateActionHistory.values();\n            arr.forEach((curr, i) => {\n                if (i == 0) return;\n                const prev = arr[i - 1];\n                this.ctx.beginPath();\n                this.ctx.strokeStyle = this.state.color;\n                this.ctx.strokeRect(\n                    prev.x,\n                    prev.y,\n                    curr.x - prev.x,\n                    curr.y - prev.y,\n                );\n            })\n\n        },\n        arc: () => {\n            this.ctx.beginPath();\n            this.ctx.arc(\n                this.state.position.x,\n                this.state.position.y,\n                (this.state.dimensions.xAxis) / 2,\n                0,\n                Math.PI * 2,\n                false\n            );\n\n            this.ctx.fillStyle = this.state.color;\n            this.ctx.fill();\n        },\n        all: () => {\n            this.draw.history();\n            this.draw.arc();\n        }\n    }\n\n    public getPlayerMoves() {\n        return this.stateActionHistory.tail()?.val.second || 0\n\n    }\n\n    timeElapsedAction = (currentSecond:number)=> {\n        this.stateActionHistory.add(node({x:this.state.position.x,y:this.state.position.y,second: currentSecond}))\n    }\n\n    resetToTime = (second:number)=> {\n        let resetNode: any = this._resetToTime(second);\n        if(!resetNode) return false;\n\n        this.state.position.x = resetNode.val.x\n        this.state.position.y = resetNode.val.y\n\n        this.state.grid = positionToGrid(resetNode.val.x,resetNode.val.y)\n\n        return true;\n\n    }\n\n    private getPreviousPosition() {\n        return this.stateActionHistory.tail()?.val\n    }\n    private getPreviousGrid() {\n        const {x,y} = this.stateActionHistory.tail()?.val;\n        return positionToGrid(x,y)\n    }\n\n    getLastActionSecond() {\n        const tail = this.stateActionHistory.tail();\n        return (tail?.val.second || 0) - ( tail?.prev?.val.second || 0)\n    }\n}\n","import {ItemState, Position} from \"../types\";\nimport Item from \"./Item\";\n\n\n class ImageItem extends Item{\n    private img = new Image();\n    private imgPromise:Promise<boolean> | null= null\n\n    constructor(ctx: CanvasRenderingContext2D, gridX: number = 0, gridY: number = 0,style?:Partial<ItemState>,src:string = '') {\n        super(ctx, gridX, gridY, style);\n\n        this.img.src = src;\n        this.imgPromise = new Promise((resolve,reject) =>{\n            this.img.onload = () => {\n                resolve(true)\n            }\n        })\n\n    }\n\n    draw = {\n        image:() => {\n            this.imgPromise?.then(() => {\n                this.ctx.drawImage(this.img, this.state.position.x, this.state.position.y, this.state.dimensions.xAxis, this.state.dimensions.yAxis);\n\n            })\n        },\n        all: () => {\n            this.draw.image()\n        }\n\n    }\n}\n\nexport  class Flower extends ImageItem {\n    constructor(ctx: CanvasRenderingContext2D, gridX: number = 0, gridY: number = 0) {\n        super(ctx, gridX, gridY,{dimensions: {yAxis: 80, xAxis: 80}, noOfLines: 2},process.env.PUBLIC_URL + '/assets/flower.png');\n    }\n}\n\nexport  class HCar extends ImageItem {\n    constructor(ctx: CanvasRenderingContext2D, gridX: number = 0, gridY: number = 0) {\n        super(ctx, gridX, gridY,{dimensions: {yAxis: 40, xAxis: 80}, noOfLines: 2},process.env.PUBLIC_URL + '/assets/hcar.png');\n    }\n}","import {ItemState, Position, WallType} from \"../types\";\nimport Item, {getDefaultState, StateActionItem} from \"./Item\";\nimport {node} from \"../modules/linkedlist\";\n\nexport class Gate extends StateActionItem<{\n    opened: boolean;\n}> {\n    private readonly type: WallType;\n\n    constructor(ctx: CanvasRenderingContext2D, gridX: number = 0, gridY: number = 0, type: WallType = 'V', style?: Partial<ItemState>) {\n        super(ctx, gridX, gridY, style);\n\n        this.stateActionHistory.add(node({opened: false, second: 0}))\n        this.state.color = 'black';\n        this.state.action = {\n            opened: false\n        }\n        this.type = type;\n\n        if (type == 'H') {\n            const temp = this.state.dimensions.xAxis;\n            this.state.dimensions.xAxis = this.state.dimensions.yAxis;\n            this.state.dimensions.yAxis = temp;\n        }\n\n\n\n    }\n\n    public updateGrid(gridX: number, gridY: number) {\n        this.updateGrid(gridX, gridY);\n\n\n    }\n\n    public draw = {\n        rect: () => {\n            this.ctx.beginPath();\n\n            this.ctx.strokeStyle = this.state.color;\n            const x = this.state.position.x + (this.type == 'V' ? 5 : 0)\n            const y = this.state.position.y + (this.type == 'H' ? 5 : 0)\n            this.ctx.strokeRect(\n                x,\n                y,\n                this.state.dimensions.xAxis - (this.type == 'V' ? 10 : 0),\n                this.state.dimensions.yAxis - (this.type == 'H' ? 10 : 0),\n            );\n\n            this.ctx.stroke();\n\n        },\n        cross: () => {\n            this.ctx.beginPath();\n            this.ctx.lineWidth = 4\n            this.ctx.strokeStyle = this.state.color;\n\n            const draw = (second = true) => {\n                if (!this.state.action?.opened) return;\n                let x;\n                if (!second) x = this.getBoundaries()[0][0][0] + (this.type == 'H' ? 20 : 0);\n                else x = this.getBoundaries()[0][1][0] - (this.type == 'H' ? 20 : 0);\n                const y = this.getBoundaries()[0][0][1] + (this.type == 'V' ? 20 : 0);\n\n                let endX;\n                if (!second) endX = this.getBoundaries()[1][1][0] - (this.type == 'H' ? 20 : 0);\n                else endX = this.getBoundaries()[1][0][0] + (this.type == 'H' ? 20 : 0);\n\n                const endY = this.getBoundaries()[1][1][1] - (this.type == 'V' ? 20 : 0);\n\n                this.ctx.moveTo(x, y);\n                this.ctx.lineTo(\n                    endX,\n                    endY\n                );\n\n                this.ctx.stroke();\n\n            }\n            draw();\n            draw(false)\n\n        },\n        all: () => {\n            this.draw.rect();\n            this.draw.cross();\n        }\n    }\n\n    timeElapsedAction = (second: number) => {\n        this.stateActionHistory.add(node({opened: this.state.action?.opened || false, second}))\n    }\n\n    resetToTime = (second:number)=> {\n        let resetNode: any  = this._resetToTime(second)\n        if(!resetNode || !this.state.action) return false;\n        this.state.action.opened = resetNode.val.opened\n\n        return true;\n\n    }\n\n}\n\nexport class HGate extends Gate {\n    constructor(ctx: CanvasRenderingContext2D, gridX: number = 0, gridY: number = 0) {\n        super(ctx, gridX, gridY, 'H', {dimensions: {xAxis: 20, yAxis: 80}})\n    }\n\n}\n\nexport class VGate extends Gate {\n    constructor(ctx: CanvasRenderingContext2D, gridX: number = 0, gridY: number = 0) {\n        super(ctx, gridX, gridY, 'V', {dimensions: {xAxis: 20, yAxis: 80}})\n    }\n\n}\n\n","export class Tool{\n    title: string;\n    img: string;\n    elapsed:number;\n    constructor(title: string, img:string,elapsed:number) {\n        this.title = title;\n        this.img = img;\n        this.elapsed = elapsed;\n\n    }\n\n    getElapsed() {\n        return this.elapsed;\n    }\n}\n\nexport class Hammer extends Tool{\n    constructor() {\n        super(\"hammer\",process.env.PUBLIC_URL + '/assets/hammer.avif',6);\n    }\n}\n\nexport class SmallBomb extends Tool{\n    constructor() {\n        super(\"small bomb\",process.env.PUBLIC_URL + '/assets/small-bomb.jpg',6);\n    }\n}","import {ItemState, Position, WallType} from \"../types\";\nimport Item, {getDefaultState, StateActionItem} from \"./Item\";\nimport {node} from \"../modules/linkedlist\";\nimport {Gate} from \"./Gate\";\n export abstract  class SafeBox extends StateActionItem<{\n    opened: boolean;\n}> {\n    private type: WallType;\n\n     private img?: HTMLImageElement;\n     private imgPromise?:Promise<boolean>;\n\n    constructor(ctx: CanvasRenderingContext2D, gridX: number = 0, gridY: number = 0, type: WallType = 'V', style?: Partial<ItemState>) {\n        super(ctx, gridX, gridY, style);\n\n        this.stateActionHistory.add(node({opened: false, second: 0}))\n        this.state.color = 'black';\n        this.state.action = {\n            opened: false\n        }\n        this.type = type;\n\n        if(this.state.src){\n            this.img = new Image();\n            this.img.src = this.state.src;\n            this.imgPromise = new Promise((resolve,reject) => {\n                if(!this.img) return resolve(true);\n                this.img.onload = () => {\n                    resolve(true)\n                }\n            })\n        }\n\n\n    }\n\n    public updateGrid(gridX: number, gridY: number) {\n        this.updateGrid(gridX, gridY);\n\n\n    }\n\n    public draw = {\n        ui: () => {\n            if(this.imgPromise && this.img){\n\n                this.imgPromise.then(() => {\n                    if(!this.img)return;\n                    this.ctx.drawImage(this.img, this.state.position.x, this.state.position.y, this.state.dimensions.xAxis, this.state.dimensions.yAxis);\n\n                })\n                return;\n            }\n            this.ctx.beginPath();\n            this.ctx.strokeStyle = this.state.color;\n            const x = this.state.position.x\n            const y = this.state.position.y\n            this.ctx.strokeRect(\n                x,\n                y,\n                this.state.dimensions.xAxis - (this.type == 'V' ? 10 : 0),\n                this.state.dimensions.yAxis - (this.type == 'H' ? 10 : 0),\n            );\n\n            if(this.type =='B'){\n                this.ctx.arc(\n                    x + (this.state.dimensions.xAxis/2),\n                    y + (this.state.dimensions.yAxis/2),\n                    (this.state.dimensions.xAxis) / 4,\n                    0,\n                    Math.PI * 2,\n                    false\n                );\n            }\n\n\n            this.ctx.stroke();\n\n        },\n        cross: () => {\n            this.ctx.beginPath();\n            this.ctx.lineWidth = 2\n            this.ctx.strokeStyle = this.state.color;\n\n            const draw = (second = true) => {\n                if (!this.state.action?.opened) return;\n                let x;\n                if (!second) x = this.getBoundaries()[0][0][0] + (this.type == 'H' ? 5 : 0);\n                else x = this.getBoundaries()[0][1][0] - (this.type == 'H' ? 5 : 0);\n                const y = this.getBoundaries()[0][0][1] + (this.type == 'V' ? 5 : 0);\n\n                let endX;\n                if (!second) endX = this.getBoundaries()[1][1][0] - (this.type == 'H' ? 5 : 0);\n                else endX = this.getBoundaries()[1][0][0] + (this.type == 'H' ? 5 : 0);\n\n                const endY = this.getBoundaries()[1][1][1] - (this.type == 'V' ? 5 : 0);\n\n                this.ctx.moveTo(x, y);\n                this.ctx.lineTo(\n                    endX,\n                    endY\n                );\n\n                this.ctx.stroke();\n\n            }\n            draw();\n            draw(false)\n\n        },\n        all: () => {\n            this.draw.ui();\n            this.draw.cross();\n        }\n    }\n\n    timeElapsedAction = (second: number) => {\n        this.stateActionHistory.add(node({opened: this.state.action?.opened || false, second}))\n    }\n\n    resetToTime = (second:number)=> {\n        let resetNode: any  = this._resetToTime(second)\n        if(!resetNode || !this.state.action) return false;\n        this.state.action.opened = resetNode.val.opened\n\n        return true;\n\n    }\n\n}\n\nexport class VSafeBox extends SafeBox {\n    constructor(ctx: CanvasRenderingContext2D, gridX: number = 0, gridY: number = 0) {\n        super(ctx, gridX, gridY, 'V', {dimensions: {xAxis: 20, yAxis: 40}})\n    }\n\n}\n\nexport class HSafeBox extends SafeBox {\n    constructor(ctx: CanvasRenderingContext2D, gridX: number = 0, gridY: number = 0) {\n        super(ctx, gridX, gridY, 'H', {dimensions: {xAxis: 40, yAxis: 20}})\n    }\n\n}\nexport class MediumSafeBox extends SafeBox {\n    constructor(ctx: CanvasRenderingContext2D, gridX: number = 0, gridY: number = 0) {\n        super(ctx, gridX, gridY, 'B', {dimensions: {xAxis: 60, yAxis: 60},})\n    }\n\n}","import {HWall, VWall} from \"../models/Wall\";\nimport Item, {StateActionItem} from \"../models/Item\";\nimport {keyboardObs, moveFrame, stageObs} from \"../utils\";\nimport Circle from \"../models/Circle\";\nimport {Flower, HCar} from \"../models/ImageItem\";\nimport {Gate, HGate, VGate} from \"../models/Gate\";\nimport {Direction} from \"../types\";\nimport {Hammer, SmallBomb} from \"../models/Tool\";\nimport {getStageProps} from \"../../../misc/StateProvider\";\nimport {HSafeBox, MediumSafeBox, SafeBox, VSafeBox} from \"../models/SafeBox\";\n\nconst MOVEMENT_SPEED = 3;\n\n\nexport default class Scene1 {\n    pos = {\n        x: 7,\n        y: 10\n    }\n    scene: (Item | null)[][] = [];\n    private currentSecond = 0;\n    private readonly canvasContainer: HTMLDivElement;\n    private readonly canvas: HTMLCanvasElement;\n    private readonly ctx: CanvasRenderingContext2D;\n    public player: Circle = null as any;\n    public generateGrid: any = null as any;\n    private stack = {\n        horizontal: [] as any [],\n        vertical: [] as any [],\n    }\n    private readonly keyCb = null as any\n\n\n    constructor(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D, canvasContainer: HTMLDivElement, generateGrid: (canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) => void) {\n        this.canvasContainer = canvasContainer;\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.generateGrid = generateGrid;\n\n\n        this.render();\n\n        this.keyCb = this.getKeyCb()\n\n        keyboardObs.subscribe((val) => {\n            this.keyCb(null, val)\n        })\n\n        document.addEventListener('keydown', this.keyCb, true)\n\n\n    }\n\n    public destroy() {\n        document.removeEventListener('keydown', this.keyCb, true)\n\n    }\n\n    private generateScenes() {\n        if (this.scene.length == 0) {\n            this.player = new Circle(this.ctx, this.pos.x + (-0.8 * 5), this.pos.y + (-1.4 * 5));\n            const car = new HCar(this.ctx, this.pos.x + (-1.2 * 5), this.pos.y + (-1.6 * 5))\n            this.scene = [\n                [this.player],\n                [car],\n\n                [new HWall(this.ctx, this.pos.x, this.pos.y + (0.0 * 5), {\n                    dimensions: {\n                        yAxis: 120,\n                        xAxis: 20\n                    }\n                }), new HGate(this.ctx, this.pos.x + (1.2 * 5), this.pos.y + (0 * 5)),\n                    new HWall(this.ctx, this.pos.x + (2.0 * 5), this.pos.y + (0 * 5), {\n                        dimensions: {\n                            yAxis: 540,\n                            xAxis: 20\n                        },\n\n                    })],\n\n                [new VWall(this.ctx, this.pos.x, this.pos.y + (0.2 * 5), {\n                    dimensions: {\n                        xAxis: 20,\n                        yAxis: 340\n                    },\n\n                }),\n                    new HSafeBox(this.ctx, this.pos.x + (2.6 * 5), this.pos.y + (0.2 * 5)),\n                    new VSafeBox(this.ctx, this.pos.x + (0.2 * 5), this.pos.y + (0.8 * 5)),\n                    new MediumSafeBox(this.ctx, this.pos.x + (0.2 * 5), this.pos.y + (1.9 * 5)),\n                    new VWall(this.ctx, this.pos.x + (7.2 * 5), this.pos.y + (0.2 * 5), {\n                    dimensions: {\n                        xAxis: 20,\n                        yAxis: 760\n                    }\n                })],\n                [new VGate(this.ctx, this.pos.x, this.pos.y + (3.6 * 5))],\n                [new VWall(this.ctx, this.pos.x, this.pos.y + (4.4 * 5), {\n                    dimensions: {\n                        yAxis: 340,\n                        xAxis: 20\n                    }\n                })],\n\n                [new HWall(this.ctx, this.pos.x + (0.0 * 5), this.pos.y + (7.8 * 5), {\n                    dimensions: {\n                        yAxis: 740,\n                        xAxis: 20\n                    }\n                }),],\n\n                /**\n                 * items\n                 *\n                 * */\n\n                /**\n                 * flower\n                 *\n                 * */\n                [\n                    new Flower(this.ctx, this.pos.x + (1.2 * 5), this.pos.y + (3.6 * 5)),\n                    new Flower(this.ctx, this.pos.x + (2.4 * 5), this.pos.y + (3.6 * 5)),\n\n                ]\n            ];\n\n        }\n\n        this.scene.forEach(row => {\n            row.forEach(el => {\n                if (!el) return;\n                el.draw.all();\n            })\n        })\n    }\n\n    private validateMove = async (direction: Direction, move: {\n        prevPosition: { x: number, y: number },\n        reject: () => void,\n        accept: () => void\n    }) => {\n\n\n        const isVertical = direction == Direction.up || direction == Direction.down;\n        const isHorizontal = !isVertical;\n        const increments = [1, 2, 3, 4, 5, 6].map((i,) => ((isVertical ? move.prevPosition.y : move.prevPosition.x) + (((direction == Direction.up || direction === Direction.left) ? -i : i) * 10)));\n\n        const playerPosition = this.player.getState().position;\n        for (let pos of increments) {\n            for (let row of this.scene) {\n                for (let el of row) {\n                    if (!el || el instanceof Circle || el instanceof HCar) continue;\n                    const boundary = el.getBoundaries();\n\n                    if (\n                        (isHorizontal ? pos : playerPosition.x) > boundary[0][0][0]\n                        && (isHorizontal ? pos : playerPosition.x) < boundary[0][1][0]\n                        && (isVertical ? pos : playerPosition.y) > boundary[0][0][1]\n                        && (isVertical ? pos : playerPosition.y) < boundary[1][0][1]\n\n                    ) {\n                        // check proximity\n\n                        return await this.itemInteraction(el)\n                    }\n\n                }\n\n            }\n        }\n        return 1\n\n\n    }\n\n    private itemInteraction(el: Item): Promise<number> {\n        return new Promise((resolve) => {\n            /**\n             * Check if item hit is interactable\n             */\n            el.debug.all()\n            if (!(el instanceof StateActionItem)) return resolve(0);\n            const isGate = el instanceof Gate;\n            const isSafeBox = el instanceof SafeBox;\n\n                if (  el.getState().action?.opened) {\n                    if (isGate )return resolve(1);\n                    if(isSafeBox) return resolve(0)\n                }\n\n                stageObs.emit({\n                    toolsPrompt: {\n                        title: \"Tools\",\n                        data: [new Hammer(), new SmallBomb()],\n                        cb: (tool) => {\n                            stageObs.emit({toolsPrompt: undefined})\n                            if (!tool) return resolve(0);\n                            // validate\n                            el.setActionState({opened: true})\n                            el.timeElapsedAction(this.currentSecond + tool.getElapsed())\n                            this.render()\n\n                            return resolve(tool.getElapsed())\n                        }\n                    }\n                })\n\n                return;\n\n\n        })\n    }\n\n    private clearCanvas() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    }\n\n    private render() {\n        this.clearCanvas()\n        this.generateGrid()\n        this.generateScenes()\n        stageObs.emit({time: this.player.getPlayerMoves()})\n    }\n\n    private undo() {\n        if (this.currentSecond == 0) return;\n        this.currentSecond -= this.player.getLastActionSecond();\n        this.scene.forEach(row => {\n            row.forEach(el => {\n                if (!el || !(el instanceof StateActionItem)) return;\n\n                el.resetToTime(this.currentSecond)\n            })\n        })\n\n        this.render();\n        return;\n    }\n\n    private getKeyCb = () => {\n        const _moveFrame = moveFrame(\n            this.player.getState().position.x,\n            this.player.getState().position.y,\n            this.canvasContainer, this.player, this.stack);\n\n\n        return async (e: KeyboardEvent, direction?: Direction) => {\n            e = e || window.event;\n            if ((e && e.keyCode == 90 && e.ctrlKey) || direction === Direction.undo) return this.undo()\n            let valid = false;\n            let move: { prevPosition: { x: number, y: number }, reject: () => void, accept: () => void } = null as any;\n\n            if (e.keyCode == 38 || direction === Direction.up) {\n                direction = Direction.up\n                valid = true;\n                // up arrow\n                if (!getStageProps().screenGrabbed)\n                    move = this.player.action.up(MOVEMENT_SPEED);\n\n            } else if (e.keyCode == 40 || direction === Direction.down) {\n                direction = Direction.down\n                valid = true;\n                // down arrow\n                if (!getStageProps().screenGrabbed)\n                    move = this.player.action.down(MOVEMENT_SPEED);\n\n            } else if (e.keyCode == 37 || direction === Direction.left) {\n                direction = Direction.left\n                valid = true;\n                // left arrow\n                if (!getStageProps().screenGrabbed)\n                    move = this.player.action.left(MOVEMENT_SPEED);\n            } else if (e.keyCode == 39 || direction === Direction.right) {\n                direction = Direction.right\n                valid = true;\n                // right arrow\n                if (!getStageProps().screenGrabbed)\n                    move = this.player.action.right(MOVEMENT_SPEED);\n\n            }\n\n            if (valid && direction != undefined) {\n                if (getStageProps().screenGrabbed) return _moveFrame(direction, true);\n                const elapsed = await this.validateMove(direction, move);\n                if (elapsed === 0) return move.reject();\n                if (elapsed != 1) {\n                    move.reject()\n                } else {\n                    _moveFrame(direction)\n                }\n                this.currentSecond += elapsed;\n                this.player.timeElapsedAction(this.currentSecond)\n                this.render()\n            }\n        }\n\n    };\n}","import Scene1 from \"./scenes/Scene1\";\n\nfunction drawLines(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D, horizontal = true) {\n    const size = 20;\n    let totalDrawn = 0;\n    let group = 0;\n    const boundary = (horizontal ? canvas.height : canvas.width);\n    while (totalDrawn < boundary) {\n        ctx.beginPath();\n        if (horizontal) {\n            ctx.moveTo(0, totalDrawn);\n            ctx.lineTo(canvas.width, totalDrawn);\n        } else {\n            ctx.moveTo(totalDrawn, 0);\n            ctx.lineTo(totalDrawn, canvas.height);\n        }\n\n        if (totalDrawn == 0 || group == 3) {\n            ctx.lineWidth = 3;\n            ctx.strokeStyle = \"#c2a667\";\n            //ctx.strokeStyle = \"red\";\n            group = 0;\n        } else {\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = \"#c1a46a\"\n        }\n        ctx.stroke();\n        totalDrawn += size;\n        group++;\n    }\n\n\n}\n\n\nfunction drawGrid(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\n    // Add behind elements.\n    ctx.globalCompositeOperation = 'destination-under'\n    // Now draw!\n    ctx.fillStyle = \"#e3ca8c\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    drawLines(canvas, ctx, true)\n    drawLines(canvas, ctx, false)\n}\n\nexport const draw = (canvas: HTMLCanvasElement | null, canvasContainer: HTMLDivElement | null) => {\n    if (!canvas || !canvasContainer) return;\n    const ctx = canvas.getContext(\"2d\");\n    if (!ctx) return;\n    canvas.width = 1000;\n    canvas.height = 1400;\n\n    new Scene1(canvas,ctx,canvasContainer, () => {\n        drawGrid(canvas, ctx)\n    })\n\n};\n\n\n\n","export function Button(props: any) {\n    const style = {\n        borderRadius: '5px',\n        backgroundColor: 'rgba(73,110,83,255)',\n        padding: '5px 25px',\n            ...(props.style || {})\n    }\n    if(props.disabled){\n        style.backgroundColor = undefined as any\n    }\n    return (\n        <button  {...props} style={style} >\n            {props.children}\n        </button>\n    )\n}\n\nexport function UndoButton(props:any){\n    return (\n        <Button {...props}  style={{backgroundColor:'gray', padding:'5px', ...(props.style|| {})}} >\n            <i className={'fa fa-undo'} style={{color: 'black', fontSize: '20px'}}/>\n        </Button>\n    )\n}\n\nexport function GrabButton(props:any){\n    const enabled = props.enabled;\n    return (\n        <Button {...props}  style={{backgroundColor:'gray', padding:'5px', ...(props.style|| {})}} >\n            <i className={(!enabled?'fa-regular':'fa-solid')+' fa-hand'} style={{color: 'black', fontSize: '20px'}}/>\n        </Button>\n    )\n}\n\nexport function CheckButton(props:any){\n    return (\n        <Button {...props}>\n            <i className={'fa fa-check'} style={{color: props.disabled ?'gray':'#41874c', fontSize: '25px'}}/>\n        </Button>\n    )\n}\n\nexport function CancelButton(props:any){\n    return (\n        <Button  {...props}>\n            <i className={'fa fa-close'} style={{color: props.disabled ?'gray':'red', fontSize: '25px'}}/>\n        </Button>\n    )\n}","import './StolenIn60Seconds.css';\nimport {useContext, useEffect, useRef, useState} from \"react\";\nimport {draw} from \"./misc/draw\";\nimport {getStageProps, StateContext} from \"../misc/StateProvider\";\nimport {Direction, PromptData} from \"./misc/types\";\nimport {keyboardObs, stageObs} from \"./misc/utils\";\nimport {Hammer, Tool} from \"./misc/models/Tool\";\nimport {Button, CancelButton, CheckButton, GrabButton, UndoButton} from \"./components/Button\";\n\n\nfunction Prompt(props: { data?: PromptData<Tool[], Tool>, dataRef?: any }) {\n    const data = props.data;\n    const [selectedTool, setSelectedTool] = useState(null as unknown as Tool);\n\n    if (!data) return <></>;\n    return <div style={{\n        position: 'fixed',\n        top: '0px',\n        width: '100vw',\n        height: '100vh',\n        zIndex: 10,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    }}>\n\n\n        <div style={{background: '#b5aaa0', width: '100%', maxWidth: '500px', padding: '5px'}}>\n            <div style={{background: '#6f768a', padding: '2px', marginBottom: '10px'}}>\n                {data.title}\n            </div>\n\n            <div style={{}}>\n                {data.data.map(tool => {\n                    const activeTool = tool.title == selectedTool?.title;\n                    return (\n                        <div key={tool.title} onClick={() => {\n                            setSelectedTool(tool)\n                        }} style={{\n\n                            marginLeft: '10px',\n                            marginBottom: '5px',\n                            display: 'flex',\n                            overflow: 'hidden',\n                            padding: '5px',\n                            borderRadius: '5px',\n                            border: '1px solid transparent',\n                            ...(activeTool ? {\n\n                                border: '1px solid white'\n                            } : {})\n\n                        }}>\n                            <div style={{\n                                background: '#b4aaa2',\n                                borderRadius: '5px',\n                                width: '50px',\n                                height: '50px',\n                                display: 'flex',\n                                overflow: 'hidden',\n\n                            }}>\n                                <img style={{width: '100%'}} src={tool.img}/>\n                            </div>\n                            <div style={{marginLeft: '10px'}}>\n                                {tool.title}\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n\n\n            <br/>\n            <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                <CheckButton onClick={() => props.dataRef.cb(selectedTool)} disabled={!selectedTool}/>\n\n                <CancelButton onClick={() => props.dataRef.cb(null)}/>\n            </div>\n\n            {/*<div style={{}}>*/}\n            {/*    {[1, 2, 3, 4, 5, 6].map(tool => {*/}\n            {/*        return (*/}\n            {/*            <div style={{*/}\n            {/*                background: '#b4aaa2',*/}\n            {/*                borderRadius: '5px',*/}\n            {/*                width: '60px',*/}\n            {/*                height: '60px',*/}\n            {/*                display: 'inline-block',*/}\n            {/*                margin: '5px',*/}\n            {/*                overflow:'hidden',*/}\n            {/*                */}\n            {/*            }}>*/}\n            {/*                <img style={{width:'100%'}} src={process.env.PUBLIC_URL + '/assets/hammer.avif'}/>*/}\n            {/*            </div>*/}\n            {/*        )*/}\n            {/*    })}*/}\n            {/*</div>*/}\n        </div>\n    </div>\n}\n\nfunction TimePill(props: any) {\n    const min = Math.floor(props.time / 60);\n    const seconds = props.time % 60;\n    return <div style={{\n        background: '#ada69c',\n        borderRadius: '5px',\n        padding: '2.5px 5px',\n        display: 'inline-block',\n        color: '#faf985',\n        fontWeight: 'bold',\n        fontSize: '22px'\n    }}>\n        {min < 10 ? '0' + min : min}:{seconds < 10 ? '0' + seconds : seconds}\n    </div>\n\n}\n\nfunction StageUI() {\n    const {stageProps, setStageProps} = useContext(StateContext);\n\n    useEffect(() => {\n        const obs = stageObs.subscribe((val) => {\n\n            if (val.time != undefined) {\n                stageProps.time = val.time;\n            }\n            stageProps.toolsPrompt = val.toolsPrompt;\n            setStageProps({...stageProps})\n        })\n        return () => {\n            obs.unsubscribe()\n        }\n\n    }, [])\n\n    function BottomPanel() {\n        return <div style={{position: 'fixed', bottom: '0px', width: '100vw', background: '#213c42', zIndex: 2}}\n                    className={'p-2'}>\n            <div style={{textAlign: 'right'}}>\n                {(!!stageProps.time) && <UndoButton style={{margin:0,marginRight: '5px'}} onClick={() => {\n                    keyboardObs.emit(Direction.undo)\n                }}/>}\n\n                <GrabButton enabled={stageProps.screenGrabbed} style={{margin:0,marginRight: '5px'}} onClick={() => {\n                    setStageProps({...stageProps,screenGrabbed:!stageProps.screenGrabbed})\n                }}/>\n\n                <TimePill time={stageProps.time}/>\n            </div>\n\n            <br/>\n\n\n        </div>\n    }\n\n    return (<>\n            <Prompt data={stageProps.toolsPrompt} dataRef={getStageProps().toolsPrompt}/>\n            <BottomPanel/>\n\n        </>\n    )\n\n}\n\nexport default StageUI;\n","import './StolenIn60Seconds.css';\nimport {useContext, useEffect, useRef} from \"react\";\nimport {draw} from \"./misc/draw\";\nimport {StateContext} from \"../misc/StateProvider\";\nimport StageUI from \"./StageUI\";\nimport {useSwipeable} from \"react-swipeable\";\nimport {keyboardObs} from \"./misc/utils\";\nimport {Direction} from \"./misc/types\";\n\nfunction StolenIn60SecondsGame() {\n    const {stageProps} = useContext(StateContext);\n    const canvasRef = useRef<HTMLCanvasElement>(null)\n    const canvasContainerRef = useRef<HTMLDivElement>(null)\n\n\n    useEffect(() => {\n        draw(canvasRef.current, canvasContainerRef.current)\n    }, [])\n\n    const handlers = useSwipeable({\n        onSwiped: (eventData) => {\n            if (eventData.dir === 'Left') keyboardObs.emit(Direction.left)\n            if (eventData.dir === 'Right') keyboardObs.emit(Direction.right)\n            if (eventData.dir === 'Up') keyboardObs.emit(Direction.up)\n            if (eventData.dir === 'Down') keyboardObs.emit(Direction.down)\n        },\n\n        ...{\n            delta: 10,                             // min distance(px) before a swipe starts. *See Notes*\n            preventScrollOnSwipe: false,           // prevents scroll during swipe (*See Details*)\n            trackTouch: true,                      // track touch input\n            trackMouse: false,                     // track mouse input\n            rotationAngle: 0,                      // set a rotation angle\n            swipeDuration: Infinity,               // allowable duration of a swipe (ms). *See Notes*\n            touchEventOptions: {passive: true},  // options for touch listeners (*See Details*)\n\n        }\n\n    });\n    return (\n        <div {...handlers}>\n            <div ref={canvasContainerRef} className={\"StolenIn60SecondsGame \"+ (!stageProps.screenGrabbed ? \"prevent-grab\":\"\")}>\n                <canvas ref={canvasRef} style={{touchAction: 'auto'}}></canvas>\n                <StageUI/>\n            </div>\n        </div>\n    );\n}\n\nexport default StolenIn60SecondsGame;\n","import logo from './logo.svg';\nimport { BrowserRouter, Link, Redirect, Route, Router, Switch } from 'react-router-dom'\nimport ChessGame from './chess';\nimport Home from './Home';\nimport CheckersGame from './checkers';\nimport NavBar from './misc/Navbar';\nimport {useContext, useState} from \"react\";\nimport {StateContext, StateProvider} from \"./misc/StateProvider\";\nimport StolenIn60SecondsGame from \"./StolenIn60Seconds\";\n\nfunction App() {\n  const {showNav, setShowNav} = useContext(StateContext);\n\n  return (\n\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <NavBar/>\n      <Switch>\n        <Route path=\"/chess\" component={ChessGame} />\n        <Route path=\"/checkers\" component={CheckersGame} />\n        <Route path=\"/stolen-in-60-seconds\" component={StolenIn60SecondsGame} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {StateProvider} from \"./misc/StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <StateProvider>\n\n      <App />\n      </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}